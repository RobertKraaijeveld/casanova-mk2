// Implementation file for parser generated by fsyacc
module CasanovaCompiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"

#nowarn "1182"  // generated code has lots of unused "parseState"   
#nowarn "62"
open Microsoft.FSharp.Text.Parsing
open System
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Compiler.ErrorLogger
open Internals.Utils
open CasanovaCompiler.ParseAST


let printfn (s : string) = System.Console.WriteLine(s)

#if DEBUG
let debugPrint(s) =
    //if Internal.Utilities.Text.Parsing.Flags.debug then 
        printfn s
#else
let debugPrint(s) = ignore s 
#endif


let isSome x = match x with None -> false | _ -> true
let patFromParseError (e:SynPat) = SynPat.FromParseError(e, e.Range)
let isNone x = match x with None -> true | _ -> false
let frontAndBack l = 
  let rec loop acc l = 
    match l with
    | [] -> 
      System.Diagnostics.Debug.Assert(false, "empty list")
      invalidArg "l" "empty list" 
    | [h] -> List.rev acc,h
    | h::t -> loop  (h::acc) t
  loop [] l
let isNil x = match x with [] -> true | _ -> false
let nonNil x = match x with [] -> false | _ -> true
let rec last l = match l with [] -> failwith "last" | [h] -> h | _::t -> last t
let isUpper (s:string) = 
    s.Length >= 1 && System.Char.IsUpper s.[0] && not (System.Char.IsLower s.[0])
let isNull (x : 'T) = match (x :> obj) with null -> true | _ -> false
let isNonNull (x : 'T) = match (x :> obj) with null -> false | _ -> true
let nonNull msg x = if isNonNull x then x else failwith ("null: " ^ msg) 
let mkRange f b e = b
let IsValidPrefixOperatorUse s = 
    match s with 
    | "?+" | "?-" | "+" | "-" | "+." | "-." | "%" | "%%" | "&" | "&&" -> true
    | _ -> s.[0] = '!' || (s.[0] = '~' && String.forall (fun c -> c = s.[0]) s)
    
let IsValidPrefixOperatorDefinitionName s = 
    match s with 
    | "~?+" | "~?-" | "~+" | "~-" | "~+." | "~-." | "~%" | "~%%" | "~&" | "~&&" -> true
    | _ -> (s.[0] = '!' && s <> "!=") || (s.[0] = '~' && String.forall (fun c -> c = s.[0]) s)
        
let MangledGlobalName = "`global`"

let opNameCons = CompileOpName "::"
let opNameNil = CompileOpName "[]"
let opNameEquals = CompileOpName "="
let opNameEqualsNullable = CompileOpName "=?"
let opNameNullableEquals = CompileOpName "?="
let opNameNullableEqualsNullable = CompileOpName "?=?"
let mkSynOptionalExpr m xopt = 
    match xopt with 
    | None -> mkSynLidGet m [] "None"
    | Some x  -> SynExpr.App(ExprAtomicFlag.NonAtomic, false, mkSynLidGet m [] "Some",x,m)



let mkUnderscoreRecdField m = LongIdentWithDots([ident("_", m)], []), false


let mkSynDoBinding (strict,expr,m) = 
    Binding ((if strict then SynPat.Const(SynConst.Unit,m) else SynPat.Wild m),
             expr,SynInfo.emptySynValData, m)



let rebindRanges first fields lastSep = 
    let rec run (name, value) l acc = 
        match l with
        | [] -> List.rev ((name, value, lastSep)::acc)
        | (f, m)::xs -> run f xs ((name, value, m)::acc)
    run first fields []

let reportParseErrorAt m s = errorR(Error(s,m))

let unionRangeWithPos (r:Position) p = r

let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_,_,m)                      -> reportParseErrorAt m (FSComp.SR.parsEofInHashIf())
  | LexCont.String (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInString())
  | LexCont.TripleQuoteString (_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteString())
  | LexCont.VerbatimString (_,m)                  -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())
  | LexCont.Comment (_,_,m)                       -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.SingleLineComment (_,_,m)             -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.StringInComment (_,_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())
  | LexCont.VerbatimStringInComment (_,_,m)       -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())
  | LexCont.TripleQuoteStringInComment (_,_,m)    -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteStringInComment())
  | LexCont.MLOnly (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())
  | LexCont.EndLine(LexerEndlineContinuation.Skip(_,_,m)) -> reportParseErrorAt m (FSComp.SR.parsEofInDirective())
  | LexCont.EndLine(LexerEndlineContinuation.Token(stack))
  | LexCont.Token(stack) -> 
      match stack with 
      | [] -> ()
      | (_,m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())

//                BindingSetPreAttrs(letRange, isRec, isUse, builderFunction, wholeRange)
//type BindingSet = BindingSetPreAttrs of Position * bool * bool *  SynBinding list * Position

let rec split pred l =
    match l with
    | [] -> [],[]
    | x :: xs ->
        let res1,res2 = split pred xs
        if pred x then
            (x :: res1),res2
        else
            res1,(x :: res2)

let mkLocalBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_),body) = 
   let decls = declsPreAttrs
   SynExpr.LetOrUse (isRec,isUse,decls,body,mWhole) 

let mkDefnBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_bindingSetRange),attrs,vis,attrsm) = 
    []

let idOfPat m p = 
    match p with 
    | SynPat.LongIdent(LongIdentWithDots([id],_),_,_,_) -> id
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if nonNil a1 && nonNil a2 then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed());
    a1 @ a2

let unionRangeWithListBy projectRangeFromThing m listOfThing = 
    (m, listOfThing) ||> List.fold (fun m thing -> unionRanges m (projectRangeFromThing thing))

let rangeOfLongIdent(lid:LongIdent) =
    System.Diagnostics.Debug.Assert(not lid.IsEmpty, "the parser should never produce a long-id that is the empty list") 
    (lid.Head.idRange,lid) ||> unionRangeWithListBy (fun id -> id.idRange) 


# 156 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (Position * string * LexerWhitespaceContinuation)
  | HASH_ELSE of (Position * string * LexerWhitespaceContinuation)
  | HASH_ENDIF of (Position * string * LexerWhitespaceContinuation)
  | COMMENT of (LexerWhitespaceContinuation)
  | WHITESPACE of (LexerWhitespaceContinuation)
  | HASH_LINE of (LexerWhitespaceContinuation)
  | HASH_LIGHT of (LexerWhitespaceContinuation)
  | INACTIVECODE of (LexerWhitespaceContinuation)
  | LINE_COMMENT of (LexerWhitespaceContinuation)
  | STRING_TEXT of (LexerWhitespaceContinuation)
  | EOF of (LexerWhitespaceContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | OBLOCKEND_COMING_SOON
  | OBLOCKEND_IS_HERE
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OBODY_OPERATOR
  | OTHEN
  | ODO_BANG
  | ODO
  | OSELECT
  | OWHERE
  | OYIELD
  | OWHEN
  | OPARALLEL_OPERATOR
  | OWAIT
  | OBINDER of (string)
  | OLET of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | TYPE_COMING_SOON
  | TYPE_IS_HERE
  | MODULE_COMING_SOON
  | MODULE_IS_HERE
  | RULE
  | CREATE
  | WAIT
  | WAIT_UNTIL
  | YIELD
  | SELECT_OPERATOR
  | PARALLEL_OPERATOR
  | INT_SELECT_OPERATOR
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE
  | RBRACE_COMING_SOON
  | RBRACE_IS_HERE
  | MINUS
  | DOLLAR
  | LBRACE_LESS
  | BAR_RBRACK
  | GREATER_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACK_LESS
  | LBRACE
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | RPAREN_COMING_SOON
  | RPAREN_IS_HERE
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | IMPORT
  | OPEN
  | OR
  | REC
  | THEN
  | BODY_OPERATOR
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | CONST
  | WORLD_ENTITY
  | MASTER
  | SLAVE
  | CONNECT
  | DISCONNECT
  | VIRTUAL
  | ENTITY
  | LAZY
  | OLAZY
  | MATCH
  | MUTABLE
  | REFERENCE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | JOIN_IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | NATIVEINT of (int64)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string)
  | STRING of (string)
  | BYTEARRAY of (byte[])
  | A
  | B
  | C
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_OBLOCKEND_COMING_SOON
    | TOKEN_OBLOCKEND_IS_HERE
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OBODY_OPERATOR
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OSELECT
    | TOKEN_OWHERE
    | TOKEN_OYIELD
    | TOKEN_OWHEN
    | TOKEN_OPARALLEL_OPERATOR
    | TOKEN_OWAIT
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_TYPE_COMING_SOON
    | TOKEN_TYPE_IS_HERE
    | TOKEN_MODULE_COMING_SOON
    | TOKEN_MODULE_IS_HERE
    | TOKEN_RULE
    | TOKEN_CREATE
    | TOKEN_WAIT
    | TOKEN_WAIT_UNTIL
    | TOKEN_YIELD
    | TOKEN_SELECT_OPERATOR
    | TOKEN_PARALLEL_OPERATOR
    | TOKEN_INT_SELECT_OPERATOR
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE
    | TOKEN_RBRACE_COMING_SOON
    | TOKEN_RBRACE_IS_HERE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_LBRACE_LESS
    | TOKEN_BAR_RBRACK
    | TOKEN_GREATER_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_LBRACE
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_RPAREN_COMING_SOON
    | TOKEN_RPAREN_IS_HERE
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_IMPORT
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_BODY_OPERATOR
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_CONST
    | TOKEN_WORLD_ENTITY
    | TOKEN_MASTER
    | TOKEN_SLAVE
    | TOKEN_CONNECT
    | TOKEN_DISCONNECT
    | TOKEN_VIRTUAL
    | TOKEN_ENTITY
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MUTABLE
    | TOKEN_REFERENCE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_JOIN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_NATIVEINT
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_A
    | TOKEN_B
    | TOKEN_C
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_stringOrKeywordString
    | NONTERM_cnvModuleIntro
    | NONTERM_casanovaModuleImpl
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_moduleDefn
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_opt_signature
    | NONTERM_tyconDefnAugmentation
    | NONTERM_opt_literalValue
    | NONTERM_memberFlags
    | NONTERM_memberSpecFlags
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_cnvTyconDefnRhs
    | NONTERM_tyconDefnRhs
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMembersAtLeastOne
    | NONTERM_memberCore
    | NONTERM_createMemberCoreWithParams
    | NONTERM_createMemberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_opt_typ
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_declVisibility
    | NONTERM_opt_classDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_tyconDefnOrSpfnCnvRepr
    | NONTERM_braceFieldOrRuleDeclList
    | NONTERM_fieldOrRuleList
    | NONTERM_topReturnTypeWithTypeConstraints
    | NONTERM_cnvFieldInitCore
    | NONTERM_fieldOrRule
    | NONTERM_inherit_idents
    | NONTERM_braceFieldDeclList
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_typarAlts
    | NONTERM_unionRepr
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_importDecl
    | NONTERM_importLibrary
    | NONTERM_defnBindings
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_anonLambdaExpr
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_createBindingPattern
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_constrPattern
    | NONTERM_opt_explicitValTyparDecls2
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_fromAssignmentExprBlock
    | NONTERM_typedSeqExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSeqExprBlockR
    | NONTERM_typedSeqExpr
    | NONTERM_seqExpr
    | NONTERM_recover
    | NONTERM_choices
    | NONTERM_intChoices
    | NONTERM_choiceBody
    | NONTERM_parallel
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_fromExprCondition
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tuplePat
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_optRange
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_staticallyKnownHeadTyparAlts
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_monadicExprBody
    | NONTERM_listExprElements
    | NONTERM_monadicExprInitial
    | NONTERM_rangeSequenceExpr
    | NONTERM_monadicSingleLineQualifiersThenArrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_fromLoopBinder
    | NONTERM_fromTupleExpr
    | NONTERM_forLoopRange
    | NONTERM_opt_curriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_recdExpr
    | NONTERM_opt_seps_recd
    | NONTERM_seps_recd
    | NONTERM_pathOrUnderscore
    | NONTERM_recdExprBindings
    | NONTERM_recdBinding
    | NONTERM_forLoopDirection
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_tupleTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrefixArguments
    | NONTERM_typeArgListElements
    | NONTERM_powerType
    | NONTERM_appTypeNonAtomicDeprecated
    | NONTERM_powerTypeNonAtomicDeprecated
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_typeArgActual
    | NONTERM_typeArgActualOrDummyIfEmpty
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_barName
    | NONTERM_barNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_interactiveSeparators
    | NONTERM_opt_interactiveSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_opt_ref
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_opt_HASH
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP
    | NONTERM_type_keyword
    | NONTERM_module_keyword
    | NONTERM_rbrace
    | NONTERM_rparen
    | NONTERM_oblockend
    | NONTERM_ends_other_than_rparen_coming_soon_or_recover
    | NONTERM_ends_coming_soon_or_recover

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | OINTERFACE_MEMBER  -> 13 
  | OBLOCKEND  -> 14 
  | OBLOCKEND_COMING_SOON  -> 15 
  | OBLOCKEND_IS_HERE  -> 16 
  | ORIGHT_BLOCK_END  -> 17 
  | ODECLEND  -> 18 
  | OEND  -> 19 
  | OBLOCKSEP  -> 20 
  | OBLOCKBEGIN  -> 21 
  | ORESET  -> 22 
  | OFUN  -> 23 
  | OFUNCTION  -> 24 
  | OWITH  -> 25 
  | OELSE  -> 26 
  | OBODY_OPERATOR  -> 27 
  | OTHEN  -> 28 
  | ODO_BANG  -> 29 
  | ODO  -> 30 
  | OSELECT  -> 31 
  | OWHERE  -> 32 
  | OYIELD  -> 33 
  | OWHEN  -> 34 
  | OPARALLEL_OPERATOR  -> 35 
  | OWAIT  -> 36 
  | OBINDER _ -> 37 
  | OLET _ -> 38 
  | HIGH_PRECEDENCE_TYAPP  -> 39 
  | HIGH_PRECEDENCE_PAREN_APP  -> 40 
  | HIGH_PRECEDENCE_BRACK_APP  -> 41 
  | TYPE_COMING_SOON  -> 42 
  | TYPE_IS_HERE  -> 43 
  | MODULE_COMING_SOON  -> 44 
  | MODULE_IS_HERE  -> 45 
  | RULE  -> 46 
  | CREATE  -> 47 
  | WAIT  -> 48 
  | WAIT_UNTIL  -> 49 
  | YIELD  -> 50 
  | SELECT_OPERATOR  -> 51 
  | PARALLEL_OPERATOR  -> 52 
  | INT_SELECT_OPERATOR  -> 53 
  | EXTERN  -> 54 
  | VOID  -> 55 
  | PUBLIC  -> 56 
  | PRIVATE  -> 57 
  | INTERNAL  -> 58 
  | GLOBAL  -> 59 
  | STATIC  -> 60 
  | MEMBER  -> 61 
  | CLASS  -> 62 
  | ABSTRACT  -> 63 
  | OVERRIDE  -> 64 
  | DEFAULT  -> 65 
  | CONSTRUCTOR  -> 66 
  | INHERIT  -> 67 
  | GREATER_RBRACK  -> 68 
  | STRUCT  -> 69 
  | SIG  -> 70 
  | BAR  -> 71 
  | RBRACK  -> 72 
  | RBRACE  -> 73 
  | RBRACE_COMING_SOON  -> 74 
  | RBRACE_IS_HERE  -> 75 
  | MINUS  -> 76 
  | DOLLAR  -> 77 
  | LBRACE_LESS  -> 78 
  | BAR_RBRACK  -> 79 
  | GREATER_RBRACE  -> 80 
  | UNDERSCORE  -> 81 
  | SEMICOLON_SEMICOLON  -> 82 
  | LARROW  -> 83 
  | EQUALS  -> 84 
  | LBRACK  -> 85 
  | LBRACK_BAR  -> 86 
  | LBRACK_LESS  -> 87 
  | LBRACE  -> 88 
  | QMARK  -> 89 
  | QMARK_QMARK  -> 90 
  | DOT  -> 91 
  | COLON  -> 92 
  | COLON_COLON  -> 93 
  | COLON_GREATER  -> 94 
  | COLON_QMARK_GREATER  -> 95 
  | COLON_QMARK  -> 96 
  | COLON_EQUALS  -> 97 
  | SEMICOLON  -> 98 
  | WHEN  -> 99 
  | WHILE  -> 100 
  | WITH  -> 101 
  | HASH  -> 102 
  | AMP  -> 103 
  | AMP_AMP  -> 104 
  | QUOTE  -> 105 
  | LPAREN  -> 106 
  | RPAREN  -> 107 
  | RPAREN_COMING_SOON  -> 108 
  | RPAREN_IS_HERE  -> 109 
  | STAR  -> 110 
  | COMMA  -> 111 
  | RARROW  -> 112 
  | GREATER_BAR_RBRACK  -> 113 
  | LPAREN_STAR_RPAREN  -> 114 
  | IMPORT  -> 115 
  | OPEN  -> 116 
  | OR  -> 117 
  | REC  -> 118 
  | THEN  -> 119 
  | BODY_OPERATOR  -> 120 
  | TO  -> 121 
  | TRUE  -> 122 
  | TRY  -> 123 
  | TYPE  -> 124 
  | VAL  -> 125 
  | INLINE  -> 126 
  | INTERFACE  -> 127 
  | INSTANCE  -> 128 
  | CONST  -> 129 
  | WORLD_ENTITY  -> 130 
  | MASTER  -> 131 
  | SLAVE  -> 132 
  | CONNECT  -> 133 
  | DISCONNECT  -> 134 
  | VIRTUAL  -> 135 
  | ENTITY  -> 136 
  | LAZY  -> 137 
  | OLAZY  -> 138 
  | MATCH  -> 139 
  | MUTABLE  -> 140 
  | REFERENCE  -> 141 
  | NEW  -> 142 
  | OF  -> 143 
  | EXCEPTION  -> 144 
  | FALSE  -> 145 
  | FOR  -> 146 
  | FUN  -> 147 
  | FUNCTION  -> 148 
  | IF  -> 149 
  | IN  -> 150 
  | JOIN_IN  -> 151 
  | FINALLY  -> 152 
  | DO_BANG  -> 153 
  | AND  -> 154 
  | AS  -> 155 
  | ASSERT  -> 156 
  | OASSERT  -> 157 
  | ASR  -> 158 
  | BEGIN  -> 159 
  | DO  -> 160 
  | DONE  -> 161 
  | DOWNTO  -> 162 
  | ELSE  -> 163 
  | ELIF  -> 164 
  | END  -> 165 
  | DOT_DOT  -> 166 
  | BAR_BAR  -> 167 
  | UPCAST  -> 168 
  | DOWNCAST  -> 169 
  | NULL  -> 170 
  | RESERVED  -> 171 
  | MODULE  -> 172 
  | NAMESPACE  -> 173 
  | DELEGATE  -> 174 
  | CONSTRAINT  -> 175 
  | BASE  -> 176 
  | LQUOTE _ -> 177 
  | RQUOTE _ -> 178 
  | RQUOTE_DOT _ -> 179 
  | PERCENT_OP _ -> 180 
  | BINDER _ -> 181 
  | LESS _ -> 182 
  | GREATER _ -> 183 
  | LET _ -> 184 
  | YIELD_BANG _ -> 185 
  | BIGNUM _ -> 186 
  | DECIMAL _ -> 187 
  | CHAR _ -> 188 
  | IEEE64 _ -> 189 
  | IEEE32 _ -> 190 
  | NATIVEINT _ -> 191 
  | UNATIVEINT _ -> 192 
  | UINT64 _ -> 193 
  | UINT32 _ -> 194 
  | UINT16 _ -> 195 
  | UINT8 _ -> 196 
  | INT64 _ -> 197 
  | INT32 _ -> 198 
  | INT32_DOT_DOT _ -> 199 
  | INT16 _ -> 200 
  | INT8 _ -> 201 
  | FUNKY_OPERATOR_NAME _ -> 202 
  | ADJACENT_PREFIX_OP _ -> 203 
  | PLUS_MINUS_OP _ -> 204 
  | INFIX_AMP_OP _ -> 205 
  | INFIX_STAR_DIV_MOD_OP _ -> 206 
  | PREFIX_OP _ -> 207 
  | INFIX_BAR_OP _ -> 208 
  | INFIX_AT_HAT_OP _ -> 209 
  | INFIX_COMPARE_OP _ -> 210 
  | INFIX_STAR_STAR_OP _ -> 211 
  | IDENT _ -> 212 
  | KEYWORD_STRING _ -> 213 
  | STRING _ -> 214 
  | BYTEARRAY _ -> 215 
  | A  -> 216 
  | B  -> 217 
  | C  -> 218 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_OINTERFACE_MEMBER 
  | 14 -> TOKEN_OBLOCKEND 
  | 15 -> TOKEN_OBLOCKEND_COMING_SOON 
  | 16 -> TOKEN_OBLOCKEND_IS_HERE 
  | 17 -> TOKEN_ORIGHT_BLOCK_END 
  | 18 -> TOKEN_ODECLEND 
  | 19 -> TOKEN_OEND 
  | 20 -> TOKEN_OBLOCKSEP 
  | 21 -> TOKEN_OBLOCKBEGIN 
  | 22 -> TOKEN_ORESET 
  | 23 -> TOKEN_OFUN 
  | 24 -> TOKEN_OFUNCTION 
  | 25 -> TOKEN_OWITH 
  | 26 -> TOKEN_OELSE 
  | 27 -> TOKEN_OBODY_OPERATOR 
  | 28 -> TOKEN_OTHEN 
  | 29 -> TOKEN_ODO_BANG 
  | 30 -> TOKEN_ODO 
  | 31 -> TOKEN_OSELECT 
  | 32 -> TOKEN_OWHERE 
  | 33 -> TOKEN_OYIELD 
  | 34 -> TOKEN_OWHEN 
  | 35 -> TOKEN_OPARALLEL_OPERATOR 
  | 36 -> TOKEN_OWAIT 
  | 37 -> TOKEN_OBINDER 
  | 38 -> TOKEN_OLET 
  | 39 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 40 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 41 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 42 -> TOKEN_TYPE_COMING_SOON 
  | 43 -> TOKEN_TYPE_IS_HERE 
  | 44 -> TOKEN_MODULE_COMING_SOON 
  | 45 -> TOKEN_MODULE_IS_HERE 
  | 46 -> TOKEN_RULE 
  | 47 -> TOKEN_CREATE 
  | 48 -> TOKEN_WAIT 
  | 49 -> TOKEN_WAIT_UNTIL 
  | 50 -> TOKEN_YIELD 
  | 51 -> TOKEN_SELECT_OPERATOR 
  | 52 -> TOKEN_PARALLEL_OPERATOR 
  | 53 -> TOKEN_INT_SELECT_OPERATOR 
  | 54 -> TOKEN_EXTERN 
  | 55 -> TOKEN_VOID 
  | 56 -> TOKEN_PUBLIC 
  | 57 -> TOKEN_PRIVATE 
  | 58 -> TOKEN_INTERNAL 
  | 59 -> TOKEN_GLOBAL 
  | 60 -> TOKEN_STATIC 
  | 61 -> TOKEN_MEMBER 
  | 62 -> TOKEN_CLASS 
  | 63 -> TOKEN_ABSTRACT 
  | 64 -> TOKEN_OVERRIDE 
  | 65 -> TOKEN_DEFAULT 
  | 66 -> TOKEN_CONSTRUCTOR 
  | 67 -> TOKEN_INHERIT 
  | 68 -> TOKEN_GREATER_RBRACK 
  | 69 -> TOKEN_STRUCT 
  | 70 -> TOKEN_SIG 
  | 71 -> TOKEN_BAR 
  | 72 -> TOKEN_RBRACK 
  | 73 -> TOKEN_RBRACE 
  | 74 -> TOKEN_RBRACE_COMING_SOON 
  | 75 -> TOKEN_RBRACE_IS_HERE 
  | 76 -> TOKEN_MINUS 
  | 77 -> TOKEN_DOLLAR 
  | 78 -> TOKEN_LBRACE_LESS 
  | 79 -> TOKEN_BAR_RBRACK 
  | 80 -> TOKEN_GREATER_RBRACE 
  | 81 -> TOKEN_UNDERSCORE 
  | 82 -> TOKEN_SEMICOLON_SEMICOLON 
  | 83 -> TOKEN_LARROW 
  | 84 -> TOKEN_EQUALS 
  | 85 -> TOKEN_LBRACK 
  | 86 -> TOKEN_LBRACK_BAR 
  | 87 -> TOKEN_LBRACK_LESS 
  | 88 -> TOKEN_LBRACE 
  | 89 -> TOKEN_QMARK 
  | 90 -> TOKEN_QMARK_QMARK 
  | 91 -> TOKEN_DOT 
  | 92 -> TOKEN_COLON 
  | 93 -> TOKEN_COLON_COLON 
  | 94 -> TOKEN_COLON_GREATER 
  | 95 -> TOKEN_COLON_QMARK_GREATER 
  | 96 -> TOKEN_COLON_QMARK 
  | 97 -> TOKEN_COLON_EQUALS 
  | 98 -> TOKEN_SEMICOLON 
  | 99 -> TOKEN_WHEN 
  | 100 -> TOKEN_WHILE 
  | 101 -> TOKEN_WITH 
  | 102 -> TOKEN_HASH 
  | 103 -> TOKEN_AMP 
  | 104 -> TOKEN_AMP_AMP 
  | 105 -> TOKEN_QUOTE 
  | 106 -> TOKEN_LPAREN 
  | 107 -> TOKEN_RPAREN 
  | 108 -> TOKEN_RPAREN_COMING_SOON 
  | 109 -> TOKEN_RPAREN_IS_HERE 
  | 110 -> TOKEN_STAR 
  | 111 -> TOKEN_COMMA 
  | 112 -> TOKEN_RARROW 
  | 113 -> TOKEN_GREATER_BAR_RBRACK 
  | 114 -> TOKEN_LPAREN_STAR_RPAREN 
  | 115 -> TOKEN_IMPORT 
  | 116 -> TOKEN_OPEN 
  | 117 -> TOKEN_OR 
  | 118 -> TOKEN_REC 
  | 119 -> TOKEN_THEN 
  | 120 -> TOKEN_BODY_OPERATOR 
  | 121 -> TOKEN_TO 
  | 122 -> TOKEN_TRUE 
  | 123 -> TOKEN_TRY 
  | 124 -> TOKEN_TYPE 
  | 125 -> TOKEN_VAL 
  | 126 -> TOKEN_INLINE 
  | 127 -> TOKEN_INTERFACE 
  | 128 -> TOKEN_INSTANCE 
  | 129 -> TOKEN_CONST 
  | 130 -> TOKEN_WORLD_ENTITY 
  | 131 -> TOKEN_MASTER 
  | 132 -> TOKEN_SLAVE 
  | 133 -> TOKEN_CONNECT 
  | 134 -> TOKEN_DISCONNECT 
  | 135 -> TOKEN_VIRTUAL 
  | 136 -> TOKEN_ENTITY 
  | 137 -> TOKEN_LAZY 
  | 138 -> TOKEN_OLAZY 
  | 139 -> TOKEN_MATCH 
  | 140 -> TOKEN_MUTABLE 
  | 141 -> TOKEN_REFERENCE 
  | 142 -> TOKEN_NEW 
  | 143 -> TOKEN_OF 
  | 144 -> TOKEN_EXCEPTION 
  | 145 -> TOKEN_FALSE 
  | 146 -> TOKEN_FOR 
  | 147 -> TOKEN_FUN 
  | 148 -> TOKEN_FUNCTION 
  | 149 -> TOKEN_IF 
  | 150 -> TOKEN_IN 
  | 151 -> TOKEN_JOIN_IN 
  | 152 -> TOKEN_FINALLY 
  | 153 -> TOKEN_DO_BANG 
  | 154 -> TOKEN_AND 
  | 155 -> TOKEN_AS 
  | 156 -> TOKEN_ASSERT 
  | 157 -> TOKEN_OASSERT 
  | 158 -> TOKEN_ASR 
  | 159 -> TOKEN_BEGIN 
  | 160 -> TOKEN_DO 
  | 161 -> TOKEN_DONE 
  | 162 -> TOKEN_DOWNTO 
  | 163 -> TOKEN_ELSE 
  | 164 -> TOKEN_ELIF 
  | 165 -> TOKEN_END 
  | 166 -> TOKEN_DOT_DOT 
  | 167 -> TOKEN_BAR_BAR 
  | 168 -> TOKEN_UPCAST 
  | 169 -> TOKEN_DOWNCAST 
  | 170 -> TOKEN_NULL 
  | 171 -> TOKEN_RESERVED 
  | 172 -> TOKEN_MODULE 
  | 173 -> TOKEN_NAMESPACE 
  | 174 -> TOKEN_DELEGATE 
  | 175 -> TOKEN_CONSTRAINT 
  | 176 -> TOKEN_BASE 
  | 177 -> TOKEN_LQUOTE 
  | 178 -> TOKEN_RQUOTE 
  | 179 -> TOKEN_RQUOTE_DOT 
  | 180 -> TOKEN_PERCENT_OP 
  | 181 -> TOKEN_BINDER 
  | 182 -> TOKEN_LESS 
  | 183 -> TOKEN_GREATER 
  | 184 -> TOKEN_LET 
  | 185 -> TOKEN_YIELD_BANG 
  | 186 -> TOKEN_BIGNUM 
  | 187 -> TOKEN_DECIMAL 
  | 188 -> TOKEN_CHAR 
  | 189 -> TOKEN_IEEE64 
  | 190 -> TOKEN_IEEE32 
  | 191 -> TOKEN_NATIVEINT 
  | 192 -> TOKEN_UNATIVEINT 
  | 193 -> TOKEN_UINT64 
  | 194 -> TOKEN_UINT32 
  | 195 -> TOKEN_UINT16 
  | 196 -> TOKEN_UINT8 
  | 197 -> TOKEN_INT64 
  | 198 -> TOKEN_INT32 
  | 199 -> TOKEN_INT32_DOT_DOT 
  | 200 -> TOKEN_INT16 
  | 201 -> TOKEN_INT8 
  | 202 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 203 -> TOKEN_ADJACENT_PREFIX_OP 
  | 204 -> TOKEN_PLUS_MINUS_OP 
  | 205 -> TOKEN_INFIX_AMP_OP 
  | 206 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 207 -> TOKEN_PREFIX_OP 
  | 208 -> TOKEN_INFIX_BAR_OP 
  | 209 -> TOKEN_INFIX_AT_HAT_OP 
  | 210 -> TOKEN_INFIX_COMPARE_OP 
  | 211 -> TOKEN_INFIX_STAR_STAR_OP 
  | 212 -> TOKEN_IDENT 
  | 213 -> TOKEN_KEYWORD_STRING 
  | 214 -> TOKEN_STRING 
  | 215 -> TOKEN_BYTEARRAY 
  | 216 -> TOKEN_A 
  | 217 -> TOKEN_B 
  | 218 -> TOKEN_C 
  | 221 -> TOKEN_end_of_input
  | 219 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_stringOrKeywordString 
    | 3 -> NONTERM_stringOrKeywordString 
    | 4 -> NONTERM_cnvModuleIntro 
    | 5 -> NONTERM_casanovaModuleImpl 
    | 6 -> NONTERM_casanovaModuleImpl 
    | 7 -> NONTERM_casanovaModuleImpl 
    | 8 -> NONTERM_casanovaModuleImpl 
    | 9 -> NONTERM_casanovaModuleImpl 
    | 10 -> NONTERM_casanovaModuleImpl 
    | 11 -> NONTERM_casanovaModuleImpl 
    | 12 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 13 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 14 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 15 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 16 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 17 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 18 -> NONTERM_moduleDefnsOrExpr 
    | 19 -> NONTERM_moduleDefns 
    | 20 -> NONTERM_moduleDefns 
    | 21 -> NONTERM_moduleDefns 
    | 22 -> NONTERM_moduleDefns 
    | 23 -> NONTERM_moduleDefns 
    | 24 -> NONTERM_moduleDefns 
    | 25 -> NONTERM_moduleDefnOrDirective 
    | 26 -> NONTERM_opt_attributes 
    | 27 -> NONTERM_opt_attributes 
    | 28 -> NONTERM_attributes 
    | 29 -> NONTERM_attributes 
    | 30 -> NONTERM_attributeList 
    | 31 -> NONTERM_attributeList 
    | 32 -> NONTERM_attributeList 
    | 33 -> NONTERM_attributeList 
    | 34 -> NONTERM_attributeListElements 
    | 35 -> NONTERM_attributeListElements 
    | 36 -> NONTERM_attribute 
    | 37 -> NONTERM_attribute 
    | 38 -> NONTERM_attribute 
    | 39 -> NONTERM_attributeTarget 
    | 40 -> NONTERM_attributeTarget 
    | 41 -> NONTERM_attributeTarget 
    | 42 -> NONTERM_moduleDefn 
    | 43 -> NONTERM_moduleDefn 
    | 44 -> NONTERM_moduleDefn 
    | 45 -> NONTERM_moduleDefn 
    | 46 -> NONTERM_moduleDefn 
    | 47 -> NONTERM_moduleDefn 
    | 48 -> NONTERM_moduleDefn 
    | 49 -> NONTERM_namedModuleAbbrevBlock 
    | 50 -> NONTERM_namedModuleAbbrevBlock 
    | 51 -> NONTERM_namedModuleDefnBlock 
    | 52 -> NONTERM_namedModuleDefnBlock 
    | 53 -> NONTERM_namedModuleDefnBlock 
    | 54 -> NONTERM_namedModuleDefnBlock 
    | 55 -> NONTERM_namedModuleDefnBlock 
    | 56 -> NONTERM_namedModuleDefnBlock 
    | 57 -> NONTERM_wrappedNamedModuleDefn 
    | 58 -> NONTERM_wrappedNamedModuleDefn 
    | 59 -> NONTERM_wrappedNamedModuleDefn 
    | 60 -> NONTERM_opt_signature 
    | 61 -> NONTERM_tyconDefnAugmentation 
    | 62 -> NONTERM_opt_literalValue 
    | 63 -> NONTERM_opt_literalValue 
    | 64 -> NONTERM_opt_literalValue 
    | 65 -> NONTERM_memberFlags 
    | 66 -> NONTERM_memberFlags 
    | 67 -> NONTERM_memberFlags 
    | 68 -> NONTERM_memberSpecFlags 
    | 69 -> NONTERM_memberSpecFlags 
    | 70 -> NONTERM_memberSpecFlags 
    | 71 -> NONTERM_classMemberSpfnGetSet 
    | 72 -> NONTERM_classMemberSpfnGetSet 
    | 73 -> NONTERM_classMemberSpfnGetSet 
    | 74 -> NONTERM_classMemberSpfnGetSet 
    | 75 -> NONTERM_classMemberSpfnGetSetElements 
    | 76 -> NONTERM_classMemberSpfnGetSetElements 
    | 77 -> NONTERM_typeNameInfo 
    | 78 -> NONTERM_tyconDefnList 
    | 79 -> NONTERM_tyconDefnList 
    | 80 -> NONTERM_tyconDefn 
    | 81 -> NONTERM_tyconDefnRhsBlock 
    | 82 -> NONTERM_tyconDefnRhsBlock 
    | 83 -> NONTERM_cnvTyconDefnRhs 
    | 84 -> NONTERM_tyconDefnRhs 
    | 85 -> NONTERM_classDefnBlock 
    | 86 -> NONTERM_classDefnBlock 
    | 87 -> NONTERM_classDefnBlock 
    | 88 -> NONTERM_classDefnMembers 
    | 89 -> NONTERM_classDefnMembers 
    | 90 -> NONTERM_classDefnMembers 
    | 91 -> NONTERM_classDefnMembersAtLeastOne 
    | 92 -> NONTERM_memberCore 
    | 93 -> NONTERM_createMemberCoreWithParams 
    | 94 -> NONTERM_createMemberCore 
    | 95 -> NONTERM_abstractMemberFlags 
    | 96 -> NONTERM_abstractMemberFlags 
    | 97 -> NONTERM_classDefnMember 
    | 98 -> NONTERM_opt_typ 
    | 99 -> NONTERM_opt_typ 
    | 100 -> NONTERM_atomicPatternLongIdent 
    | 101 -> NONTERM_atomicPatternLongIdent 
    | 102 -> NONTERM_opt_declVisibility 
    | 103 -> NONTERM_opt_classDefn 
    | 104 -> NONTERM_opt_classDefn 
    | 105 -> NONTERM_optAsSpec 
    | 106 -> NONTERM_optAsSpec 
    | 107 -> NONTERM_asSpec 
    | 108 -> NONTERM_optBaseSpec 
    | 109 -> NONTERM_optBaseSpec 
    | 110 -> NONTERM_baseSpec 
    | 111 -> NONTERM_baseSpec 
    | 112 -> NONTERM_memberOrOverride 
    | 113 -> NONTERM_memberOrOverride 
    | 114 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 115 -> NONTERM_tyconDefnOrSpfnCnvRepr 
    | 116 -> NONTERM_braceFieldOrRuleDeclList 
    | 117 -> NONTERM_braceFieldOrRuleDeclList 
    | 118 -> NONTERM_fieldOrRuleList 
    | 119 -> NONTERM_fieldOrRuleList 
    | 120 -> NONTERM_topReturnTypeWithTypeConstraints 
    | 121 -> NONTERM_cnvFieldInitCore 
    | 122 -> NONTERM_fieldOrRule 
    | 123 -> NONTERM_fieldOrRule 
    | 124 -> NONTERM_fieldOrRule 
    | 125 -> NONTERM_fieldOrRule 
    | 126 -> NONTERM_fieldOrRule 
    | 127 -> NONTERM_fieldOrRule 
    | 128 -> NONTERM_inherit_idents 
    | 129 -> NONTERM_inherit_idents 
    | 130 -> NONTERM_braceFieldDeclList 
    | 131 -> NONTERM_braceFieldDeclList 
    | 132 -> NONTERM_braceFieldDeclList 
    | 133 -> NONTERM_interfaceMember 
    | 134 -> NONTERM_interfaceMember 
    | 135 -> NONTERM_tyconNameAndTyparDecls 
    | 136 -> NONTERM_typarAlts 
    | 137 -> NONTERM_typarAlts 
    | 138 -> NONTERM_unionRepr 
    | 139 -> NONTERM_unionRepr 
    | 140 -> NONTERM_unionRepr 
    | 141 -> NONTERM_attrUnionCaseDecls 
    | 142 -> NONTERM_attrUnionCaseDecls 
    | 143 -> NONTERM_attrUnionCaseDecl 
    | 144 -> NONTERM_attrUnionCaseDecl 
    | 145 -> NONTERM_attrUnionCaseDecl 
    | 146 -> NONTERM_unionCaseName 
    | 147 -> NONTERM_unionCaseName 
    | 148 -> NONTERM_unionCaseName 
    | 149 -> NONTERM_firstUnionCaseDeclOfMany 
    | 150 -> NONTERM_firstUnionCaseDeclOfMany 
    | 151 -> NONTERM_firstUnionCaseDecl 
    | 152 -> NONTERM_unionCaseRepr 
    | 153 -> NONTERM_unionCaseRepr 
    | 154 -> NONTERM_unionCaseRepr 
    | 155 -> NONTERM_recdFieldDeclList 
    | 156 -> NONTERM_recdFieldDeclList 
    | 157 -> NONTERM_recdFieldDecl 
    | 158 -> NONTERM_fieldDecl 
    | 159 -> NONTERM_importDecl 
    | 160 -> NONTERM_importLibrary 
    | 161 -> NONTERM_defnBindings 
    | 162 -> NONTERM_doBinding 
    | 163 -> NONTERM_hardwhiteLetBindings 
    | 164 -> NONTERM_hardwhiteDoBinding 
    | 165 -> NONTERM_classDefnBindings 
    | 166 -> NONTERM_classDefnBindings 
    | 167 -> NONTERM_classDefnBindings 
    | 168 -> NONTERM_classDefnBindings 
    | 169 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 170 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 171 -> NONTERM_localBindings 
    | 172 -> NONTERM_moreLocalBindings 
    | 173 -> NONTERM_moreLocalBindings 
    | 174 -> NONTERM_attr_localBinding 
    | 175 -> NONTERM_attr_localBinding 
    | 176 -> NONTERM_localBinding 
    | 177 -> NONTERM_localBinding 
    | 178 -> NONTERM_localBinding 
    | 179 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 180 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 181 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 182 -> NONTERM_typedExprWithStaticOptimizations 
    | 183 -> NONTERM_opt_staticOptimizations 
    | 184 -> NONTERM_opt_staticOptimizations 
    | 185 -> NONTERM_staticOptimization 
    | 186 -> NONTERM_staticOptimizationConditions 
    | 187 -> NONTERM_staticOptimizationConditions 
    | 188 -> NONTERM_staticOptimizationCondition 
    | 189 -> NONTERM_staticOptimizationCondition 
    | 190 -> NONTERM_rawConstant 
    | 191 -> NONTERM_rawConstant 
    | 192 -> NONTERM_rawConstant 
    | 193 -> NONTERM_rawConstant 
    | 194 -> NONTERM_rawConstant 
    | 195 -> NONTERM_rawConstant 
    | 196 -> NONTERM_anonLambdaExpr 
    | 197 -> NONTERM_anonLambdaExpr 
    | 198 -> NONTERM_anonLambdaExpr 
    | 199 -> NONTERM_anonLambdaExpr 
    | 200 -> NONTERM_anonLambdaExpr 
    | 201 -> NONTERM_anonLambdaExpr 
    | 202 -> NONTERM_anonLambdaExpr 
    | 203 -> NONTERM_anonLambdaExpr 
    | 204 -> NONTERM_constant 
    | 205 -> NONTERM_constant 
    | 206 -> NONTERM_bindingPattern 
    | 207 -> NONTERM_createBindingPattern 
    | 208 -> NONTERM_headBindingPattern 
    | 209 -> NONTERM_headBindingPattern 
    | 210 -> NONTERM_headBindingPattern 
    | 211 -> NONTERM_headBindingPattern 
    | 212 -> NONTERM_headBindingPattern 
    | 213 -> NONTERM_headBindingPattern 
    | 214 -> NONTERM_tuplePatternElements 
    | 215 -> NONTERM_tuplePatternElements 
    | 216 -> NONTERM_conjPatternElements 
    | 217 -> NONTERM_conjPatternElements 
    | 218 -> NONTERM_constrPattern 
    | 219 -> NONTERM_constrPattern 
    | 220 -> NONTERM_constrPattern 
    | 221 -> NONTERM_constrPattern 
    | 222 -> NONTERM_opt_explicitValTyparDecls2 
    | 223 -> NONTERM_atomicPatterns 
    | 224 -> NONTERM_atomicPatterns 
    | 225 -> NONTERM_atomicPatterns 
    | 226 -> NONTERM_atomicPatterns 
    | 227 -> NONTERM_atomicPattern 
    | 228 -> NONTERM_atomicPattern 
    | 229 -> NONTERM_atomicPattern 
    | 230 -> NONTERM_atomicPattern 
    | 231 -> NONTERM_atomicPattern 
    | 232 -> NONTERM_atomicPattern 
    | 233 -> NONTERM_atomicPattern 
    | 234 -> NONTERM_atomicPattern 
    | 235 -> NONTERM_atomicPattern 
    | 236 -> NONTERM_atomicPattern 
    | 237 -> NONTERM_atomicPattern 
    | 238 -> NONTERM_atomicPattern 
    | 239 -> NONTERM_atomicPattern 
    | 240 -> NONTERM_parenPatternBody 
    | 241 -> NONTERM_parenPatternBody 
    | 242 -> NONTERM_parenPattern 
    | 243 -> NONTERM_parenPattern 
    | 244 -> NONTERM_parenPattern 
    | 245 -> NONTERM_parenPattern 
    | 246 -> NONTERM_parenPattern 
    | 247 -> NONTERM_parenPattern 
    | 248 -> NONTERM_parenPattern 
    | 249 -> NONTERM_tupleParenPatternElements 
    | 250 -> NONTERM_tupleParenPatternElements 
    | 251 -> NONTERM_conjParenPatternElements 
    | 252 -> NONTERM_conjParenPatternElements 
    | 253 -> NONTERM_recordPatternElements 
    | 254 -> NONTERM_recordPatternElementsAux 
    | 255 -> NONTERM_recordPatternElementsAux 
    | 256 -> NONTERM_recordPatternElement 
    | 257 -> NONTERM_listPatternElements 
    | 258 -> NONTERM_listPatternElements 
    | 259 -> NONTERM_listPatternElements 
    | 260 -> NONTERM_fromAssignmentExprBlock 
    | 261 -> NONTERM_typedSeqExprBlock 
    | 262 -> NONTERM_typedSeqExprBlock 
    | 263 -> NONTERM_typedSeqExprBlock 
    | 264 -> NONTERM_declExprBlock 
    | 265 -> NONTERM_declExprBlock 
    | 266 -> NONTERM_typedSeqExprBlockR 
    | 267 -> NONTERM_typedSeqExprBlockR 
    | 268 -> NONTERM_typedSeqExpr 
    | 269 -> NONTERM_typedSeqExpr 
    | 270 -> NONTERM_seqExpr 
    | 271 -> NONTERM_seqExpr 
    | 272 -> NONTERM_seqExpr 
    | 273 -> NONTERM_seqExpr 
    | 274 -> NONTERM_seqExpr 
    | 275 -> NONTERM_seqExpr 
    | 276 -> NONTERM_recover 
    | 277 -> NONTERM_recover 
    | 278 -> NONTERM_choices 
    | 279 -> NONTERM_choices 
    | 280 -> NONTERM_choices 
    | 281 -> NONTERM_choices 
    | 282 -> NONTERM_intChoices 
    | 283 -> NONTERM_intChoices 
    | 284 -> NONTERM_intChoices 
    | 285 -> NONTERM_intChoices 
    | 286 -> NONTERM_choiceBody 
    | 287 -> NONTERM_choiceBody 
    | 288 -> NONTERM_choiceBody 
    | 289 -> NONTERM_parallel 
    | 290 -> NONTERM_parallel 
    | 291 -> NONTERM_declExpr 
    | 292 -> NONTERM_declExpr 
    | 293 -> NONTERM_declExpr 
    | 294 -> NONTERM_declExpr 
    | 295 -> NONTERM_declExpr 
    | 296 -> NONTERM_declExpr 
    | 297 -> NONTERM_declExpr 
    | 298 -> NONTERM_declExpr 
    | 299 -> NONTERM_declExpr 
    | 300 -> NONTERM_declExpr 
    | 301 -> NONTERM_declExpr 
    | 302 -> NONTERM_declExpr 
    | 303 -> NONTERM_declExpr 
    | 304 -> NONTERM_declExpr 
    | 305 -> NONTERM_declExpr 
    | 306 -> NONTERM_declExpr 
    | 307 -> NONTERM_declExpr 
    | 308 -> NONTERM_declExpr 
    | 309 -> NONTERM_declExpr 
    | 310 -> NONTERM_declExpr 
    | 311 -> NONTERM_declExpr 
    | 312 -> NONTERM_declExpr 
    | 313 -> NONTERM_declExpr 
    | 314 -> NONTERM_declExpr 
    | 315 -> NONTERM_declExpr 
    | 316 -> NONTERM_declExpr 
    | 317 -> NONTERM_declExpr 
    | 318 -> NONTERM_declExpr 
    | 319 -> NONTERM_declExpr 
    | 320 -> NONTERM_declExpr 
    | 321 -> NONTERM_declExpr 
    | 322 -> NONTERM_declExpr 
    | 323 -> NONTERM_declExpr 
    | 324 -> NONTERM_declExpr 
    | 325 -> NONTERM_declExpr 
    | 326 -> NONTERM_declExpr 
    | 327 -> NONTERM_declExpr 
    | 328 -> NONTERM_declExpr 
    | 329 -> NONTERM_declExpr 
    | 330 -> NONTERM_declExpr 
    | 331 -> NONTERM_declExpr 
    | 332 -> NONTERM_declExpr 
    | 333 -> NONTERM_declExpr 
    | 334 -> NONTERM_declExpr 
    | 335 -> NONTERM_declExpr 
    | 336 -> NONTERM_declExpr 
    | 337 -> NONTERM_declExpr 
    | 338 -> NONTERM_declExpr 
    | 339 -> NONTERM_declExpr 
    | 340 -> NONTERM_declExpr 
    | 341 -> NONTERM_declExpr 
    | 342 -> NONTERM_declExpr 
    | 343 -> NONTERM_declExpr 
    | 344 -> NONTERM_declExpr 
    | 345 -> NONTERM_declExpr 
    | 346 -> NONTERM_declExpr 
    | 347 -> NONTERM_declExpr 
    | 348 -> NONTERM_declExpr 
    | 349 -> NONTERM_declExpr 
    | 350 -> NONTERM_declExpr 
    | 351 -> NONTERM_declExpr 
    | 352 -> NONTERM_declExpr 
    | 353 -> NONTERM_declExpr 
    | 354 -> NONTERM_declExpr 
    | 355 -> NONTERM_declExpr 
    | 356 -> NONTERM_declExpr 
    | 357 -> NONTERM_declExpr 
    | 358 -> NONTERM_declExpr 
    | 359 -> NONTERM_declExpr 
    | 360 -> NONTERM_declExpr 
    | 361 -> NONTERM_declExpr 
    | 362 -> NONTERM_declExpr 
    | 363 -> NONTERM_declExpr 
    | 364 -> NONTERM_declExpr 
    | 365 -> NONTERM_declExpr 
    | 366 -> NONTERM_declExpr 
    | 367 -> NONTERM_declExpr 
    | 368 -> NONTERM_declExpr 
    | 369 -> NONTERM_declExpr 
    | 370 -> NONTERM_declExpr 
    | 371 -> NONTERM_declExpr 
    | 372 -> NONTERM_declExpr 
    | 373 -> NONTERM_declExpr 
    | 374 -> NONTERM_declExpr 
    | 375 -> NONTERM_dynamicArg 
    | 376 -> NONTERM_dynamicArg 
    | 377 -> NONTERM_withClauses 
    | 378 -> NONTERM_withClauses 
    | 379 -> NONTERM_withClauses 
    | 380 -> NONTERM_withPatternClauses 
    | 381 -> NONTERM_withPatternClauses 
    | 382 -> NONTERM_withPatternClauses 
    | 383 -> NONTERM_withPatternClauses 
    | 384 -> NONTERM_patternAndGuard 
    | 385 -> NONTERM_patternClauses 
    | 386 -> NONTERM_patternClauses 
    | 387 -> NONTERM_patternClauses 
    | 388 -> NONTERM_patternClauses 
    | 389 -> NONTERM_patternClauses 
    | 390 -> NONTERM_patternGuard 
    | 391 -> NONTERM_patternGuard 
    | 392 -> NONTERM_patternResult 
    | 393 -> NONTERM_fromExprCondition 
    | 394 -> NONTERM_ifExprCases 
    | 395 -> NONTERM_ifExprThen 
    | 396 -> NONTERM_ifExprThen 
    | 397 -> NONTERM_ifExprThen 
    | 398 -> NONTERM_ifExprElifs 
    | 399 -> NONTERM_ifExprElifs 
    | 400 -> NONTERM_ifExprElifs 
    | 401 -> NONTERM_ifExprElifs 
    | 402 -> NONTERM_ifExprElifs 
    | 403 -> NONTERM_ifExprElifs 
    | 404 -> NONTERM_tuplePat 
    | 405 -> NONTERM_tuplePat 
    | 406 -> NONTERM_tupleExpr 
    | 407 -> NONTERM_tupleExpr 
    | 408 -> NONTERM_minusExpr 
    | 409 -> NONTERM_minusExpr 
    | 410 -> NONTERM_minusExpr 
    | 411 -> NONTERM_minusExpr 
    | 412 -> NONTERM_minusExpr 
    | 413 -> NONTERM_minusExpr 
    | 414 -> NONTERM_minusExpr 
    | 415 -> NONTERM_minusExpr 
    | 416 -> NONTERM_appExpr 
    | 417 -> NONTERM_appExpr 
    | 418 -> NONTERM_argExpr 
    | 419 -> NONTERM_argExpr 
    | 420 -> NONTERM_atomicExpr 
    | 421 -> NONTERM_atomicExpr 
    | 422 -> NONTERM_atomicExpr 
    | 423 -> NONTERM_atomicExpr 
    | 424 -> NONTERM_atomicExpr 
    | 425 -> NONTERM_atomicExpr 
    | 426 -> NONTERM_atomicExpr 
    | 427 -> NONTERM_atomicExpr 
    | 428 -> NONTERM_atomicExpr 
    | 429 -> NONTERM_atomicExpr 
    | 430 -> NONTERM_atomicExpr 
    | 431 -> NONTERM_atomicExpr 
    | 432 -> NONTERM_atomicExpr 
    | 433 -> NONTERM_atomicExpr 
    | 434 -> NONTERM_atomicExpr 
    | 435 -> NONTERM_atomicExprQualification 
    | 436 -> NONTERM_atomicExprQualification 
    | 437 -> NONTERM_atomicExprQualification 
    | 438 -> NONTERM_atomicExprQualification 
    | 439 -> NONTERM_atomicExprQualification 
    | 440 -> NONTERM_atomicExprQualification 
    | 441 -> NONTERM_atomicExprQualification 
    | 442 -> NONTERM_atomicExprQualification 
    | 443 -> NONTERM_atomicExprQualification 
    | 444 -> NONTERM_atomicExprQualification 
    | 445 -> NONTERM_optRange 
    | 446 -> NONTERM_optRange 
    | 447 -> NONTERM_optRange 
    | 448 -> NONTERM_optRange 
    | 449 -> NONTERM_atomicExprAfterType 
    | 450 -> NONTERM_atomicExprAfterType 
    | 451 -> NONTERM_atomicExprAfterType 
    | 452 -> NONTERM_atomicExprAfterType 
    | 453 -> NONTERM_atomicExprAfterType 
    | 454 -> NONTERM_atomicExprAfterType 
    | 455 -> NONTERM_atomicExprAfterType 
    | 456 -> NONTERM_atomicExprAfterType 
    | 457 -> NONTERM_beginEndExpr 
    | 458 -> NONTERM_beginEndExpr 
    | 459 -> NONTERM_beginEndExpr 
    | 460 -> NONTERM_beginEndExpr 
    | 461 -> NONTERM_arrayExpr 
    | 462 -> NONTERM_arrayExpr 
    | 463 -> NONTERM_arrayExpr 
    | 464 -> NONTERM_arrayExpr 
    | 465 -> NONTERM_parenExpr 
    | 466 -> NONTERM_parenExpr 
    | 467 -> NONTERM_parenExpr 
    | 468 -> NONTERM_parenExpr 
    | 469 -> NONTERM_parenExpr 
    | 470 -> NONTERM_parenExpr 
    | 471 -> NONTERM_parenExpr 
    | 472 -> NONTERM_parenExpr 
    | 473 -> NONTERM_parenExpr 
    | 474 -> NONTERM_parenExprBody 
    | 475 -> NONTERM_staticallyKnownHeadTypars 
    | 476 -> NONTERM_staticallyKnownHeadTypars 
    | 477 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 478 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 479 -> NONTERM_braceExpr 
    | 480 -> NONTERM_braceExpr 
    | 481 -> NONTERM_braceExpr 
    | 482 -> NONTERM_braceExpr 
    | 483 -> NONTERM_braceExpr 
    | 484 -> NONTERM_braceExprBody 
    | 485 -> NONTERM_braceExprBody 
    | 486 -> NONTERM_monadicExprBody 
    | 487 -> NONTERM_listExprElements 
    | 488 -> NONTERM_listExprElements 
    | 489 -> NONTERM_monadicExprInitial 
    | 490 -> NONTERM_monadicExprInitial 
    | 491 -> NONTERM_rangeSequenceExpr 
    | 492 -> NONTERM_rangeSequenceExpr 
    | 493 -> NONTERM_rangeSequenceExpr 
    | 494 -> NONTERM_monadicSingleLineQualifiersThenArrowThenExprR 
    | 495 -> NONTERM_forLoopBinder 
    | 496 -> NONTERM_forLoopBinder 
    | 497 -> NONTERM_forLoopBinder 
    | 498 -> NONTERM_forLoopBinder 
    | 499 -> NONTERM_fromLoopBinder 
    | 500 -> NONTERM_fromLoopBinder 
    | 501 -> NONTERM_fromLoopBinder 
    | 502 -> NONTERM_fromLoopBinder 
    | 503 -> NONTERM_fromTupleExpr 
    | 504 -> NONTERM_fromTupleExpr 
    | 505 -> NONTERM_fromTupleExpr 
    | 506 -> NONTERM_forLoopRange 
    | 507 -> NONTERM_opt_curriedArgExprs 
    | 508 -> NONTERM_opt_curriedArgExprs 
    | 509 -> NONTERM_opt_atomicExprAfterType 
    | 510 -> NONTERM_opt_atomicExprAfterType 
    | 511 -> NONTERM_recdExpr 
    | 512 -> NONTERM_recdExpr 
    | 513 -> NONTERM_recdExpr 
    | 514 -> NONTERM_recdExpr 
    | 515 -> NONTERM_recdExpr 
    | 516 -> NONTERM_recdExpr 
    | 517 -> NONTERM_recdExpr 
    | 518 -> NONTERM_recdExpr 
    | 519 -> NONTERM_opt_seps_recd 
    | 520 -> NONTERM_opt_seps_recd 
    | 521 -> NONTERM_seps_recd 
    | 522 -> NONTERM_seps_recd 
    | 523 -> NONTERM_seps_recd 
    | 524 -> NONTERM_seps_recd 
    | 525 -> NONTERM_pathOrUnderscore 
    | 526 -> NONTERM_pathOrUnderscore 
    | 527 -> NONTERM_recdExprBindings 
    | 528 -> NONTERM_recdExprBindings 
    | 529 -> NONTERM_recdBinding 
    | 530 -> NONTERM_recdBinding 
    | 531 -> NONTERM_recdBinding 
    | 532 -> NONTERM_recdBinding 
    | 533 -> NONTERM_recdBinding 
    | 534 -> NONTERM_forLoopDirection 
    | 535 -> NONTERM_forLoopDirection 
    | 536 -> NONTERM_typeWithTypeConstraints 
    | 537 -> NONTERM_topTypeWithTypeConstraints 
    | 538 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 539 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 540 -> NONTERM_topType 
    | 541 -> NONTERM_topType 
    | 542 -> NONTERM_topTupleType 
    | 543 -> NONTERM_topTupleType 
    | 544 -> NONTERM_topTupleTypeElements 
    | 545 -> NONTERM_topTupleTypeElements 
    | 546 -> NONTERM_topAppType 
    | 547 -> NONTERM_topAppType 
    | 548 -> NONTERM_topAppType 
    | 549 -> NONTERM_topAppType 
    | 550 -> NONTERM_topAppType 
    | 551 -> NONTERM_topAppType 
    | 552 -> NONTERM_typ 
    | 553 -> NONTERM_typ 
    | 554 -> NONTERM_tupleType 
    | 555 -> NONTERM_tupleType 
    | 556 -> NONTERM_tupleType 
    | 557 -> NONTERM_tupleType 
    | 558 -> NONTERM_tupleOrQuotTypeElements 
    | 559 -> NONTERM_tupleOrQuotTypeElements 
    | 560 -> NONTERM_tupleOrQuotTypeElements 
    | 561 -> NONTERM_tupleTypeElements 
    | 562 -> NONTERM_tupleTypeElements 
    | 563 -> NONTERM_appTypeCon 
    | 564 -> NONTERM_appTypeConPower 
    | 565 -> NONTERM_appTypeConPower 
    | 566 -> NONTERM_appType 
    | 567 -> NONTERM_appType 
    | 568 -> NONTERM_appType 
    | 569 -> NONTERM_appType 
    | 570 -> NONTERM_appType 
    | 571 -> NONTERM_appType 
    | 572 -> NONTERM_arrayTypeSuffix 
    | 573 -> NONTERM_arrayTypeSuffix 
    | 574 -> NONTERM_arrayTypeSuffix 
    | 575 -> NONTERM_arrayTypeSuffix 
    | 576 -> NONTERM_appTypePrefixArguments 
    | 577 -> NONTERM_typeArgListElements 
    | 578 -> NONTERM_typeArgListElements 
    | 579 -> NONTERM_powerType 
    | 580 -> NONTERM_powerType 
    | 581 -> NONTERM_powerType 
    | 582 -> NONTERM_appTypeNonAtomicDeprecated 
    | 583 -> NONTERM_appTypeNonAtomicDeprecated 
    | 584 -> NONTERM_appTypeNonAtomicDeprecated 
    | 585 -> NONTERM_appTypeNonAtomicDeprecated 
    | 586 -> NONTERM_appTypeNonAtomicDeprecated 
    | 587 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 588 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 589 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 590 -> NONTERM_atomType 
    | 591 -> NONTERM_atomType 
    | 592 -> NONTERM_atomType 
    | 593 -> NONTERM_atomType 
    | 594 -> NONTERM_atomType 
    | 595 -> NONTERM_atomType 
    | 596 -> NONTERM_atomType 
    | 597 -> NONTERM_atomType 
    | 598 -> NONTERM_atomType 
    | 599 -> NONTERM_atomType 
    | 600 -> NONTERM_atomType 
    | 601 -> NONTERM_typeArgsNoHpaDeprecated 
    | 602 -> NONTERM_typeArgsNoHpaDeprecated 
    | 603 -> NONTERM_typeArgsActual 
    | 604 -> NONTERM_typeArgsActual 
    | 605 -> NONTERM_typeArgsActual 
    | 606 -> NONTERM_typeArgsActual 
    | 607 -> NONTERM_typeArgsActual 
    | 608 -> NONTERM_typeArgsActual 
    | 609 -> NONTERM_typeArgsActual 
    | 610 -> NONTERM_typeArgActual 
    | 611 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 612 -> NONTERM_measureTypeArg 
    | 613 -> NONTERM_measureTypeArg 
    | 614 -> NONTERM_measureTypeAtom 
    | 615 -> NONTERM_measureTypeAtom 
    | 616 -> NONTERM_measureTypePower 
    | 617 -> NONTERM_measureTypePower 
    | 618 -> NONTERM_measureTypePower 
    | 619 -> NONTERM_measureTypePower 
    | 620 -> NONTERM_measureTypeSeq 
    | 621 -> NONTERM_measureTypeSeq 
    | 622 -> NONTERM_measureTypeExpr 
    | 623 -> NONTERM_measureTypeExpr 
    | 624 -> NONTERM_measureTypeExpr 
    | 625 -> NONTERM_measureTypeExpr 
    | 626 -> NONTERM_typar 
    | 627 -> NONTERM_typar 
    | 628 -> NONTERM_staticallyKnownHeadTypar 
    | 629 -> NONTERM_ident 
    | 630 -> NONTERM_path 
    | 631 -> NONTERM_path 
    | 632 -> NONTERM_path 
    | 633 -> NONTERM_path 
    | 634 -> NONTERM_path 
    | 635 -> NONTERM_opName 
    | 636 -> NONTERM_opName 
    | 637 -> NONTERM_opName 
    | 638 -> NONTERM_opName 
    | 639 -> NONTERM_opName 
    | 640 -> NONTERM_operatorName 
    | 641 -> NONTERM_operatorName 
    | 642 -> NONTERM_operatorName 
    | 643 -> NONTERM_operatorName 
    | 644 -> NONTERM_operatorName 
    | 645 -> NONTERM_operatorName 
    | 646 -> NONTERM_operatorName 
    | 647 -> NONTERM_operatorName 
    | 648 -> NONTERM_operatorName 
    | 649 -> NONTERM_operatorName 
    | 650 -> NONTERM_operatorName 
    | 651 -> NONTERM_operatorName 
    | 652 -> NONTERM_operatorName 
    | 653 -> NONTERM_operatorName 
    | 654 -> NONTERM_operatorName 
    | 655 -> NONTERM_operatorName 
    | 656 -> NONTERM_operatorName 
    | 657 -> NONTERM_operatorName 
    | 658 -> NONTERM_operatorName 
    | 659 -> NONTERM_operatorName 
    | 660 -> NONTERM_operatorName 
    | 661 -> NONTERM_operatorName 
    | 662 -> NONTERM_operatorName 
    | 663 -> NONTERM_operatorName 
    | 664 -> NONTERM_operatorName 
    | 665 -> NONTERM_operatorName 
    | 666 -> NONTERM_barName 
    | 667 -> NONTERM_barNames 
    | 668 -> NONTERM_barNames 
    | 669 -> NONTERM_identOrOp 
    | 670 -> NONTERM_identOrOp 
    | 671 -> NONTERM_pathOp 
    | 672 -> NONTERM_pathOp 
    | 673 -> NONTERM_pathOp 
    | 674 -> NONTERM_pathOp 
    | 675 -> NONTERM_pathOp 
    | 676 -> NONTERM_nameop 
    | 677 -> NONTERM_topSeparator 
    | 678 -> NONTERM_topSeparator 
    | 679 -> NONTERM_topSeparator 
    | 680 -> NONTERM_topSeparators 
    | 681 -> NONTERM_topSeparators 
    | 682 -> NONTERM_interactiveSeparator 
    | 683 -> NONTERM_interactiveSeparator 
    | 684 -> NONTERM_interactiveSeparators 
    | 685 -> NONTERM_interactiveSeparators 
    | 686 -> NONTERM_opt_interactiveSeparators 
    | 687 -> NONTERM_opt_interactiveSeparators 
    | 688 -> NONTERM_opt_topSeparators 
    | 689 -> NONTERM_opt_topSeparators 
    | 690 -> NONTERM_seps 
    | 691 -> NONTERM_seps 
    | 692 -> NONTERM_seps 
    | 693 -> NONTERM_seps 
    | 694 -> NONTERM_declEnd 
    | 695 -> NONTERM_declEnd 
    | 696 -> NONTERM_declEnd 
    | 697 -> NONTERM_opt_declEnd 
    | 698 -> NONTERM_opt_declEnd 
    | 699 -> NONTERM_opt_declEnd 
    | 700 -> NONTERM_opt_declEnd 
    | 701 -> NONTERM_opt_ODECLEND 
    | 702 -> NONTERM_opt_ODECLEND 
    | 703 -> NONTERM_deprecated_opt_equals 
    | 704 -> NONTERM_deprecated_opt_equals 
    | 705 -> NONTERM_opt_OBLOCKSEP 
    | 706 -> NONTERM_opt_OBLOCKSEP 
    | 707 -> NONTERM_opt_seps 
    | 708 -> NONTERM_opt_seps 
    | 709 -> NONTERM_opt_rec 
    | 710 -> NONTERM_opt_rec 
    | 711 -> NONTERM_opt_bar 
    | 712 -> NONTERM_opt_bar 
    | 713 -> NONTERM_opt_inline 
    | 714 -> NONTERM_opt_inline 
    | 715 -> NONTERM_opt_mutable 
    | 716 -> NONTERM_opt_mutable 
    | 717 -> NONTERM_opt_ref 
    | 718 -> NONTERM_opt_ref 
    | 719 -> NONTERM_doToken 
    | 720 -> NONTERM_doToken 
    | 721 -> NONTERM_doneDeclEnd 
    | 722 -> NONTERM_doneDeclEnd 
    | 723 -> NONTERM_structOrBegin 
    | 724 -> NONTERM_structOrBegin 
    | 725 -> NONTERM_sigOrBegin 
    | 726 -> NONTERM_sigOrBegin 
    | 727 -> NONTERM_colonOrEquals 
    | 728 -> NONTERM_colonOrEquals 
    | 729 -> NONTERM_opt_HASH 
    | 730 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 731 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 732 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 733 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 734 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 735 -> NONTERM_type_keyword 
    | 736 -> NONTERM_type_keyword 
    | 737 -> NONTERM_type_keyword 
    | 738 -> NONTERM_type_keyword 
    | 739 -> NONTERM_type_keyword 
    | 740 -> NONTERM_module_keyword 
    | 741 -> NONTERM_module_keyword 
    | 742 -> NONTERM_module_keyword 
    | 743 -> NONTERM_rbrace 
    | 744 -> NONTERM_rbrace 
    | 745 -> NONTERM_rbrace 
    | 746 -> NONTERM_rparen 
    | 747 -> NONTERM_rparen 
    | 748 -> NONTERM_rparen 
    | 749 -> NONTERM_oblockend 
    | 750 -> NONTERM_oblockend 
    | 751 -> NONTERM_oblockend 
    | 752 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 753 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 754 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 755 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 756 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 757 -> NONTERM_ends_coming_soon_or_recover 
    | 758 -> NONTERM_ends_coming_soon_or_recover 
    | 759 -> NONTERM_ends_coming_soon_or_recover 
    | 760 -> NONTERM_ends_coming_soon_or_recover 
    | 761 -> NONTERM_ends_coming_soon_or_recover 
    | 762 -> NONTERM_ends_coming_soon_or_recover 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 221 
let _fsyacc_tagOfErrorTerminal = 219

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | OBLOCKEND_COMING_SOON  -> "OBLOCKEND_COMING_SOON" 
  | OBLOCKEND_IS_HERE  -> "OBLOCKEND_IS_HERE" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OBODY_OPERATOR  -> "OBODY_OPERATOR" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OSELECT  -> "OSELECT" 
  | OWHERE  -> "OWHERE" 
  | OYIELD  -> "OYIELD" 
  | OWHEN  -> "OWHEN" 
  | OPARALLEL_OPERATOR  -> "OPARALLEL_OPERATOR" 
  | OWAIT  -> "OWAIT" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | TYPE_COMING_SOON  -> "TYPE_COMING_SOON" 
  | TYPE_IS_HERE  -> "TYPE_IS_HERE" 
  | MODULE_COMING_SOON  -> "MODULE_COMING_SOON" 
  | MODULE_IS_HERE  -> "MODULE_IS_HERE" 
  | RULE  -> "RULE" 
  | CREATE  -> "CREATE" 
  | WAIT  -> "WAIT" 
  | WAIT_UNTIL  -> "WAIT_UNTIL" 
  | YIELD  -> "YIELD" 
  | SELECT_OPERATOR  -> "SELECT_OPERATOR" 
  | PARALLEL_OPERATOR  -> "PARALLEL_OPERATOR" 
  | INT_SELECT_OPERATOR  -> "INT_SELECT_OPERATOR" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE  -> "RBRACE" 
  | RBRACE_COMING_SOON  -> "RBRACE_COMING_SOON" 
  | RBRACE_IS_HERE  -> "RBRACE_IS_HERE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | LBRACE_LESS  -> "LBRACE_LESS" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | GREATER_RBRACE  -> "GREATER_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | LBRACE  -> "LBRACE" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | RPAREN_COMING_SOON  -> "RPAREN_COMING_SOON" 
  | RPAREN_IS_HERE  -> "RPAREN_IS_HERE" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | IMPORT  -> "IMPORT" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | BODY_OPERATOR  -> "BODY_OPERATOR" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | CONST  -> "CONST" 
  | WORLD_ENTITY  -> "WORLD_ENTITY" 
  | MASTER  -> "MASTER" 
  | SLAVE  -> "SLAVE" 
  | CONNECT  -> "CONNECT" 
  | DISCONNECT  -> "DISCONNECT" 
  | VIRTUAL  -> "VIRTUAL" 
  | ENTITY  -> "ENTITY" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MUTABLE  -> "MUTABLE" 
  | REFERENCE  -> "REFERENCE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | JOIN_IN  -> "JOIN_IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | NATIVEINT _ -> "NATIVEINT" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 
  | A  -> "A" 
  | B  -> "B" 
  | C  -> "C" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | OBLOCKEND_COMING_SOON  -> (null : System.Object) 
  | OBLOCKEND_IS_HERE  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OBODY_OPERATOR  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OSELECT  -> (null : System.Object) 
  | OWHERE  -> (null : System.Object) 
  | OYIELD  -> (null : System.Object) 
  | OWHEN  -> (null : System.Object) 
  | OPARALLEL_OPERATOR  -> (null : System.Object) 
  | OWAIT  -> (null : System.Object) 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | TYPE_COMING_SOON  -> (null : System.Object) 
  | TYPE_IS_HERE  -> (null : System.Object) 
  | MODULE_COMING_SOON  -> (null : System.Object) 
  | MODULE_IS_HERE  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CREATE  -> (null : System.Object) 
  | WAIT  -> (null : System.Object) 
  | WAIT_UNTIL  -> (null : System.Object) 
  | YIELD  -> (null : System.Object) 
  | SELECT_OPERATOR  -> (null : System.Object) 
  | PARALLEL_OPERATOR  -> (null : System.Object) 
  | INT_SELECT_OPERATOR  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | RBRACE_COMING_SOON  -> (null : System.Object) 
  | RBRACE_IS_HERE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | LBRACE_LESS  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | GREATER_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RPAREN_COMING_SOON  -> (null : System.Object) 
  | RPAREN_IS_HERE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | BODY_OPERATOR  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | WORLD_ENTITY  -> (null : System.Object) 
  | MASTER  -> (null : System.Object) 
  | SLAVE  -> (null : System.Object) 
  | CONNECT  -> (null : System.Object) 
  | DISCONNECT  -> (null : System.Object) 
  | VIRTUAL  -> (null : System.Object) 
  | ENTITY  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | REFERENCE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | JOIN_IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | A  -> (null : System.Object) 
  | B  -> (null : System.Object) 
  | C  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 169us; 65535us; 54us; 279us; 58us; 279us; 63us; 279us; 118us; 279us; 121us; 279us; 123us; 279us; 126us; 279us; 129us; 279us; 152us; 279us; 156us; 279us; 168us; 279us; 192us; 279us; 195us; 279us; 208us; 279us; 212us; 279us; 221us; 279us; 229us; 279us; 235us; 279us; 248us; 279us; 251us; 279us; 255us; 279us; 265us; 279us; 271us; 279us; 280us; 279us; 282us; 279us; 285us; 279us; 287us; 279us; 311us; 279us; 312us; 279us; 316us; 279us; 317us; 279us; 318us; 279us; 319us; 279us; 321us; 279us; 323us; 279us; 325us; 279us; 328us; 279us; 330us; 279us; 332us; 279us; 337us; 279us; 340us; 279us; 349us; 279us; 369us; 279us; 372us; 279us; 374us; 279us; 376us; 279us; 377us; 279us; 378us; 279us; 379us; 279us; 386us; 279us; 388us; 279us; 390us; 279us; 395us; 279us; 402us; 279us; 407us; 279us; 409us; 279us; 412us; 279us; 415us; 279us; 429us; 279us; 436us; 279us; 443us; 279us; 446us; 279us; 450us; 279us; 458us; 279us; 461us; 279us; 464us; 279us; 468us; 279us; 471us; 279us; 475us; 279us; 479us; 279us; 484us; 279us; 486us; 279us; 495us; 279us; 497us; 279us; 505us; 279us; 512us; 279us; 554us; 279us; 556us; 279us; 558us; 279us; 559us; 279us; 560us; 279us; 561us; 279us; 562us; 279us; 563us; 279us; 564us; 279us; 565us; 279us; 566us; 279us; 567us; 279us; 568us; 279us; 569us; 279us; 570us; 279us; 571us; 279us; 572us; 279us; 573us; 279us; 574us; 279us; 575us; 279us; 576us; 279us; 577us; 279us; 600us; 279us; 603us; 279us; 605us; 279us; 610us; 279us; 617us; 279us; 622us; 279us; 623us; 279us; 627us; 279us; 629us; 279us; 633us; 279us; 635us; 279us; 639us; 279us; 642us; 279us; 643us; 279us; 644us; 279us; 645us; 279us; 647us; 279us; 648us; 279us; 650us; 279us; 651us; 279us; 653us; 279us; 655us; 279us; 659us; 279us; 661us; 279us; 662us; 279us; 665us; 279us; 671us; 279us; 672us; 279us; 675us; 279us; 676us; 279us; 689us; 279us; 699us; 279us; 702us; 279us; 710us; 279us; 711us; 279us; 721us; 279us; 728us; 279us; 734us; 279us; 735us; 279us; 748us; 279us; 760us; 279us; 761us; 279us; 763us; 279us; 765us; 279us; 769us; 279us; 770us; 279us; 772us; 279us; 774us; 279us; 778us; 279us; 783us; 279us; 808us; 279us; 816us; 279us; 819us; 279us; 822us; 279us; 825us; 279us; 828us; 279us; 832us; 279us; 835us; 279us; 838us; 279us; 840us; 279us; 842us; 279us; 845us; 279us; 847us; 279us; 850us; 279us; 857us; 279us; 869us; 279us; 870us; 279us; 887us; 279us; 891us; 279us; 921us; 279us; 923us; 279us; 1us; 65535us; 0us; 7us; 1us; 65535us; 0us; 2us; 2us; 65535us; 0us; 9us; 7us; 11us; 3us; 65535us; 0us; 25us; 7us; 25us; 18us; 19us; 5us; 65535us; 0us; 26us; 7us; 26us; 18us; 26us; 30us; 31us; 34us; 35us; 9us; 65535us; 0us; 27us; 7us; 27us; 16us; 33us; 18us; 27us; 23us; 33us; 28us; 29us; 30us; 27us; 32us; 33us; 34us; 27us; 9us; 65535us; 0us; 28us; 7us; 28us; 16us; 28us; 18us; 28us; 23us; 28us; 28us; 28us; 30us; 28us; 32us; 28us; 34us; 28us; 9us; 65535us; 0us; 71us; 7us; 71us; 16us; 71us; 18us; 71us; 23us; 71us; 28us; 71us; 30us; 71us; 32us; 71us; 34us; 71us; 10us; 65535us; 0us; 37us; 7us; 37us; 16us; 37us; 18us; 37us; 23us; 37us; 28us; 37us; 30us; 37us; 32us; 37us; 34us; 37us; 38us; 39us; 10us; 65535us; 0us; 38us; 7us; 38us; 16us; 38us; 18us; 38us; 23us; 38us; 28us; 38us; 30us; 38us; 32us; 38us; 34us; 38us; 38us; 38us; 1us; 65535us; 40us; 41us; 2us; 65535us; 40us; 50us; 51us; 52us; 2us; 65535us; 40us; 56us; 51us; 56us; 9us; 65535us; 0us; 36us; 7us; 36us; 16us; 36us; 18us; 36us; 23us; 36us; 28us; 36us; 30us; 36us; 32us; 36us; 34us; 36us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 131us; 132us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 3us; 65535us; 74us; 91us; 77us; 91us; 88us; 91us; 3us; 65535us; 75us; 76us; 78us; 79us; 89us; 90us; 3us; 65535us; 74us; 75us; 77us; 78us; 88us; 89us; 1us; 65535us; 92us; 93us; 1us; 65535us; 94us; 95us; 1us; 65535us; 94us; 100us; 1us; 65535us; 139us; 140us; 4us; 65535us; 107us; 108us; 113us; 114us; 116us; 117us; 139us; 111us; 4us; 65535us; 107us; 112us; 113us; 112us; 116us; 112us; 139us; 112us; 2us; 65535us; 132us; 133us; 159us; 160us; 1us; 65535us; 162us; 163us; 1us; 65535us; 162us; 165us; 0us; 65535us; 4us; 65535us; 107us; 115us; 113us; 115us; 116us; 115us; 139us; 115us; 0us; 65535us; 34us; 65535us; 118us; 320us; 123us; 320us; 168us; 320us; 248us; 320us; 280us; 344us; 285us; 344us; 311us; 320us; 312us; 320us; 316us; 320us; 317us; 320us; 318us; 320us; 319us; 320us; 321us; 344us; 323us; 344us; 325us; 344us; 328us; 344us; 330us; 344us; 332us; 344us; 337us; 320us; 340us; 320us; 349us; 320us; 369us; 320us; 374us; 320us; 376us; 320us; 377us; 320us; 378us; 320us; 379us; 320us; 386us; 320us; 388us; 320us; 495us; 320us; 603us; 320us; 605us; 320us; 610us; 320us; 617us; 320us; 8us; 65535us; 94us; 142us; 107us; 131us; 113us; 131us; 116us; 131us; 139us; 131us; 145us; 158us; 150us; 158us; 167us; 168us; 4us; 65535us; 96us; 97us; 98us; 99us; 101us; 102us; 103us; 104us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 94us; 106us; 1us; 65535us; 94us; 105us; 1us; 65535us; 142us; 144us; 2us; 65535us; 145us; 146us; 150us; 151us; 1us; 65535us; 154us; 155us; 1us; 65535us; 168us; 169us; 2us; 65535us; 145us; 149us; 150us; 149us; 2us; 65535us; 171us; 172us; 175us; 176us; 2us; 65535us; 192us; 210us; 208us; 210us; 0us; 65535us; 3us; 65535us; 74us; 87us; 77us; 87us; 88us; 87us; 0us; 65535us; 1us; 65535us; 142us; 143us; 3us; 65535us; 142us; 184us; 185us; 186us; 188us; 189us; 3us; 65535us; 142us; 188us; 185us; 188us; 188us; 188us; 3us; 65535us; 142us; 190us; 185us; 190us; 188us; 190us; 1us; 65535us; 142us; 185us; 1us; 65535us; 142us; 187us; 2us; 65535us; 192us; 193us; 208us; 209us; 2us; 65535us; 177us; 178us; 215us; 216us; 2us; 65535us; 177us; 214us; 215us; 214us; 4us; 65535us; 145us; 173us; 150us; 173us; 177us; 218us; 215us; 218us; 9us; 65535us; 0us; 83us; 7us; 83us; 16us; 83us; 18us; 83us; 23us; 83us; 28us; 83us; 30us; 83us; 32us; 83us; 34us; 83us; 9us; 65535us; 0us; 82us; 7us; 82us; 16us; 82us; 18us; 82us; 23us; 82us; 28us; 82us; 30us; 82us; 32us; 82us; 34us; 82us; 84us; 65535us; 121us; 457us; 126us; 457us; 129us; 457us; 156us; 457us; 229us; 457us; 235us; 457us; 251us; 457us; 255us; 457us; 265us; 457us; 282us; 457us; 287us; 457us; 390us; 457us; 395us; 457us; 407us; 457us; 409us; 457us; 412us; 457us; 415us; 457us; 429us; 457us; 436us; 457us; 443us; 457us; 446us; 457us; 450us; 457us; 458us; 457us; 461us; 457us; 464us; 457us; 468us; 457us; 471us; 457us; 475us; 457us; 479us; 457us; 484us; 457us; 486us; 457us; 497us; 457us; 505us; 457us; 512us; 457us; 556us; 457us; 558us; 457us; 559us; 457us; 560us; 457us; 561us; 457us; 562us; 457us; 563us; 457us; 564us; 457us; 565us; 457us; 566us; 457us; 567us; 457us; 568us; 457us; 569us; 457us; 570us; 457us; 571us; 457us; 572us; 457us; 573us; 457us; 574us; 457us; 575us; 457us; 576us; 457us; 577us; 457us; 600us; 457us; 622us; 457us; 623us; 457us; 627us; 457us; 629us; 457us; 633us; 457us; 635us; 457us; 639us; 457us; 642us; 457us; 643us; 457us; 689us; 457us; 699us; 457us; 702us; 457us; 710us; 457us; 711us; 457us; 721us; 457us; 728us; 457us; 734us; 457us; 735us; 457us; 748us; 457us; 760us; 457us; 761us; 457us; 763us; 457us; 765us; 457us; 769us; 457us; 770us; 457us; 778us; 457us; 783us; 457us; 808us; 457us; 1us; 65535us; 71us; 73us; 85us; 65535us; 71us; 72us; 121us; 415us; 126us; 415us; 129us; 415us; 156us; 415us; 229us; 415us; 235us; 415us; 251us; 415us; 255us; 415us; 265us; 415us; 282us; 415us; 287us; 415us; 390us; 415us; 395us; 415us; 407us; 415us; 409us; 415us; 412us; 415us; 415us; 415us; 429us; 461us; 436us; 461us; 443us; 461us; 446us; 415us; 450us; 415us; 458us; 415us; 461us; 415us; 464us; 415us; 468us; 415us; 471us; 415us; 475us; 415us; 479us; 461us; 484us; 461us; 486us; 415us; 497us; 415us; 505us; 415us; 512us; 415us; 556us; 461us; 558us; 461us; 559us; 461us; 560us; 461us; 561us; 461us; 562us; 461us; 563us; 461us; 564us; 461us; 565us; 461us; 566us; 461us; 567us; 461us; 568us; 461us; 569us; 461us; 570us; 461us; 571us; 461us; 572us; 461us; 573us; 461us; 574us; 461us; 575us; 461us; 576us; 461us; 577us; 461us; 600us; 415us; 622us; 461us; 623us; 415us; 627us; 461us; 629us; 415us; 633us; 461us; 635us; 415us; 639us; 461us; 642us; 461us; 643us; 461us; 689us; 415us; 699us; 415us; 702us; 415us; 710us; 461us; 711us; 461us; 721us; 415us; 728us; 415us; 734us; 415us; 735us; 415us; 748us; 415us; 760us; 461us; 761us; 461us; 763us; 415us; 765us; 461us; 769us; 461us; 770us; 461us; 778us; 461us; 783us; 461us; 808us; 461us; 84us; 65535us; 121us; 467us; 126us; 467us; 129us; 467us; 156us; 467us; 229us; 467us; 235us; 467us; 251us; 467us; 255us; 467us; 265us; 467us; 282us; 467us; 287us; 467us; 390us; 467us; 395us; 467us; 407us; 467us; 409us; 467us; 412us; 467us; 415us; 467us; 429us; 467us; 436us; 467us; 443us; 467us; 446us; 467us; 450us; 467us; 458us; 467us; 461us; 467us; 464us; 467us; 468us; 467us; 471us; 467us; 475us; 467us; 479us; 467us; 484us; 467us; 486us; 467us; 497us; 467us; 505us; 467us; 512us; 467us; 556us; 467us; 558us; 467us; 559us; 467us; 560us; 467us; 561us; 467us; 562us; 467us; 563us; 467us; 564us; 467us; 565us; 467us; 566us; 467us; 567us; 467us; 568us; 467us; 569us; 467us; 570us; 467us; 571us; 467us; 572us; 467us; 573us; 467us; 574us; 467us; 575us; 467us; 576us; 467us; 577us; 467us; 600us; 467us; 622us; 467us; 623us; 467us; 627us; 467us; 629us; 467us; 633us; 467us; 635us; 467us; 639us; 467us; 642us; 467us; 643us; 467us; 689us; 467us; 699us; 467us; 702us; 467us; 710us; 467us; 711us; 467us; 721us; 467us; 728us; 467us; 734us; 467us; 735us; 467us; 748us; 467us; 760us; 467us; 761us; 467us; 763us; 467us; 765us; 467us; 769us; 467us; 770us; 467us; 778us; 467us; 783us; 467us; 808us; 467us; 0us; 65535us; 5us; 65535us; 233us; 234us; 236us; 237us; 451us; 452us; 469us; 470us; 472us; 473us; 2us; 65535us; 227us; 228us; 232us; 233us; 2us; 65535us; 240us; 241us; 243us; 244us; 3us; 65535us; 227us; 240us; 232us; 240us; 242us; 243us; 3us; 65535us; 227us; 245us; 232us; 245us; 242us; 245us; 1us; 65535us; 251us; 252us; 2us; 65535us; 251us; 259us; 255us; 256us; 1us; 65535us; 260us; 261us; 1us; 65535us; 261us; 262us; 1us; 65535us; 263us; 264us; 2us; 65535us; 263us; 269us; 267us; 268us; 169us; 65535us; 54us; 298us; 58us; 298us; 63us; 298us; 118us; 298us; 121us; 298us; 123us; 298us; 126us; 298us; 129us; 298us; 152us; 909us; 156us; 298us; 168us; 298us; 192us; 909us; 195us; 909us; 208us; 909us; 212us; 909us; 221us; 909us; 229us; 298us; 235us; 298us; 248us; 298us; 251us; 298us; 255us; 298us; 265us; 298us; 271us; 909us; 280us; 298us; 282us; 298us; 285us; 298us; 287us; 298us; 311us; 298us; 312us; 298us; 316us; 298us; 317us; 298us; 318us; 298us; 319us; 298us; 321us; 298us; 323us; 298us; 325us; 298us; 328us; 298us; 330us; 298us; 332us; 298us; 337us; 298us; 340us; 298us; 349us; 298us; 369us; 298us; 372us; 909us; 374us; 298us; 376us; 298us; 377us; 298us; 378us; 298us; 379us; 298us; 386us; 298us; 388us; 298us; 390us; 298us; 395us; 298us; 402us; 909us; 407us; 298us; 409us; 298us; 412us; 298us; 415us; 298us; 429us; 298us; 436us; 298us; 443us; 298us; 446us; 298us; 450us; 298us; 458us; 298us; 461us; 298us; 464us; 298us; 468us; 298us; 471us; 298us; 475us; 298us; 479us; 298us; 484us; 298us; 486us; 298us; 495us; 298us; 497us; 298us; 505us; 298us; 512us; 298us; 554us; 909us; 556us; 298us; 558us; 298us; 559us; 298us; 560us; 298us; 561us; 298us; 562us; 298us; 563us; 298us; 564us; 298us; 565us; 298us; 566us; 298us; 567us; 298us; 568us; 298us; 569us; 298us; 570us; 298us; 571us; 298us; 572us; 298us; 573us; 298us; 574us; 298us; 575us; 298us; 576us; 298us; 577us; 298us; 600us; 298us; 603us; 298us; 605us; 298us; 610us; 298us; 617us; 298us; 622us; 298us; 623us; 298us; 627us; 298us; 629us; 298us; 633us; 298us; 635us; 298us; 639us; 298us; 642us; 298us; 643us; 298us; 644us; 298us; 645us; 298us; 647us; 298us; 648us; 298us; 650us; 298us; 651us; 298us; 653us; 909us; 655us; 298us; 659us; 298us; 661us; 298us; 662us; 298us; 665us; 298us; 671us; 298us; 672us; 298us; 675us; 298us; 676us; 298us; 689us; 298us; 699us; 298us; 702us; 298us; 710us; 298us; 711us; 298us; 721us; 298us; 728us; 298us; 734us; 298us; 735us; 298us; 748us; 298us; 760us; 298us; 761us; 298us; 763us; 298us; 765us; 298us; 769us; 298us; 770us; 298us; 772us; 909us; 774us; 298us; 778us; 298us; 783us; 298us; 808us; 298us; 816us; 909us; 819us; 909us; 822us; 909us; 825us; 909us; 828us; 909us; 832us; 909us; 835us; 909us; 838us; 909us; 840us; 909us; 842us; 909us; 845us; 909us; 847us; 909us; 850us; 909us; 857us; 909us; 869us; 909us; 870us; 909us; 887us; 909us; 891us; 909us; 921us; 909us; 923us; 909us; 84us; 65535us; 121us; 474us; 126us; 474us; 129us; 474us; 156us; 474us; 229us; 474us; 235us; 474us; 251us; 474us; 255us; 474us; 265us; 474us; 282us; 474us; 287us; 474us; 390us; 474us; 395us; 474us; 407us; 474us; 409us; 474us; 412us; 474us; 415us; 474us; 429us; 474us; 436us; 474us; 443us; 474us; 446us; 474us; 450us; 474us; 458us; 474us; 461us; 474us; 464us; 474us; 468us; 474us; 471us; 474us; 475us; 474us; 479us; 474us; 484us; 474us; 486us; 474us; 497us; 474us; 505us; 474us; 512us; 474us; 556us; 474us; 558us; 474us; 559us; 474us; 560us; 474us; 561us; 474us; 562us; 474us; 563us; 474us; 564us; 474us; 565us; 474us; 566us; 474us; 567us; 474us; 568us; 474us; 569us; 474us; 570us; 474us; 571us; 474us; 572us; 474us; 573us; 474us; 574us; 474us; 575us; 474us; 576us; 474us; 577us; 474us; 600us; 474us; 622us; 474us; 623us; 474us; 627us; 474us; 629us; 474us; 633us; 474us; 635us; 474us; 639us; 474us; 642us; 474us; 643us; 474us; 689us; 474us; 699us; 474us; 702us; 474us; 710us; 474us; 711us; 474us; 721us; 474us; 728us; 474us; 734us; 474us; 735us; 474us; 748us; 474us; 760us; 474us; 761us; 474us; 763us; 474us; 765us; 474us; 769us; 474us; 770us; 474us; 778us; 474us; 783us; 474us; 808us; 474us; 137us; 65535us; 54us; 713us; 58us; 713us; 63us; 713us; 118us; 345us; 121us; 713us; 123us; 345us; 126us; 713us; 129us; 713us; 156us; 713us; 168us; 345us; 229us; 713us; 235us; 713us; 248us; 345us; 251us; 713us; 255us; 713us; 265us; 713us; 280us; 345us; 282us; 713us; 285us; 345us; 287us; 713us; 311us; 345us; 312us; 345us; 316us; 345us; 317us; 345us; 318us; 345us; 319us; 345us; 321us; 345us; 323us; 345us; 325us; 345us; 328us; 345us; 330us; 345us; 332us; 345us; 337us; 345us; 340us; 345us; 349us; 345us; 369us; 345us; 374us; 345us; 376us; 345us; 377us; 345us; 378us; 345us; 379us; 345us; 386us; 345us; 388us; 345us; 390us; 713us; 395us; 713us; 407us; 713us; 409us; 713us; 412us; 713us; 415us; 713us; 429us; 713us; 436us; 713us; 443us; 713us; 446us; 713us; 450us; 713us; 458us; 713us; 461us; 713us; 464us; 713us; 468us; 713us; 471us; 713us; 475us; 713us; 479us; 713us; 484us; 713us; 486us; 713us; 495us; 345us; 497us; 713us; 505us; 713us; 512us; 713us; 556us; 713us; 558us; 713us; 559us; 713us; 560us; 713us; 561us; 713us; 562us; 713us; 563us; 713us; 564us; 713us; 565us; 713us; 566us; 713us; 567us; 713us; 568us; 713us; 569us; 713us; 570us; 713us; 571us; 713us; 572us; 713us; 573us; 713us; 574us; 713us; 575us; 713us; 576us; 713us; 577us; 713us; 600us; 713us; 603us; 345us; 605us; 345us; 610us; 345us; 617us; 345us; 622us; 713us; 623us; 713us; 627us; 713us; 629us; 713us; 633us; 713us; 635us; 713us; 639us; 713us; 642us; 713us; 643us; 713us; 644us; 713us; 645us; 713us; 647us; 713us; 648us; 713us; 650us; 713us; 651us; 713us; 655us; 713us; 659us; 713us; 661us; 713us; 662us; 713us; 665us; 713us; 671us; 713us; 672us; 713us; 675us; 713us; 676us; 713us; 689us; 713us; 699us; 713us; 702us; 713us; 710us; 713us; 711us; 713us; 721us; 713us; 728us; 713us; 734us; 713us; 735us; 713us; 748us; 713us; 760us; 713us; 761us; 713us; 763us; 713us; 765us; 713us; 769us; 713us; 770us; 713us; 774us; 713us; 778us; 713us; 783us; 713us; 808us; 713us; 3us; 65535us; 118us; 119us; 168us; 154us; 248us; 249us; 1us; 65535us; 123us; 124us; 10us; 65535us; 118us; 301us; 123us; 302us; 168us; 301us; 248us; 301us; 311us; 303us; 312us; 304us; 316us; 305us; 317us; 306us; 318us; 307us; 319us; 308us; 10us; 65535us; 118us; 313us; 123us; 313us; 168us; 313us; 248us; 313us; 311us; 313us; 312us; 313us; 316us; 313us; 317us; 313us; 318us; 313us; 319us; 313us; 10us; 65535us; 118us; 314us; 123us; 314us; 168us; 314us; 248us; 314us; 311us; 314us; 312us; 314us; 316us; 314us; 317us; 314us; 318us; 314us; 319us; 314us; 26us; 65535us; 118us; 315us; 123us; 315us; 168us; 315us; 248us; 315us; 311us; 315us; 312us; 315us; 316us; 315us; 317us; 315us; 318us; 315us; 319us; 315us; 337us; 375us; 340us; 375us; 349us; 375us; 369us; 375us; 374us; 375us; 376us; 375us; 377us; 375us; 378us; 375us; 379us; 375us; 386us; 375us; 388us; 375us; 495us; 375us; 603us; 375us; 605us; 375us; 610us; 375us; 617us; 375us; 1us; 65535us; 320us; 321us; 8us; 65535us; 280us; 281us; 285us; 286us; 321us; 322us; 323us; 324us; 325us; 326us; 328us; 329us; 330us; 331us; 332us; 333us; 34us; 65535us; 118us; 327us; 123us; 327us; 168us; 327us; 248us; 327us; 280us; 328us; 285us; 328us; 311us; 327us; 312us; 327us; 316us; 327us; 317us; 327us; 318us; 327us; 319us; 327us; 321us; 328us; 323us; 328us; 325us; 328us; 328us; 328us; 330us; 328us; 332us; 328us; 337us; 327us; 340us; 327us; 349us; 327us; 369us; 327us; 374us; 327us; 376us; 327us; 377us; 327us; 378us; 327us; 379us; 327us; 386us; 327us; 388us; 327us; 495us; 327us; 603us; 327us; 605us; 327us; 610us; 327us; 617us; 327us; 1us; 65535us; 349us; 350us; 16us; 65535us; 337us; 364us; 340us; 364us; 349us; 356us; 369us; 357us; 374us; 358us; 376us; 359us; 377us; 360us; 378us; 361us; 379us; 362us; 386us; 363us; 388us; 364us; 495us; 365us; 603us; 366us; 605us; 366us; 610us; 366us; 617us; 366us; 16us; 65535us; 337us; 370us; 340us; 370us; 349us; 370us; 369us; 370us; 374us; 370us; 376us; 370us; 377us; 370us; 378us; 370us; 379us; 370us; 386us; 370us; 388us; 370us; 495us; 370us; 603us; 370us; 605us; 370us; 610us; 370us; 617us; 370us; 16us; 65535us; 337us; 371us; 340us; 371us; 349us; 371us; 369us; 371us; 374us; 371us; 376us; 371us; 377us; 371us; 378us; 371us; 379us; 371us; 386us; 371us; 388us; 371us; 495us; 371us; 603us; 371us; 605us; 371us; 610us; 371us; 617us; 371us; 1us; 65535us; 334us; 335us; 2us; 65535us; 334us; 380us; 383us; 384us; 2us; 65535us; 334us; 381us; 383us; 381us; 3us; 65535us; 337us; 338us; 340us; 341us; 388us; 389us; 0us; 65535us; 18us; 65535us; 121us; 122us; 126us; 127us; 129us; 130us; 156us; 157us; 229us; 230us; 235us; 236us; 265us; 266us; 282us; 283us; 415us; 462us; 450us; 451us; 461us; 462us; 464us; 465us; 468us; 469us; 471us; 472us; 486us; 487us; 497us; 498us; 505us; 506us; 512us; 513us; 3us; 65535us; 778us; 779us; 783us; 784us; 808us; 809us; 3us; 65535us; 287us; 288us; 623us; 624us; 763us; 764us; 37us; 65535us; 121us; 394us; 126us; 394us; 129us; 394us; 156us; 394us; 229us; 394us; 235us; 394us; 251us; 260us; 255us; 260us; 265us; 394us; 282us; 394us; 287us; 399us; 390us; 391us; 395us; 396us; 412us; 413us; 415us; 394us; 446us; 447us; 450us; 394us; 458us; 459us; 461us; 394us; 464us; 394us; 468us; 394us; 471us; 394us; 475us; 476us; 486us; 394us; 497us; 394us; 505us; 394us; 512us; 394us; 600us; 601us; 623us; 399us; 629us; 630us; 635us; 636us; 699us; 700us; 702us; 703us; 721us; 722us; 734us; 747us; 735us; 747us; 763us; 399us; 42us; 65535us; 121us; 401us; 126us; 401us; 129us; 401us; 156us; 401us; 229us; 401us; 235us; 401us; 251us; 401us; 255us; 401us; 265us; 401us; 282us; 401us; 287us; 401us; 390us; 401us; 395us; 401us; 407us; 408us; 409us; 410us; 412us; 401us; 415us; 401us; 446us; 401us; 450us; 401us; 458us; 401us; 461us; 401us; 464us; 401us; 468us; 401us; 471us; 401us; 475us; 401us; 486us; 401us; 497us; 401us; 505us; 401us; 512us; 401us; 600us; 401us; 623us; 401us; 629us; 401us; 635us; 401us; 689us; 758us; 699us; 401us; 702us; 401us; 721us; 401us; 728us; 758us; 734us; 401us; 735us; 401us; 748us; 758us; 763us; 401us; 63us; 65535us; 0us; 15us; 19us; 22us; 40us; 1082us; 42us; 1082us; 108us; 109us; 146us; 148us; 178us; 180us; 233us; 239us; 236us; 239us; 250us; 254us; 256us; 258us; 287us; 293us; 288us; 290us; 349us; 355us; 350us; 352us; 365us; 517us; 391us; 393us; 447us; 449us; 451us; 239us; 469us; 239us; 472us; 239us; 476us; 478us; 479us; 483us; 480us; 482us; 484us; 493us; 485us; 492us; 487us; 489us; 495us; 1082us; 496us; 1082us; 497us; 1082us; 498us; 1082us; 504us; 511us; 505us; 510us; 506us; 508us; 544us; 641us; 606us; 608us; 630us; 632us; 636us; 638us; 677us; 698us; 680us; 698us; 689us; 694us; 690us; 692us; 702us; 707us; 703us; 705us; 722us; 724us; 728us; 733us; 729us; 731us; 734us; 746us; 735us; 746us; 737us; 1076us; 748us; 753us; 749us; 751us; 760us; 762us; 765us; 1082us; 807us; 1082us; 808us; 1082us; 890us; 926us; 906us; 908us; 916us; 1082us; 921us; 932us; 923us; 1082us; 928us; 930us; 968us; 1082us; 88us; 65535us; 121us; 454us; 126us; 454us; 129us; 454us; 156us; 454us; 229us; 454us; 235us; 454us; 251us; 454us; 255us; 454us; 265us; 454us; 282us; 454us; 287us; 454us; 390us; 454us; 395us; 454us; 407us; 454us; 409us; 454us; 412us; 454us; 415us; 454us; 429us; 454us; 431us; 434us; 433us; 435us; 436us; 454us; 438us; 441us; 440us; 442us; 443us; 454us; 446us; 454us; 450us; 454us; 458us; 454us; 461us; 454us; 464us; 454us; 468us; 454us; 471us; 454us; 475us; 454us; 479us; 454us; 484us; 454us; 486us; 454us; 497us; 454us; 505us; 454us; 512us; 454us; 556us; 454us; 558us; 454us; 559us; 454us; 560us; 454us; 561us; 454us; 562us; 454us; 563us; 454us; 564us; 454us; 565us; 454us; 566us; 454us; 567us; 454us; 568us; 454us; 569us; 454us; 570us; 454us; 571us; 454us; 572us; 454us; 573us; 454us; 574us; 454us; 575us; 454us; 576us; 454us; 577us; 454us; 600us; 454us; 622us; 454us; 623us; 454us; 627us; 454us; 629us; 454us; 633us; 454us; 635us; 454us; 639us; 454us; 642us; 454us; 643us; 454us; 689us; 454us; 699us; 454us; 702us; 454us; 710us; 454us; 711us; 454us; 721us; 454us; 728us; 454us; 734us; 454us; 735us; 454us; 748us; 454us; 760us; 454us; 761us; 454us; 763us; 454us; 765us; 454us; 769us; 454us; 770us; 454us; 778us; 454us; 783us; 454us; 808us; 454us; 84us; 65535us; 121us; 455us; 126us; 455us; 129us; 455us; 156us; 455us; 229us; 455us; 235us; 455us; 251us; 455us; 255us; 455us; 265us; 455us; 282us; 455us; 287us; 455us; 390us; 455us; 395us; 455us; 407us; 455us; 409us; 455us; 412us; 455us; 415us; 455us; 429us; 455us; 436us; 455us; 443us; 455us; 446us; 455us; 450us; 455us; 458us; 455us; 461us; 455us; 464us; 455us; 468us; 455us; 471us; 455us; 475us; 455us; 479us; 455us; 484us; 455us; 486us; 455us; 497us; 455us; 505us; 455us; 512us; 455us; 556us; 455us; 558us; 455us; 559us; 455us; 560us; 455us; 561us; 455us; 562us; 455us; 563us; 455us; 564us; 455us; 565us; 455us; 566us; 455us; 567us; 455us; 568us; 455us; 569us; 455us; 570us; 455us; 571us; 455us; 572us; 455us; 573us; 455us; 574us; 455us; 575us; 455us; 576us; 455us; 577us; 455us; 600us; 455us; 622us; 455us; 623us; 455us; 627us; 455us; 629us; 455us; 633us; 455us; 635us; 455us; 639us; 455us; 642us; 455us; 643us; 455us; 689us; 455us; 699us; 455us; 702us; 455us; 710us; 455us; 711us; 455us; 721us; 455us; 728us; 455us; 734us; 455us; 735us; 455us; 748us; 455us; 760us; 455us; 761us; 455us; 763us; 455us; 765us; 455us; 769us; 455us; 770us; 455us; 778us; 455us; 783us; 455us; 808us; 455us; 4us; 65535us; 430us; 431us; 432us; 433us; 437us; 438us; 439us; 440us; 85us; 65535us; 121us; 456us; 126us; 456us; 129us; 456us; 156us; 456us; 229us; 456us; 235us; 456us; 251us; 456us; 255us; 456us; 265us; 456us; 282us; 456us; 287us; 456us; 390us; 456us; 395us; 456us; 407us; 456us; 409us; 456us; 412us; 456us; 415us; 456us; 429us; 456us; 436us; 456us; 443us; 456us; 446us; 456us; 450us; 456us; 452us; 453us; 458us; 456us; 461us; 456us; 464us; 456us; 468us; 456us; 471us; 456us; 475us; 456us; 479us; 456us; 484us; 456us; 486us; 456us; 497us; 456us; 505us; 456us; 512us; 456us; 556us; 456us; 558us; 456us; 559us; 456us; 560us; 456us; 561us; 456us; 562us; 456us; 563us; 456us; 564us; 456us; 565us; 456us; 566us; 456us; 567us; 456us; 568us; 456us; 569us; 456us; 570us; 456us; 571us; 456us; 572us; 456us; 573us; 456us; 574us; 456us; 575us; 456us; 576us; 456us; 577us; 456us; 600us; 456us; 622us; 456us; 623us; 456us; 627us; 456us; 629us; 456us; 633us; 456us; 635us; 456us; 639us; 456us; 642us; 456us; 643us; 456us; 689us; 456us; 699us; 456us; 702us; 456us; 710us; 456us; 711us; 456us; 721us; 456us; 728us; 456us; 734us; 456us; 735us; 456us; 748us; 456us; 760us; 456us; 761us; 456us; 763us; 456us; 765us; 456us; 769us; 456us; 770us; 456us; 778us; 456us; 783us; 456us; 808us; 456us; 84us; 65535us; 121us; 404us; 126us; 404us; 129us; 404us; 156us; 404us; 229us; 404us; 235us; 404us; 251us; 404us; 255us; 404us; 265us; 404us; 282us; 404us; 287us; 404us; 390us; 404us; 395us; 404us; 407us; 404us; 409us; 404us; 412us; 404us; 415us; 404us; 429us; 432us; 436us; 439us; 443us; 444us; 446us; 404us; 450us; 404us; 458us; 404us; 461us; 404us; 464us; 404us; 468us; 404us; 471us; 404us; 475us; 404us; 479us; 480us; 484us; 485us; 486us; 404us; 497us; 404us; 505us; 404us; 512us; 404us; 556us; 520us; 558us; 521us; 559us; 522us; 560us; 523us; 561us; 524us; 562us; 525us; 563us; 526us; 564us; 527us; 565us; 528us; 566us; 529us; 567us; 530us; 568us; 531us; 569us; 532us; 570us; 533us; 571us; 534us; 572us; 535us; 573us; 536us; 574us; 537us; 575us; 538us; 576us; 539us; 577us; 540us; 600us; 404us; 622us; 541us; 623us; 404us; 627us; 542us; 629us; 404us; 633us; 543us; 635us; 404us; 639us; 544us; 642us; 545us; 643us; 546us; 689us; 406us; 699us; 404us; 702us; 405us; 710us; 547us; 711us; 548us; 721us; 404us; 728us; 406us; 734us; 404us; 735us; 404us; 748us; 406us; 760us; 550us; 761us; 551us; 763us; 404us; 765us; 549us; 769us; 552us; 770us; 553us; 778us; 398us; 783us; 398us; 808us; 398us; 1us; 65535us; 685us; 686us; 1us; 65535us; 476us; 477us; 2us; 65535us; 603us; 604us; 605us; 606us; 4us; 65535us; 603us; 615us; 605us; 615us; 610us; 615us; 617us; 615us; 4us; 65535us; 603us; 609us; 605us; 609us; 610us; 611us; 617us; 618us; 1us; 65535us; 366us; 614us; 1us; 65535us; 615us; 616us; 0us; 65535us; 2us; 65535us; 480us; 481us; 544us; 640us; 2us; 65535us; 480us; 625us; 544us; 625us; 1us; 65535us; 625us; 626us; 0us; 65535us; 84us; 65535us; 121us; 557us; 126us; 557us; 129us; 557us; 156us; 557us; 229us; 557us; 235us; 557us; 251us; 557us; 255us; 557us; 265us; 557us; 282us; 557us; 287us; 557us; 390us; 557us; 395us; 557us; 407us; 557us; 409us; 557us; 412us; 557us; 415us; 557us; 429us; 557us; 436us; 557us; 443us; 557us; 446us; 557us; 450us; 557us; 458us; 557us; 461us; 557us; 464us; 557us; 468us; 557us; 471us; 557us; 475us; 557us; 479us; 557us; 484us; 557us; 486us; 557us; 497us; 557us; 505us; 557us; 512us; 557us; 556us; 557us; 558us; 557us; 559us; 557us; 560us; 557us; 561us; 557us; 562us; 557us; 563us; 557us; 564us; 557us; 565us; 557us; 566us; 557us; 567us; 557us; 568us; 557us; 569us; 557us; 570us; 557us; 571us; 557us; 572us; 557us; 573us; 557us; 574us; 557us; 575us; 557us; 576us; 557us; 577us; 557us; 600us; 557us; 622us; 557us; 623us; 557us; 627us; 557us; 629us; 557us; 633us; 557us; 635us; 557us; 639us; 557us; 642us; 557us; 643us; 557us; 689us; 557us; 699us; 557us; 702us; 557us; 710us; 557us; 711us; 557us; 721us; 557us; 728us; 557us; 734us; 557us; 735us; 557us; 748us; 557us; 760us; 557us; 761us; 557us; 763us; 557us; 765us; 557us; 769us; 557us; 770us; 557us; 778us; 557us; 783us; 557us; 808us; 557us; 91us; 65535us; 121us; 598us; 126us; 598us; 129us; 598us; 156us; 598us; 229us; 598us; 235us; 598us; 251us; 598us; 255us; 598us; 265us; 598us; 282us; 598us; 287us; 598us; 390us; 598us; 395us; 598us; 407us; 598us; 409us; 598us; 412us; 598us; 415us; 598us; 429us; 598us; 436us; 598us; 443us; 598us; 446us; 598us; 450us; 598us; 458us; 598us; 461us; 598us; 464us; 598us; 468us; 598us; 471us; 598us; 475us; 598us; 479us; 598us; 484us; 598us; 486us; 598us; 497us; 598us; 505us; 598us; 512us; 598us; 556us; 598us; 558us; 598us; 559us; 598us; 560us; 598us; 561us; 598us; 562us; 598us; 563us; 598us; 564us; 598us; 565us; 598us; 566us; 598us; 567us; 598us; 568us; 598us; 569us; 598us; 570us; 598us; 571us; 598us; 572us; 598us; 573us; 598us; 574us; 598us; 575us; 598us; 576us; 598us; 577us; 598us; 600us; 598us; 622us; 598us; 623us; 598us; 627us; 598us; 629us; 598us; 633us; 598us; 635us; 598us; 639us; 598us; 642us; 598us; 643us; 598us; 644us; 646us; 645us; 646us; 647us; 649us; 648us; 649us; 650us; 652us; 651us; 652us; 659us; 660us; 689us; 598us; 699us; 598us; 702us; 598us; 710us; 598us; 711us; 598us; 721us; 598us; 728us; 598us; 734us; 598us; 735us; 598us; 748us; 598us; 760us; 598us; 761us; 598us; 763us; 598us; 765us; 598us; 769us; 598us; 770us; 598us; 778us; 598us; 783us; 598us; 808us; 598us; 91us; 65535us; 121us; 661us; 126us; 661us; 129us; 661us; 156us; 661us; 229us; 661us; 235us; 661us; 251us; 661us; 255us; 661us; 265us; 661us; 282us; 661us; 287us; 661us; 390us; 661us; 395us; 661us; 407us; 661us; 409us; 661us; 412us; 661us; 415us; 661us; 429us; 661us; 436us; 661us; 443us; 661us; 446us; 661us; 450us; 661us; 458us; 661us; 461us; 661us; 464us; 661us; 468us; 661us; 471us; 661us; 475us; 661us; 479us; 661us; 484us; 661us; 486us; 661us; 497us; 661us; 505us; 661us; 512us; 661us; 556us; 661us; 558us; 661us; 559us; 661us; 560us; 661us; 561us; 661us; 562us; 661us; 563us; 661us; 564us; 661us; 565us; 661us; 566us; 661us; 567us; 661us; 568us; 661us; 569us; 661us; 570us; 661us; 571us; 661us; 572us; 661us; 573us; 661us; 574us; 661us; 575us; 661us; 576us; 661us; 577us; 661us; 600us; 661us; 622us; 661us; 623us; 661us; 627us; 661us; 629us; 661us; 633us; 661us; 635us; 661us; 639us; 661us; 642us; 661us; 643us; 661us; 644us; 661us; 645us; 661us; 647us; 661us; 648us; 661us; 650us; 661us; 651us; 661us; 659us; 661us; 689us; 661us; 699us; 661us; 702us; 661us; 710us; 661us; 711us; 661us; 721us; 661us; 728us; 661us; 734us; 661us; 735us; 661us; 748us; 662us; 760us; 661us; 761us; 661us; 763us; 661us; 765us; 661us; 769us; 661us; 770us; 661us; 778us; 661us; 783us; 661us; 808us; 661us; 2us; 65535us; 661us; 663us; 662us; 663us; 98us; 65535us; 121us; 664us; 126us; 664us; 129us; 664us; 156us; 664us; 229us; 664us; 235us; 664us; 251us; 664us; 255us; 664us; 265us; 664us; 282us; 664us; 287us; 664us; 390us; 664us; 395us; 664us; 407us; 664us; 409us; 664us; 412us; 664us; 415us; 664us; 429us; 664us; 436us; 664us; 443us; 664us; 446us; 664us; 450us; 664us; 458us; 664us; 461us; 664us; 464us; 664us; 468us; 664us; 471us; 664us; 475us; 664us; 479us; 664us; 484us; 664us; 486us; 664us; 497us; 664us; 505us; 664us; 512us; 664us; 556us; 664us; 558us; 664us; 559us; 664us; 560us; 664us; 561us; 664us; 562us; 664us; 563us; 664us; 564us; 664us; 565us; 664us; 566us; 664us; 567us; 664us; 568us; 664us; 569us; 664us; 570us; 664us; 571us; 664us; 572us; 664us; 573us; 664us; 574us; 664us; 575us; 664us; 576us; 664us; 577us; 664us; 600us; 664us; 622us; 664us; 623us; 664us; 627us; 664us; 629us; 664us; 633us; 664us; 635us; 664us; 639us; 664us; 642us; 664us; 643us; 664us; 644us; 664us; 645us; 664us; 647us; 664us; 648us; 664us; 650us; 664us; 651us; 664us; 659us; 664us; 661us; 667us; 662us; 667us; 665us; 666us; 671us; 668us; 672us; 669us; 675us; 670us; 676us; 670us; 689us; 664us; 699us; 664us; 702us; 664us; 710us; 664us; 711us; 664us; 721us; 664us; 728us; 664us; 734us; 664us; 735us; 664us; 748us; 664us; 760us; 664us; 761us; 664us; 763us; 664us; 765us; 664us; 769us; 664us; 770us; 664us; 778us; 664us; 783us; 664us; 808us; 664us; 2us; 65535us; 677us; 678us; 680us; 681us; 1us; 65535us; 702us; 708us; 103us; 65535us; 54us; 771us; 58us; 771us; 63us; 771us; 121us; 695us; 126us; 695us; 129us; 695us; 156us; 695us; 229us; 695us; 235us; 695us; 251us; 695us; 255us; 695us; 265us; 695us; 282us; 695us; 287us; 695us; 390us; 695us; 395us; 695us; 407us; 695us; 409us; 695us; 412us; 695us; 415us; 695us; 429us; 695us; 436us; 695us; 443us; 695us; 446us; 695us; 450us; 695us; 458us; 695us; 461us; 695us; 464us; 695us; 468us; 695us; 471us; 695us; 475us; 695us; 479us; 695us; 484us; 695us; 486us; 695us; 497us; 695us; 505us; 695us; 512us; 695us; 556us; 695us; 558us; 695us; 559us; 695us; 560us; 695us; 561us; 695us; 562us; 695us; 563us; 695us; 564us; 695us; 565us; 695us; 566us; 695us; 567us; 695us; 568us; 695us; 569us; 695us; 570us; 695us; 571us; 695us; 572us; 695us; 573us; 695us; 574us; 695us; 575us; 695us; 576us; 695us; 577us; 695us; 600us; 695us; 622us; 695us; 623us; 695us; 627us; 695us; 629us; 695us; 633us; 695us; 635us; 695us; 639us; 695us; 642us; 695us; 643us; 695us; 644us; 695us; 645us; 695us; 647us; 695us; 648us; 695us; 650us; 695us; 651us; 695us; 655us; 656us; 659us; 695us; 661us; 695us; 662us; 695us; 665us; 695us; 671us; 695us; 672us; 695us; 675us; 695us; 676us; 695us; 689us; 695us; 699us; 695us; 702us; 695us; 710us; 695us; 711us; 695us; 721us; 695us; 728us; 695us; 734us; 695us; 735us; 695us; 748us; 695us; 760us; 695us; 761us; 695us; 763us; 695us; 765us; 695us; 769us; 695us; 770us; 695us; 774us; 771us; 778us; 695us; 783us; 695us; 808us; 695us; 103us; 65535us; 54us; 720us; 58us; 720us; 63us; 720us; 121us; 720us; 126us; 720us; 129us; 720us; 156us; 720us; 229us; 720us; 235us; 720us; 251us; 720us; 255us; 720us; 265us; 720us; 282us; 720us; 287us; 720us; 390us; 720us; 395us; 720us; 407us; 720us; 409us; 720us; 412us; 720us; 415us; 720us; 429us; 720us; 436us; 720us; 443us; 720us; 446us; 720us; 450us; 720us; 458us; 720us; 461us; 720us; 464us; 720us; 468us; 720us; 471us; 720us; 475us; 720us; 479us; 720us; 484us; 720us; 486us; 720us; 497us; 720us; 505us; 720us; 512us; 720us; 556us; 720us; 558us; 720us; 559us; 720us; 560us; 720us; 561us; 720us; 562us; 720us; 563us; 720us; 564us; 720us; 565us; 720us; 566us; 720us; 567us; 720us; 568us; 720us; 569us; 720us; 570us; 720us; 571us; 720us; 572us; 720us; 573us; 720us; 574us; 720us; 575us; 720us; 576us; 720us; 577us; 720us; 600us; 720us; 622us; 720us; 623us; 720us; 627us; 720us; 629us; 720us; 633us; 720us; 635us; 720us; 639us; 720us; 642us; 720us; 643us; 720us; 644us; 720us; 645us; 720us; 647us; 720us; 648us; 720us; 650us; 720us; 651us; 720us; 655us; 720us; 659us; 720us; 661us; 720us; 662us; 720us; 665us; 720us; 671us; 720us; 672us; 720us; 675us; 720us; 676us; 720us; 689us; 720us; 699us; 720us; 702us; 720us; 710us; 720us; 711us; 720us; 721us; 720us; 728us; 720us; 734us; 720us; 735us; 720us; 748us; 720us; 760us; 720us; 761us; 720us; 763us; 720us; 765us; 720us; 769us; 720us; 770us; 720us; 774us; 720us; 778us; 720us; 783us; 720us; 808us; 720us; 103us; 65535us; 54us; 719us; 58us; 719us; 63us; 719us; 121us; 719us; 126us; 719us; 129us; 719us; 156us; 719us; 229us; 719us; 235us; 719us; 251us; 719us; 255us; 719us; 265us; 719us; 282us; 719us; 287us; 719us; 390us; 719us; 395us; 719us; 407us; 719us; 409us; 719us; 412us; 719us; 415us; 719us; 429us; 719us; 436us; 719us; 443us; 719us; 446us; 719us; 450us; 719us; 458us; 719us; 461us; 719us; 464us; 719us; 468us; 719us; 471us; 719us; 475us; 719us; 479us; 719us; 484us; 719us; 486us; 719us; 497us; 719us; 505us; 719us; 512us; 719us; 556us; 719us; 558us; 719us; 559us; 719us; 560us; 719us; 561us; 719us; 562us; 719us; 563us; 719us; 564us; 719us; 565us; 719us; 566us; 719us; 567us; 719us; 568us; 719us; 569us; 719us; 570us; 719us; 571us; 719us; 572us; 719us; 573us; 719us; 574us; 719us; 575us; 719us; 576us; 719us; 577us; 719us; 600us; 719us; 622us; 719us; 623us; 719us; 627us; 719us; 629us; 719us; 633us; 719us; 635us; 719us; 639us; 719us; 642us; 719us; 643us; 719us; 644us; 719us; 645us; 719us; 647us; 719us; 648us; 719us; 650us; 719us; 651us; 719us; 655us; 719us; 659us; 719us; 661us; 719us; 662us; 719us; 665us; 719us; 671us; 719us; 672us; 719us; 675us; 719us; 676us; 719us; 689us; 719us; 699us; 719us; 702us; 719us; 710us; 719us; 711us; 719us; 721us; 719us; 728us; 719us; 734us; 719us; 735us; 719us; 748us; 719us; 760us; 719us; 761us; 719us; 763us; 719us; 765us; 719us; 769us; 719us; 770us; 719us; 774us; 719us; 778us; 719us; 783us; 719us; 808us; 719us; 103us; 65535us; 54us; 714us; 58us; 714us; 63us; 714us; 121us; 714us; 126us; 714us; 129us; 714us; 156us; 714us; 229us; 714us; 235us; 714us; 251us; 714us; 255us; 714us; 265us; 714us; 282us; 714us; 287us; 714us; 390us; 714us; 395us; 714us; 407us; 714us; 409us; 714us; 412us; 714us; 415us; 714us; 429us; 714us; 436us; 714us; 443us; 714us; 446us; 714us; 450us; 714us; 458us; 714us; 461us; 714us; 464us; 714us; 468us; 714us; 471us; 714us; 475us; 714us; 479us; 714us; 484us; 714us; 486us; 714us; 497us; 714us; 505us; 714us; 512us; 714us; 556us; 714us; 558us; 714us; 559us; 714us; 560us; 714us; 561us; 714us; 562us; 714us; 563us; 714us; 564us; 714us; 565us; 714us; 566us; 714us; 567us; 714us; 568us; 714us; 569us; 714us; 570us; 714us; 571us; 714us; 572us; 714us; 573us; 714us; 574us; 714us; 575us; 714us; 576us; 714us; 577us; 714us; 600us; 714us; 622us; 714us; 623us; 714us; 627us; 714us; 629us; 714us; 633us; 714us; 635us; 714us; 639us; 714us; 642us; 714us; 643us; 714us; 644us; 714us; 645us; 714us; 647us; 714us; 648us; 714us; 650us; 714us; 651us; 714us; 655us; 714us; 659us; 714us; 661us; 714us; 662us; 714us; 665us; 714us; 671us; 714us; 672us; 714us; 675us; 714us; 676us; 714us; 689us; 714us; 699us; 714us; 702us; 714us; 710us; 714us; 711us; 714us; 721us; 714us; 728us; 714us; 734us; 714us; 735us; 714us; 748us; 714us; 760us; 714us; 761us; 714us; 763us; 714us; 765us; 714us; 769us; 714us; 770us; 714us; 774us; 714us; 778us; 714us; 783us; 714us; 808us; 714us; 2us; 65535us; 734us; 737us; 735us; 737us; 0us; 65535us; 0us; 65535us; 103us; 65535us; 54us; 715us; 58us; 715us; 63us; 715us; 121us; 715us; 126us; 715us; 129us; 715us; 156us; 715us; 229us; 715us; 235us; 715us; 251us; 715us; 255us; 715us; 265us; 715us; 282us; 715us; 287us; 715us; 390us; 715us; 395us; 715us; 407us; 715us; 409us; 715us; 412us; 715us; 415us; 715us; 429us; 715us; 436us; 715us; 443us; 715us; 446us; 715us; 450us; 715us; 458us; 715us; 461us; 715us; 464us; 715us; 468us; 715us; 471us; 715us; 475us; 715us; 479us; 715us; 484us; 715us; 486us; 715us; 497us; 715us; 505us; 715us; 512us; 715us; 556us; 715us; 558us; 715us; 559us; 715us; 560us; 715us; 561us; 715us; 562us; 715us; 563us; 715us; 564us; 715us; 565us; 715us; 566us; 715us; 567us; 715us; 568us; 715us; 569us; 715us; 570us; 715us; 571us; 715us; 572us; 715us; 573us; 715us; 574us; 715us; 575us; 715us; 576us; 715us; 577us; 715us; 600us; 715us; 622us; 715us; 623us; 715us; 627us; 715us; 629us; 715us; 633us; 715us; 635us; 715us; 639us; 715us; 642us; 715us; 643us; 715us; 644us; 715us; 645us; 715us; 647us; 715us; 648us; 715us; 650us; 715us; 651us; 715us; 655us; 715us; 659us; 715us; 661us; 715us; 662us; 715us; 665us; 715us; 671us; 715us; 672us; 715us; 675us; 715us; 676us; 715us; 689us; 715us; 699us; 715us; 702us; 715us; 710us; 715us; 711us; 715us; 721us; 715us; 728us; 715us; 734us; 715us; 735us; 715us; 748us; 715us; 760us; 715us; 761us; 715us; 763us; 715us; 765us; 715us; 769us; 715us; 770us; 715us; 774us; 715us; 778us; 715us; 783us; 715us; 808us; 715us; 1us; 65535us; 748us; 749us; 0us; 65535us; 2us; 65535us; 689us; 690us; 728us; 729us; 3us; 65535us; 689us; 757us; 728us; 757us; 748us; 756us; 4us; 65535us; 689us; 759us; 728us; 759us; 748us; 759us; 765us; 766us; 1us; 65535us; 518us; 519us; 1us; 65535us; 495us; 496us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 495us; 504us; 0us; 65535us; 4us; 65535us; 54us; 55us; 58us; 59us; 63us; 64us; 774us; 775us; 1us; 65535us; 748us; 755us; 6us; 65535us; 776us; 777us; 780us; 781us; 785us; 786us; 789us; 790us; 791us; 792us; 795us; 796us; 6us; 65535us; 776us; 799us; 780us; 799us; 785us; 799us; 789us; 799us; 791us; 798us; 795us; 799us; 3us; 65535us; 787us; 807us; 791us; 807us; 799us; 807us; 5us; 65535us; 775us; 776us; 779us; 780us; 784us; 785us; 788us; 789us; 794us; 795us; 3us; 65535us; 787us; 788us; 791us; 794us; 799us; 806us; 1us; 65535us; 552us; 770us; 2us; 65535us; 372us; 373us; 402us; 403us; 2us; 65535us; 152us; 153us; 816us; 817us; 4us; 65535us; 119us; 120us; 123us; 128us; 124us; 125us; 249us; 250us; 4us; 65535us; 152us; 815us; 195us; 196us; 816us; 815us; 819us; 820us; 4us; 65535us; 152us; 818us; 195us; 818us; 816us; 818us; 819us; 818us; 2us; 65535us; 822us; 823us; 825us; 826us; 6us; 65535us; 152us; 821us; 195us; 821us; 816us; 821us; 819us; 821us; 822us; 824us; 825us; 824us; 12us; 65535us; 221us; 222us; 271us; 272us; 372us; 814us; 402us; 814us; 554us; 555us; 835us; 836us; 869us; 906us; 870us; 906us; 887us; 933us; 891us; 933us; 921us; 933us; 923us; 933us; 12us; 65535us; 221us; 834us; 271us; 834us; 372us; 834us; 402us; 834us; 554us; 834us; 835us; 834us; 869us; 834us; 870us; 834us; 887us; 834us; 891us; 834us; 921us; 834us; 923us; 834us; 5us; 65535us; 838us; 839us; 840us; 841us; 842us; 843us; 845us; 846us; 847us; 848us; 2us; 65535us; 212us; 213us; 850us; 851us; 43us; 65535us; 152us; 854us; 192us; 854us; 195us; 854us; 208us; 854us; 211us; 853us; 212us; 854us; 221us; 854us; 271us; 854us; 372us; 854us; 402us; 854us; 554us; 854us; 653us; 854us; 772us; 854us; 816us; 854us; 819us; 854us; 822us; 854us; 825us; 854us; 827us; 853us; 828us; 854us; 829us; 853us; 832us; 854us; 833us; 853us; 835us; 854us; 837us; 853us; 838us; 854us; 840us; 854us; 842us; 854us; 844us; 853us; 845us; 854us; 847us; 854us; 849us; 853us; 850us; 854us; 857us; 854us; 858us; 853us; 860us; 853us; 869us; 854us; 870us; 854us; 873us; 853us; 874us; 853us; 887us; 854us; 891us; 854us; 921us; 854us; 923us; 854us; 43us; 65535us; 152us; 904us; 192us; 904us; 195us; 904us; 208us; 904us; 211us; 867us; 212us; 904us; 221us; 904us; 271us; 904us; 372us; 904us; 402us; 904us; 554us; 904us; 653us; 904us; 772us; 904us; 816us; 904us; 819us; 904us; 822us; 904us; 825us; 904us; 827us; 867us; 828us; 904us; 829us; 867us; 832us; 904us; 833us; 867us; 835us; 904us; 837us; 867us; 838us; 904us; 840us; 904us; 842us; 904us; 844us; 867us; 845us; 904us; 847us; 904us; 849us; 867us; 850us; 904us; 857us; 904us; 858us; 867us; 860us; 868us; 869us; 904us; 870us; 904us; 873us; 875us; 874us; 876us; 887us; 904us; 891us; 904us; 921us; 904us; 923us; 904us; 32us; 65535us; 152us; 827us; 192us; 211us; 195us; 827us; 208us; 211us; 212us; 849us; 221us; 837us; 271us; 837us; 372us; 837us; 402us; 837us; 554us; 837us; 653us; 860us; 772us; 860us; 816us; 827us; 819us; 827us; 822us; 827us; 825us; 827us; 828us; 829us; 832us; 833us; 835us; 837us; 838us; 844us; 840us; 844us; 842us; 844us; 845us; 844us; 847us; 844us; 850us; 849us; 857us; 858us; 869us; 837us; 870us; 837us; 887us; 837us; 891us; 837us; 921us; 837us; 923us; 837us; 11us; 65535us; 211us; 861us; 827us; 861us; 829us; 861us; 833us; 861us; 837us; 861us; 844us; 861us; 849us; 861us; 858us; 861us; 860us; 862us; 863us; 865us; 864us; 866us; 2us; 65535us; 869us; 872us; 870us; 871us; 2us; 65535us; 888us; 889us; 924us; 890us; 32us; 65535us; 152us; 877us; 192us; 877us; 195us; 877us; 208us; 877us; 212us; 877us; 221us; 877us; 271us; 877us; 372us; 877us; 402us; 877us; 554us; 877us; 653us; 877us; 772us; 877us; 816us; 877us; 819us; 877us; 822us; 877us; 825us; 877us; 828us; 877us; 832us; 877us; 835us; 877us; 838us; 877us; 840us; 877us; 842us; 877us; 845us; 877us; 847us; 877us; 850us; 877us; 857us; 877us; 869us; 877us; 870us; 877us; 887us; 877us; 891us; 877us; 921us; 877us; 923us; 877us; 2us; 65535us; 653us; 654us; 772us; 773us; 2us; 65535us; 653us; 903us; 772us; 903us; 32us; 65535us; 152us; 893us; 192us; 893us; 195us; 893us; 208us; 893us; 212us; 893us; 221us; 893us; 271us; 893us; 372us; 893us; 402us; 893us; 554us; 893us; 653us; 894us; 772us; 894us; 816us; 893us; 819us; 893us; 822us; 893us; 825us; 893us; 828us; 893us; 832us; 893us; 835us; 893us; 838us; 893us; 840us; 893us; 842us; 893us; 845us; 893us; 847us; 893us; 850us; 893us; 857us; 893us; 869us; 893us; 870us; 893us; 887us; 893us; 891us; 893us; 921us; 893us; 923us; 893us; 1us; 65535us; 854us; 915us; 3us; 65535us; 673us; 674us; 854us; 918us; 919us; 920us; 6us; 65535us; 869us; 886us; 870us; 886us; 887us; 888us; 891us; 892us; 921us; 928us; 923us; 934us; 2us; 65535us; 921us; 922us; 923us; 924us; 1us; 65535us; 299us; 300us; 6us; 65535us; 935us; 944us; 941us; 944us; 950us; 944us; 956us; 944us; 957us; 944us; 958us; 944us; 6us; 65535us; 935us; 950us; 941us; 950us; 950us; 950us; 956us; 950us; 957us; 950us; 958us; 950us; 6us; 65535us; 935us; 952us; 941us; 952us; 950us; 951us; 956us; 952us; 957us; 952us; 958us; 952us; 5us; 65535us; 935us; 936us; 941us; 942us; 956us; 953us; 957us; 954us; 958us; 955us; 2us; 65535us; 263us; 270us; 267us; 270us; 2us; 65535us; 263us; 961us; 267us; 961us; 211us; 65535us; 5us; 967us; 40us; 69us; 51us; 69us; 56us; 967us; 60us; 967us; 74us; 967us; 77us; 967us; 80us; 967us; 88us; 967us; 118us; 1016us; 121us; 1014us; 123us; 1016us; 126us; 1014us; 129us; 1014us; 136us; 1016us; 142us; 205us; 152us; 967us; 156us; 1014us; 168us; 1016us; 185us; 1014us; 188us; 1014us; 192us; 967us; 195us; 967us; 208us; 967us; 211us; 967us; 212us; 967us; 219us; 220us; 221us; 967us; 229us; 1014us; 235us; 1014us; 248us; 1016us; 251us; 1014us; 255us; 1014us; 265us; 1014us; 271us; 967us; 280us; 1016us; 282us; 1014us; 285us; 1016us; 287us; 1014us; 309us; 310us; 311us; 1016us; 312us; 1016us; 316us; 1016us; 317us; 1016us; 318us; 1016us; 319us; 1016us; 321us; 1016us; 323us; 1016us; 325us; 1016us; 328us; 1016us; 330us; 1016us; 332us; 1016us; 334us; 967us; 337us; 1016us; 340us; 1016us; 349us; 1016us; 367us; 368us; 369us; 1016us; 372us; 967us; 374us; 1016us; 376us; 1016us; 377us; 1016us; 378us; 1016us; 379us; 1016us; 383us; 967us; 386us; 1016us; 388us; 1016us; 390us; 1014us; 395us; 1014us; 402us; 967us; 407us; 1014us; 409us; 1014us; 412us; 1014us; 415us; 1014us; 429us; 1014us; 436us; 1014us; 443us; 1014us; 446us; 1014us; 450us; 1014us; 458us; 1014us; 461us; 1014us; 464us; 1014us; 468us; 1014us; 471us; 1014us; 475us; 1014us; 479us; 1014us; 484us; 1014us; 486us; 1014us; 495us; 1016us; 497us; 1014us; 505us; 1014us; 512us; 1014us; 554us; 967us; 556us; 1014us; 558us; 1014us; 559us; 1014us; 560us; 1014us; 561us; 1014us; 562us; 1014us; 563us; 1014us; 564us; 1014us; 565us; 1014us; 566us; 1014us; 567us; 1014us; 568us; 1014us; 569us; 1014us; 570us; 1014us; 571us; 1014us; 572us; 1014us; 573us; 1014us; 574us; 1014us; 575us; 1014us; 576us; 1014us; 577us; 1014us; 600us; 1014us; 603us; 1016us; 605us; 1016us; 610us; 1016us; 617us; 1016us; 622us; 1014us; 623us; 1014us; 627us; 1014us; 629us; 1014us; 633us; 1014us; 635us; 1014us; 639us; 1014us; 642us; 1014us; 643us; 1014us; 644us; 1014us; 645us; 1014us; 647us; 1014us; 648us; 1014us; 650us; 1014us; 651us; 1014us; 653us; 967us; 659us; 1014us; 661us; 1014us; 662us; 1014us; 665us; 1014us; 671us; 1014us; 672us; 1014us; 675us; 1014us; 676us; 1014us; 677us; 1014us; 680us; 1014us; 682us; 1014us; 683us; 1014us; 689us; 1014us; 699us; 1014us; 702us; 1014us; 710us; 1014us; 711us; 1014us; 721us; 1014us; 728us; 1014us; 734us; 1014us; 735us; 1014us; 748us; 1014us; 760us; 1014us; 761us; 1014us; 763us; 1014us; 765us; 1014us; 769us; 1014us; 770us; 1014us; 772us; 967us; 778us; 1014us; 783us; 1014us; 787us; 967us; 791us; 967us; 799us; 967us; 808us; 1014us; 816us; 967us; 819us; 967us; 822us; 967us; 825us; 967us; 827us; 967us; 828us; 967us; 829us; 967us; 830us; 831us; 832us; 967us; 833us; 967us; 835us; 967us; 837us; 967us; 838us; 967us; 840us; 967us; 842us; 967us; 844us; 967us; 845us; 967us; 847us; 967us; 849us; 967us; 850us; 967us; 857us; 967us; 858us; 967us; 860us; 967us; 869us; 967us; 870us; 967us; 873us; 967us; 874us; 967us; 887us; 967us; 891us; 967us; 921us; 967us; 923us; 967us; 935us; 967us; 941us; 967us; 950us; 967us; 956us; 967us; 957us; 967us; 958us; 967us; 959us; 960us; 962us; 963us; 968us; 969us; 1019us; 1016us; 63us; 65535us; 5us; 6us; 40us; 53us; 51us; 53us; 56us; 57us; 60us; 61us; 74us; 183us; 77us; 183us; 80us; 81us; 88us; 183us; 152us; 852us; 192us; 852us; 195us; 852us; 208us; 852us; 211us; 852us; 212us; 852us; 221us; 852us; 271us; 852us; 334us; 385us; 372us; 852us; 383us; 385us; 402us; 852us; 554us; 852us; 653us; 852us; 772us; 852us; 787us; 804us; 791us; 804us; 799us; 804us; 816us; 852us; 819us; 852us; 822us; 852us; 825us; 852us; 827us; 852us; 828us; 852us; 829us; 852us; 832us; 852us; 833us; 852us; 835us; 852us; 837us; 852us; 838us; 852us; 840us; 852us; 842us; 852us; 844us; 852us; 845us; 852us; 847us; 852us; 849us; 852us; 850us; 852us; 857us; 852us; 858us; 852us; 860us; 852us; 869us; 852us; 870us; 852us; 873us; 852us; 874us; 852us; 887us; 852us; 891us; 852us; 921us; 852us; 923us; 852us; 935us; 940us; 941us; 940us; 950us; 940us; 956us; 940us; 957us; 940us; 958us; 940us; 141us; 65535us; 118us; 1017us; 121us; 1015us; 123us; 1017us; 126us; 1015us; 129us; 1015us; 136us; 1017us; 142us; 1015us; 156us; 1015us; 168us; 1017us; 185us; 1015us; 188us; 1015us; 229us; 1015us; 235us; 1015us; 248us; 1017us; 251us; 1015us; 255us; 1015us; 265us; 1015us; 280us; 1017us; 282us; 1015us; 285us; 1017us; 287us; 1015us; 311us; 1017us; 312us; 1017us; 316us; 1017us; 317us; 1017us; 318us; 1017us; 319us; 1017us; 321us; 1017us; 323us; 1017us; 325us; 1017us; 328us; 1017us; 330us; 1017us; 332us; 1017us; 337us; 1017us; 340us; 1017us; 349us; 1017us; 369us; 1017us; 374us; 1017us; 376us; 1017us; 377us; 1017us; 378us; 1017us; 379us; 1017us; 386us; 1017us; 388us; 1017us; 390us; 1015us; 395us; 1015us; 407us; 1015us; 409us; 1015us; 412us; 1015us; 415us; 1015us; 429us; 1015us; 436us; 1015us; 443us; 1015us; 446us; 1015us; 450us; 1015us; 458us; 1015us; 461us; 1015us; 464us; 1015us; 468us; 1015us; 471us; 1015us; 475us; 1015us; 479us; 1015us; 484us; 1015us; 486us; 1015us; 495us; 1017us; 497us; 1015us; 505us; 1015us; 512us; 1015us; 556us; 1015us; 558us; 1015us; 559us; 1015us; 560us; 1015us; 561us; 1015us; 562us; 1015us; 563us; 1015us; 564us; 1015us; 565us; 1015us; 566us; 1015us; 567us; 1015us; 568us; 1015us; 569us; 1015us; 570us; 1015us; 571us; 1015us; 572us; 1015us; 573us; 1015us; 574us; 1015us; 575us; 1015us; 576us; 1015us; 577us; 1015us; 600us; 1015us; 603us; 1017us; 605us; 1017us; 610us; 1017us; 617us; 1017us; 622us; 1015us; 623us; 1015us; 627us; 1015us; 629us; 1015us; 633us; 1015us; 635us; 1015us; 639us; 1015us; 642us; 1015us; 643us; 1015us; 644us; 1015us; 645us; 1015us; 647us; 1015us; 648us; 1015us; 650us; 1015us; 651us; 1015us; 659us; 1015us; 661us; 1015us; 662us; 1015us; 665us; 1015us; 671us; 1015us; 672us; 1015us; 675us; 1015us; 676us; 1015us; 677us; 1015us; 680us; 1015us; 682us; 1015us; 683us; 1015us; 689us; 1015us; 699us; 1015us; 702us; 1015us; 710us; 1015us; 711us; 1015us; 721us; 1015us; 728us; 1015us; 734us; 1015us; 735us; 1015us; 748us; 1015us; 760us; 1015us; 761us; 1015us; 763us; 1015us; 765us; 1015us; 769us; 1015us; 770us; 1015us; 778us; 1015us; 783us; 1015us; 808us; 1015us; 1019us; 1017us; 5us; 65535us; 199us; 972us; 349us; 972us; 699us; 972us; 735us; 972us; 971us; 972us; 2us; 65535us; 978us; 1013us; 1011us; 1012us; 5us; 65535us; 199us; 977us; 349us; 977us; 699us; 977us; 735us; 977us; 971us; 977us; 105us; 65535us; 121us; 1022us; 126us; 1022us; 129us; 1022us; 142us; 1022us; 156us; 1022us; 185us; 1022us; 188us; 1022us; 229us; 1022us; 235us; 1022us; 251us; 1022us; 255us; 1022us; 265us; 1022us; 282us; 1022us; 287us; 1022us; 390us; 1022us; 395us; 1022us; 407us; 1022us; 409us; 1022us; 412us; 1022us; 415us; 1022us; 429us; 1022us; 436us; 1022us; 443us; 1022us; 446us; 1022us; 450us; 1022us; 458us; 1022us; 461us; 1022us; 464us; 1022us; 468us; 1022us; 471us; 1022us; 475us; 1022us; 479us; 1022us; 484us; 1022us; 486us; 1022us; 497us; 1022us; 505us; 1022us; 512us; 1022us; 556us; 1022us; 558us; 1022us; 559us; 1022us; 560us; 1022us; 561us; 1022us; 562us; 1022us; 563us; 1022us; 564us; 1022us; 565us; 1022us; 566us; 1022us; 567us; 1022us; 568us; 1022us; 569us; 1022us; 570us; 1022us; 571us; 1022us; 572us; 1022us; 573us; 1022us; 574us; 1022us; 575us; 1022us; 576us; 1022us; 577us; 1022us; 600us; 1022us; 622us; 1022us; 623us; 1022us; 627us; 1022us; 629us; 1022us; 633us; 1022us; 635us; 1022us; 639us; 1022us; 642us; 1022us; 643us; 1022us; 644us; 1022us; 645us; 1022us; 647us; 1022us; 648us; 1022us; 650us; 1022us; 651us; 1022us; 659us; 1022us; 661us; 1022us; 662us; 1022us; 665us; 1022us; 671us; 1022us; 672us; 1022us; 675us; 1022us; 676us; 1022us; 677us; 696us; 680us; 696us; 682us; 1022us; 683us; 1022us; 689us; 1022us; 699us; 1022us; 702us; 1022us; 710us; 1022us; 711us; 1022us; 721us; 1022us; 728us; 1022us; 734us; 1022us; 735us; 1022us; 748us; 1022us; 760us; 1022us; 761us; 1022us; 763us; 1022us; 765us; 1022us; 769us; 1022us; 770us; 1022us; 778us; 1022us; 783us; 1022us; 808us; 1022us; 36us; 65535us; 118us; 138us; 123us; 138us; 136us; 137us; 168us; 138us; 248us; 138us; 280us; 138us; 285us; 138us; 311us; 138us; 312us; 138us; 316us; 138us; 317us; 138us; 318us; 138us; 319us; 138us; 321us; 138us; 323us; 138us; 325us; 138us; 328us; 138us; 330us; 138us; 332us; 138us; 337us; 138us; 340us; 138us; 349us; 138us; 369us; 138us; 374us; 138us; 376us; 138us; 377us; 138us; 378us; 138us; 379us; 138us; 386us; 138us; 388us; 138us; 495us; 138us; 603us; 138us; 605us; 138us; 610us; 138us; 617us; 138us; 1019us; 1020us; 103us; 65535us; 121us; 688us; 126us; 688us; 129us; 688us; 142us; 198us; 156us; 688us; 185us; 198us; 188us; 198us; 229us; 688us; 235us; 688us; 251us; 688us; 255us; 688us; 265us; 688us; 282us; 688us; 287us; 688us; 390us; 688us; 395us; 688us; 407us; 688us; 409us; 688us; 412us; 688us; 415us; 688us; 429us; 688us; 436us; 688us; 443us; 688us; 446us; 688us; 450us; 688us; 458us; 688us; 461us; 688us; 464us; 688us; 468us; 688us; 471us; 688us; 475us; 688us; 479us; 688us; 484us; 688us; 486us; 688us; 497us; 688us; 505us; 688us; 512us; 688us; 556us; 688us; 558us; 688us; 559us; 688us; 560us; 688us; 561us; 688us; 562us; 688us; 563us; 688us; 564us; 688us; 565us; 688us; 566us; 688us; 567us; 688us; 568us; 688us; 569us; 688us; 570us; 688us; 571us; 688us; 572us; 688us; 573us; 688us; 574us; 688us; 575us; 688us; 576us; 688us; 577us; 688us; 600us; 688us; 622us; 688us; 623us; 688us; 627us; 688us; 629us; 688us; 633us; 688us; 635us; 688us; 639us; 688us; 642us; 688us; 643us; 688us; 644us; 688us; 645us; 688us; 647us; 688us; 648us; 688us; 650us; 688us; 651us; 688us; 659us; 688us; 661us; 688us; 662us; 688us; 665us; 688us; 671us; 688us; 672us; 688us; 675us; 688us; 676us; 688us; 682us; 684us; 683us; 684us; 689us; 688us; 699us; 688us; 702us; 688us; 710us; 688us; 711us; 688us; 721us; 688us; 728us; 688us; 734us; 688us; 735us; 688us; 748us; 688us; 760us; 688us; 761us; 688us; 763us; 688us; 765us; 688us; 769us; 688us; 770us; 688us; 778us; 688us; 783us; 688us; 808us; 688us; 5us; 65535us; 16us; 1026us; 23us; 1026us; 28us; 1026us; 32us; 1026us; 1026us; 1026us; 5us; 65535us; 16us; 34us; 23us; 34us; 28us; 30us; 32us; 34us; 1026us; 1027us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 8us; 65535us; 41us; 51us; 115us; 1037us; 214us; 215us; 364us; 388us; 381us; 383us; 404us; 407us; 405us; 407us; 406us; 407us; 1us; 65535us; 140us; 141us; 0us; 65535us; 5us; 65535us; 133us; 134us; 160us; 161us; 163us; 164us; 165us; 166us; 169us; 170us; 0us; 65535us; 12us; 65535us; 20us; 21us; 43us; 44us; 46us; 47us; 95us; 96us; 100us; 101us; 149us; 150us; 187us; 207us; 190us; 191us; 193us; 194us; 196us; 197us; 205us; 206us; 496us; 518us; 5us; 65535us; 41us; 42us; 115us; 116us; 214us; 217us; 364us; 387us; 381us; 382us; 2us; 65535us; 226us; 227us; 231us; 232us; 0us; 65535us; 6us; 65535us; 132us; 118us; 159us; 118us; 162us; 123us; 227us; 247us; 232us; 247us; 242us; 247us; 1us; 65535us; 247us; 248us; 4us; 65535us; 145us; 219us; 150us; 219us; 177us; 219us; 215us; 219us; 4us; 65535us; 420us; 512us; 485us; 486us; 496us; 497us; 504us; 505us; 9us; 65535us; 417us; 494us; 418us; 501us; 419us; 509us; 421us; 516us; 487us; 488us; 490us; 491us; 498us; 499us; 506us; 507us; 513us; 514us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 5us; 65535us; 53us; 54us; 57us; 58us; 62us; 63us; 654us; 655us; 773us; 774us; 0us; 65535us; 13us; 65535us; 0us; 77us; 7us; 77us; 16us; 77us; 18us; 77us; 23us; 77us; 28us; 77us; 30us; 77us; 32us; 77us; 34us; 77us; 40us; 67us; 51us; 67us; 1048us; 1050us; 1049us; 1050us; 5us; 65535us; 0us; 5us; 40us; 65us; 51us; 65us; 1055us; 1057us; 1056us; 1057us; 8us; 65535us; 146us; 147us; 178us; 179us; 181us; 182us; 335us; 336us; 427us; 752us; 748us; 754us; 749us; 750us; 1060us; 1061us; 21us; 65535us; 200us; 201us; 203us; 204us; 350us; 351us; 353us; 354us; 425us; 740us; 426us; 741us; 601us; 602us; 700us; 701us; 734us; 736us; 735us; 736us; 737us; 738us; 871us; 873us; 872us; 874us; 906us; 907us; 913us; 914us; 942us; 943us; 972us; 973us; 974us; 975us; 978us; 979us; 981us; 982us; 1064us; 1065us; 14us; 65535us; 19us; 20us; 23us; 24us; 61us; 62us; 97us; 98us; 102us; 103us; 108us; 110us; 256us; 257us; 391us; 392us; 396us; 397us; 413us; 414us; 447us; 448us; 630us; 631us; 636us; 637us; 1068us; 1069us; 1us; 65535us; 737us; 739us; 13us; 65535us; 40us; 49us; 42us; 48us; 365us; 768us; 495us; 515us; 496us; 503us; 497us; 502us; 498us; 500us; 765us; 767us; 807us; 811us; 808us; 810us; 916us; 917us; 923us; 927us; 968us; 970us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 173us; 175us; 177us; 180us; 184us; 190us; 200us; 210us; 220us; 231us; 242us; 244us; 247us; 250us; 260us; 261us; 262us; 263us; 264us; 265us; 266us; 268us; 269us; 270us; 271us; 275us; 279us; 283us; 285us; 287us; 289us; 291us; 296us; 301us; 304us; 306us; 308us; 309us; 314us; 315us; 350us; 359us; 364us; 365us; 366us; 367us; 368us; 369us; 371us; 373us; 375us; 378us; 380us; 382us; 385us; 388us; 391us; 392us; 396us; 397us; 399us; 403us; 407us; 411us; 413us; 415us; 418us; 421us; 424us; 429us; 439us; 449us; 534us; 536us; 622us; 707us; 708us; 714us; 717us; 720us; 724us; 728us; 730us; 733us; 735us; 737us; 739us; 742us; 912us; 997us; 1135us; 1139us; 1141us; 1152us; 1163us; 1174us; 1201us; 1203us; 1212us; 1247us; 1249us; 1266us; 1283us; 1300us; 1302us; 1305us; 1308us; 1312us; 1313us; 1332us; 1336us; 1340us; 1378us; 1421us; 1485us; 1574us; 1659us; 1664us; 1750us; 1835us; 1837us; 1839us; 1842us; 1847us; 1852us; 1854us; 1856us; 1857us; 1860us; 1863us; 1865us; 1866us; 1951us; 2043us; 2135us; 2138us; 2237us; 2240us; 2242us; 2346us; 2450us; 2554us; 2658us; 2661us; 2662us; 2663us; 2767us; 2769us; 2770us; 2773us; 2777us; 2782us; 2784us; 2786us; 2787us; 2788us; 2790us; 2791us; 2796us; 2798us; 2805us; 2812us; 2816us; 2822us; 2826us; 2828us; 2831us; 2834us; 2839us; 2844us; 2849us; 2852us; 2859us; 2872us; 2885us; 2891us; 2894us; 2938us; 2982us; 3015us; 3027us; 3030us; 3033us; 3066us; 3069us; 3072us; 3105us; 3107us; 3111us; 3118us; 3121us; 3123us; 3130us; 3137us; 3144us; 3150us; 3153us; 3156us; 3368us; 3432us; 3574us; 3580us; 3583us; 3589us; 3695us; 3732us; 3836us; 3842us; 3848us; 3849us; 3850us; 3851us; 3852us; 3861us; 3863us; 3864us; 3870us; 3871us; 3884us; 3890us; 3893us; 3894us; 3901us; 3903us; 3908us; 3913us; 3923us; 3924us; 3925us; 3926us; 3927us; 3933us; 3934us; 3948us; 3954us; 3963us; 3985us; 4000us; 4002us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 3us; 4us; 633us; 634us; 4us; 5us; 7us; 8us; 9us; 1us; 5us; 1us; 6us; 1us; 6us; 3us; 7us; 8us; 9us; 1us; 7us; 2us; 8us; 9us; 2us; 8us; 9us; 1us; 10us; 4us; 11us; 21us; 24us; 276us; 1us; 11us; 3us; 12us; 13us; 14us; 2us; 12us; 13us; 1us; 12us; 1us; 12us; 1us; 13us; 3us; 14us; 21us; 24us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 18us; 4us; 19us; 20us; 22us; 23us; 1us; 19us; 2us; 20us; 23us; 1us; 20us; 2us; 21us; 24us; 1us; 21us; 1us; 24us; 1us; 24us; 1us; 25us; 1us; 26us; 2us; 28us; 29us; 1us; 29us; 4us; 30us; 31us; 32us; 33us; 3us; 30us; 32us; 35us; 2us; 30us; 32us; 1us; 30us; 1us; 30us; 2us; 31us; 276us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 2us; 35us; 707us; 1us; 35us; 3us; 36us; 633us; 634us; 1us; 36us; 1us; 36us; 2us; 37us; 38us; 3us; 37us; 633us; 634us; 1us; 37us; 1us; 37us; 1us; 38us; 3us; 38us; 633us; 634us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 39us; 1us; 39us; 1us; 40us; 1us; 40us; 2us; 41us; 632us; 1us; 41us; 2us; 42us; 43us; 1us; 42us; 1us; 43us; 2us; 44us; 738us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 45us; 2us; 46us; 160us; 3us; 46us; 633us; 634us; 1us; 47us; 1us; 48us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 77us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 80us; 1us; 80us; 1us; 80us; 2us; 81us; 82us; 1us; 81us; 1us; 81us; 1us; 81us; 1us; 81us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 84us; 2us; 85us; 86us; 2us; 85us; 86us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 89us; 1us; 91us; 1us; 91us; 1us; 91us; 1us; 92us; 1us; 92us; 1us; 92us; 1us; 92us; 1us; 92us; 2us; 93us; 94us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 94us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 100us; 1us; 100us; 1us; 100us; 1us; 101us; 1us; 103us; 1us; 103us; 1us; 103us; 2us; 114us; 115us; 1us; 114us; 1us; 115us; 2us; 116us; 117us; 2us; 116us; 117us; 1us; 116us; 1us; 117us; 2us; 118us; 119us; 1us; 119us; 1us; 119us; 1us; 120us; 1us; 120us; 1us; 121us; 1us; 121us; 1us; 121us; 1us; 121us; 3us; 122us; 123us; 124us; 1us; 122us; 1us; 122us; 1us; 122us; 2us; 123us; 124us; 1us; 123us; 1us; 123us; 1us; 124us; 1us; 124us; 1us; 125us; 1us; 125us; 1us; 125us; 1us; 125us; 1us; 126us; 1us; 126us; 1us; 127us; 2us; 128us; 129us; 1us; 129us; 1us; 129us; 3us; 130us; 131us; 132us; 2us; 130us; 131us; 1us; 130us; 1us; 131us; 1us; 132us; 1us; 132us; 3us; 135us; 633us; 634us; 1us; 138us; 1us; 139us; 1us; 139us; 2us; 140us; 150us; 2us; 141us; 142us; 1us; 141us; 3us; 143us; 144us; 145us; 1us; 143us; 1us; 144us; 1us; 144us; 1us; 144us; 1us; 145us; 1us; 145us; 1us; 145us; 1us; 146us; 6us; 147us; 148us; 635us; 636us; 638us; 639us; 1us; 147us; 1us; 147us; 1us; 148us; 1us; 148us; 1us; 148us; 3us; 149us; 151us; 669us; 1us; 149us; 1us; 150us; 1us; 151us; 1us; 151us; 1us; 152us; 5us; 153us; 154us; 567us; 568us; 569us; 1us; 153us; 1us; 153us; 2us; 155us; 156us; 2us; 155us; 707us; 1us; 155us; 1us; 156us; 1us; 157us; 1us; 158us; 1us; 158us; 1us; 158us; 1us; 158us; 1us; 159us; 1us; 159us; 1us; 160us; 1us; 161us; 1us; 161us; 1us; 161us; 1us; 162us; 1us; 162us; 1us; 163us; 1us; 163us; 1us; 163us; 1us; 163us; 1us; 164us; 1us; 164us; 1us; 164us; 1us; 169us; 1us; 170us; 1us; 171us; 1us; 171us; 1us; 172us; 1us; 172us; 1us; 172us; 1us; 174us; 1us; 175us; 3us; 176us; 177us; 178us; 3us; 176us; 177us; 178us; 3us; 176us; 177us; 178us; 3us; 176us; 177us; 178us; 2us; 176us; 177us; 1us; 176us; 1us; 177us; 1us; 178us; 2us; 179us; 180us; 2us; 179us; 180us; 1us; 179us; 1us; 180us; 1us; 181us; 1us; 182us; 2us; 182us; 183us; 1us; 183us; 1us; 185us; 2us; 185us; 186us; 1us; 185us; 1us; 185us; 1us; 186us; 1us; 186us; 1us; 187us; 2us; 188us; 189us; 1us; 188us; 1us; 188us; 1us; 189us; 1us; 190us; 1us; 191us; 1us; 192us; 1us; 193us; 1us; 194us; 1us; 195us; 2us; 196us; 197us; 2us; 196us; 197us; 2us; 196us; 197us; 1us; 196us; 1us; 197us; 6us; 198us; 199us; 200us; 201us; 202us; 203us; 5us; 198us; 199us; 200us; 201us; 202us; 4us; 198us; 199us; 200us; 201us; 2us; 198us; 199us; 1us; 198us; 1us; 199us; 1us; 200us; 1us; 200us; 1us; 201us; 1us; 202us; 1us; 202us; 1us; 203us; 1us; 203us; 2us; 204us; 205us; 1us; 205us; 1us; 205us; 6us; 206us; 208us; 209us; 210us; 215us; 217us; 6us; 207us; 208us; 209us; 210us; 215us; 217us; 6us; 208us; 209us; 209us; 210us; 215us; 217us; 6us; 208us; 209us; 210us; 210us; 215us; 217us; 6us; 208us; 209us; 210us; 214us; 215us; 217us; 6us; 208us; 209us; 210us; 215us; 215us; 217us; 6us; 208us; 209us; 210us; 215us; 216us; 217us; 6us; 208us; 209us; 210us; 215us; 217us; 217us; 1us; 208us; 1us; 208us; 1us; 209us; 1us; 210us; 2us; 211us; 214us; 2us; 212us; 216us; 1us; 213us; 1us; 214us; 1us; 215us; 1us; 216us; 1us; 217us; 4us; 218us; 219us; 220us; 231us; 3us; 218us; 219us; 220us; 1us; 218us; 1us; 219us; 1us; 219us; 1us; 220us; 1us; 220us; 1us; 221us; 4us; 223us; 224us; 225us; 226us; 1us; 223us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 229us; 1us; 229us; 1us; 229us; 1us; 230us; 1us; 231us; 1us; 232us; 1us; 233us; 1us; 234us; 1us; 235us; 8us; 236us; 237us; 238us; 239us; 635us; 636us; 638us; 639us; 2us; 236us; 237us; 1us; 236us; 1us; 237us; 3us; 238us; 276us; 636us; 2us; 238us; 636us; 1us; 239us; 7us; 240us; 242us; 243us; 246us; 247us; 250us; 252us; 7us; 242us; 243us; 243us; 246us; 247us; 250us; 252us; 7us; 242us; 243us; 246us; 247us; 247us; 250us; 252us; 7us; 242us; 243us; 246us; 247us; 249us; 250us; 252us; 7us; 242us; 243us; 246us; 247us; 250us; 250us; 252us; 7us; 242us; 243us; 246us; 247us; 250us; 251us; 252us; 7us; 242us; 243us; 246us; 247us; 250us; 252us; 252us; 7us; 242us; 243us; 246us; 247us; 250us; 252us; 256us; 8us; 242us; 243us; 246us; 247us; 250us; 252us; 258us; 259us; 13us; 242us; 243us; 246us; 247us; 250us; 252us; 328us; 329us; 495us; 496us; 497us; 498us; 506us; 7us; 242us; 243us; 246us; 247us; 250us; 252us; 384us; 1us; 242us; 1us; 242us; 1us; 243us; 2us; 244us; 249us; 2us; 245us; 251us; 1us; 246us; 1us; 246us; 1us; 247us; 1us; 248us; 1us; 249us; 1us; 250us; 1us; 251us; 1us; 252us; 1us; 253us; 2us; 254us; 255us; 1us; 254us; 2us; 255us; 707us; 1us; 255us; 3us; 256us; 633us; 634us; 1us; 256us; 1us; 258us; 2us; 259us; 707us; 1us; 259us; 2us; 261us; 262us; 2us; 261us; 262us; 1us; 261us; 1us; 262us; 1us; 263us; 1us; 264us; 1us; 264us; 1us; 264us; 44us; 265us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 2us; 266us; 267us; 1us; 266us; 2us; 268us; 269us; 1us; 268us; 1us; 268us; 48us; 270us; 271us; 272us; 273us; 274us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 50us; 270us; 271us; 272us; 273us; 274us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 445us; 446us; 51us; 270us; 271us; 272us; 273us; 274us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 491us; 492us; 493us; 2us; 270us; 271us; 1us; 270us; 1us; 273us; 1us; 273us; 1us; 274us; 1us; 274us; 1us; 274us; 1us; 274us; 5us; 275us; 296us; 297us; 298us; 299us; 1us; 276us; 2us; 276us; 315us; 2us; 276us; 318us; 2us; 276us; 323us; 2us; 276us; 326us; 2us; 276us; 328us; 2us; 276us; 432us; 2us; 276us; 442us; 2us; 276us; 463us; 2us; 276us; 468us; 3us; 276us; 468us; 636us; 2us; 276us; 481us; 1us; 277us; 4us; 278us; 279us; 280us; 281us; 2us; 278us; 280us; 2us; 278us; 280us; 45us; 279us; 281us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 2us; 279us; 281us; 1us; 280us; 1us; 281us; 4us; 282us; 283us; 284us; 285us; 2us; 282us; 284us; 2us; 282us; 284us; 45us; 283us; 285us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 2us; 283us; 285us; 1us; 284us; 1us; 285us; 1us; 286us; 44us; 286us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 2us; 287us; 288us; 2us; 287us; 288us; 2us; 287us; 288us; 1us; 287us; 1us; 288us; 2us; 289us; 290us; 2us; 289us; 290us; 2us; 289us; 290us; 1us; 290us; 1us; 291us; 1us; 292us; 1us; 293us; 2us; 294us; 295us; 2us; 294us; 295us; 1us; 294us; 1us; 295us; 4us; 296us; 297us; 298us; 299us; 1us; 296us; 1us; 297us; 2us; 298us; 299us; 1us; 298us; 1us; 299us; 1us; 300us; 1us; 301us; 1us; 301us; 1us; 301us; 1us; 302us; 1us; 302us; 1us; 302us; 1us; 303us; 2us; 304us; 305us; 2us; 304us; 305us; 1us; 304us; 1us; 305us; 4us; 306us; 307us; 308us; 309us; 46us; 306us; 307us; 308us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 2us; 306us; 307us; 1us; 308us; 1us; 309us; 6us; 310us; 311us; 312us; 313us; 314us; 315us; 47us; 310us; 311us; 312us; 313us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 3us; 310us; 311us; 312us; 2us; 310us; 311us; 1us; 310us; 1us; 311us; 1us; 312us; 1us; 312us; 1us; 313us; 1us; 314us; 1us; 315us; 15us; 316us; 317us; 318us; 319us; 320us; 321us; 322us; 323us; 324us; 325us; 326us; 327us; 328us; 329us; 330us; 6us; 316us; 317us; 318us; 319us; 320us; 330us; 4us; 316us; 317us; 318us; 319us; 2us; 316us; 317us; 1us; 316us; 1us; 317us; 1us; 318us; 1us; 319us; 1us; 320us; 5us; 321us; 322us; 323us; 324us; 325us; 4us; 321us; 322us; 323us; 324us; 2us; 321us; 322us; 1us; 321us; 1us; 322us; 1us; 323us; 1us; 324us; 1us; 325us; 1us; 326us; 1us; 326us; 1us; 326us; 1us; 327us; 1us; 328us; 2us; 329us; 762us; 1us; 330us; 1us; 330us; 44us; 331us; 332us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 390us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 395us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 399us; 407us; 45us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 402us; 403us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 406us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 407us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 445us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 447us; 47us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 491us; 492us; 493us; 495us; 45us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 491us; 492us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 492us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 506us; 44us; 331us; 332us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 407us; 506us; 1us; 331us; 1us; 331us; 1us; 332us; 2us; 333us; 406us; 2us; 334us; 354us; 2us; 335us; 355us; 2us; 336us; 356us; 2us; 337us; 357us; 2us; 338us; 358us; 2us; 339us; 359us; 2us; 340us; 360us; 2us; 341us; 361us; 2us; 342us; 362us; 2us; 343us; 363us; 2us; 344us; 364us; 2us; 345us; 365us; 2us; 346us; 366us; 2us; 347us; 367us; 2us; 348us; 368us; 2us; 349us; 369us; 2us; 350us; 370us; 2us; 351us; 371us; 2us; 352us; 372us; 2us; 353us; 373us; 1us; 354us; 1us; 355us; 1us; 356us; 1us; 357us; 1us; 358us; 1us; 359us; 1us; 360us; 1us; 361us; 1us; 362us; 1us; 363us; 1us; 364us; 1us; 365us; 1us; 366us; 1us; 367us; 1us; 368us; 1us; 369us; 1us; 370us; 1us; 371us; 1us; 372us; 1us; 373us; 1us; 374us; 1us; 375us; 1us; 376us; 1us; 376us; 1us; 376us; 1us; 377us; 1us; 377us; 2us; 378us; 379us; 2us; 378us; 379us; 1us; 378us; 1us; 379us; 1us; 380us; 2us; 381us; 382us; 1us; 381us; 1us; 382us; 1us; 383us; 1us; 384us; 5us; 385us; 386us; 387us; 388us; 389us; 4us; 385us; 386us; 387us; 388us; 2us; 386us; 387us; 1us; 386us; 1us; 387us; 1us; 388us; 1us; 389us; 1us; 390us; 1us; 392us; 1us; 392us; 1us; 394us; 1us; 394us; 1us; 395us; 2us; 396us; 397us; 2us; 396us; 397us; 2us; 396us; 397us; 1us; 396us; 1us; 397us; 1us; 399us; 2us; 400us; 401us; 2us; 400us; 401us; 2us; 400us; 401us; 1us; 400us; 1us; 401us; 2us; 402us; 403us; 1us; 402us; 1us; 403us; 1us; 406us; 1us; 407us; 1us; 408us; 2us; 408us; 650us; 1us; 408us; 1us; 409us; 2us; 409us; 646us; 1us; 409us; 1us; 410us; 2us; 410us; 662us; 1us; 410us; 3us; 411us; 412us; 413us; 2us; 411us; 412us; 2us; 411us; 412us; 1us; 411us; 1us; 412us; 1us; 413us; 1us; 414us; 1us; 414us; 2us; 415us; 416us; 6us; 415us; 416us; 512us; 516us; 517us; 518us; 1us; 416us; 6us; 417us; 420us; 421us; 422us; 424us; 427us; 1us; 418us; 6us; 418us; 420us; 421us; 422us; 424us; 427us; 6us; 419us; 420us; 421us; 422us; 424us; 427us; 6us; 420us; 420us; 421us; 422us; 424us; 427us; 6us; 420us; 421us; 421us; 422us; 424us; 427us; 6us; 420us; 421us; 422us; 423us; 424us; 427us; 1us; 420us; 1us; 421us; 1us; 422us; 1us; 422us; 1us; 423us; 2us; 423us; 640us; 1us; 424us; 1us; 424us; 1us; 425us; 1us; 425us; 1us; 425us; 1us; 426us; 2us; 426us; 656us; 1us; 426us; 1us; 427us; 1us; 427us; 1us; 428us; 1us; 429us; 4us; 430us; 431us; 432us; 433us; 2us; 430us; 431us; 1us; 430us; 1us; 431us; 1us; 432us; 1us; 433us; 1us; 434us; 1us; 435us; 1us; 436us; 1us; 438us; 5us; 439us; 635us; 636us; 638us; 639us; 1us; 439us; 1us; 439us; 5us; 440us; 441us; 442us; 443us; 444us; 2us; 440us; 441us; 1us; 440us; 1us; 441us; 1us; 442us; 1us; 443us; 1us; 444us; 1us; 444us; 2us; 445us; 446us; 1us; 447us; 1us; 448us; 1us; 449us; 1us; 450us; 1us; 451us; 1us; 452us; 1us; 453us; 1us; 454us; 1us; 455us; 1us; 456us; 4us; 457us; 458us; 459us; 460us; 2us; 457us; 458us; 1us; 457us; 1us; 458us; 1us; 459us; 1us; 459us; 1us; 460us; 4us; 461us; 462us; 463us; 464us; 2us; 461us; 462us; 1us; 461us; 1us; 462us; 1us; 463us; 1us; 464us; 9us; 465us; 466us; 467us; 468us; 469us; 470us; 471us; 472us; 473us; 13us; 465us; 466us; 467us; 468us; 469us; 470us; 471us; 472us; 473us; 635us; 636us; 638us; 639us; 1us; 465us; 2us; 466us; 467us; 1us; 466us; 1us; 467us; 1us; 468us; 2us; 468us; 636us; 1us; 469us; 1us; 470us; 1us; 471us; 1us; 472us; 1us; 473us; 1us; 474us; 5us; 479us; 480us; 481us; 482us; 483us; 2us; 479us; 480us; 1us; 479us; 1us; 480us; 1us; 481us; 1us; 482us; 1us; 483us; 1us; 484us; 1us; 485us; 1us; 487us; 1us; 489us; 1us; 490us; 3us; 491us; 492us; 493us; 1us; 492us; 1us; 493us; 1us; 494us; 1us; 494us; 3us; 495us; 496us; 497us; 1us; 496us; 1us; 497us; 1us; 498us; 1us; 506us; 1us; 506us; 1us; 510us; 1us; 511us; 1us; 511us; 1us; 511us; 1us; 511us; 2us; 511us; 527us; 1us; 511us; 1us; 512us; 1us; 512us; 2us; 512us; 527us; 1us; 512us; 3us; 513us; 514us; 515us; 2us; 514us; 515us; 1us; 515us; 2us; 515us; 527us; 1us; 515us; 1us; 516us; 1us; 516us; 2us; 516us; 527us; 1us; 516us; 2us; 517us; 518us; 1us; 517us; 1us; 517us; 1us; 518us; 2us; 518us; 527us; 1us; 518us; 1us; 518us; 1us; 519us; 2us; 519us; 527us; 2us; 521us; 524us; 2us; 522us; 523us; 1us; 523us; 1us; 524us; 3us; 525us; 633us; 634us; 1us; 526us; 1us; 527us; 5us; 529us; 530us; 531us; 532us; 533us; 3us; 529us; 530us; 531us; 1us; 529us; 1us; 531us; 1us; 533us; 1us; 534us; 1us; 535us; 1us; 536us; 1us; 537us; 1us; 539us; 1us; 539us; 2us; 540us; 541us; 1us; 540us; 1us; 540us; 2us; 542us; 543us; 1us; 542us; 1us; 542us; 2us; 544us; 545us; 1us; 544us; 1us; 544us; 7us; 546us; 548us; 549us; 551us; 567us; 568us; 569us; 2us; 546us; 549us; 5us; 546us; 549us; 567us; 568us; 569us; 2us; 547us; 550us; 2us; 547us; 550us; 2us; 547us; 550us; 5us; 547us; 550us; 567us; 568us; 569us; 2us; 552us; 553us; 1us; 552us; 1us; 552us; 6us; 554us; 556us; 557us; 567us; 568us; 569us; 1us; 554us; 1us; 554us; 1us; 555us; 1us; 555us; 1us; 556us; 1us; 556us; 6us; 558us; 559us; 560us; 567us; 568us; 569us; 1us; 558us; 1us; 558us; 1us; 559us; 1us; 559us; 5us; 561us; 562us; 567us; 568us; 569us; 1us; 561us; 1us; 561us; 3us; 563us; 633us; 634us; 2us; 564us; 565us; 4us; 564us; 565us; 599us; 600us; 1us; 564us; 1us; 564us; 1us; 566us; 4us; 566us; 567us; 568us; 569us; 1us; 566us; 6us; 567us; 568us; 569us; 582us; 583us; 584us; 1us; 567us; 2us; 567us; 582us; 1us; 568us; 2us; 568us; 583us; 1us; 568us; 2us; 568us; 583us; 1us; 569us; 2us; 569us; 584us; 5us; 570us; 585us; 592us; 593us; 598us; 4us; 570us; 592us; 593us; 598us; 1us; 570us; 2us; 570us; 585us; 1us; 570us; 2us; 570us; 585us; 1us; 570us; 2us; 570us; 585us; 1us; 571us; 4us; 572us; 573us; 574us; 575us; 1us; 572us; 3us; 573us; 574us; 575us; 1us; 573us; 2us; 574us; 575us; 1us; 574us; 1us; 575us; 1us; 575us; 1us; 576us; 1us; 576us; 1us; 576us; 2us; 576us; 577us; 3us; 577us; 603us; 604us; 1us; 577us; 1us; 577us; 3us; 579us; 580us; 581us; 6us; 579us; 580us; 581us; 587us; 588us; 589us; 2us; 580us; 581us; 4us; 580us; 581us; 588us; 589us; 1us; 580us; 2us; 580us; 588us; 1us; 581us; 2us; 581us; 589us; 1us; 581us; 2us; 581us; 589us; 1us; 586us; 1us; 590us; 1us; 591us; 3us; 592us; 593us; 610us; 1us; 592us; 1us; 593us; 1us; 594us; 1us; 595us; 1us; 596us; 1us; 597us; 1us; 598us; 1us; 598us; 1us; 599us; 1us; 600us; 1us; 600us; 1us; 601us; 1us; 602us; 1us; 602us; 7us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 3us; 603us; 604us; 605us; 3us; 603us; 604us; 605us; 2us; 603us; 604us; 1us; 603us; 1us; 604us; 1us; 605us; 3us; 606us; 607us; 611us; 1us; 606us; 1us; 607us; 1us; 608us; 1us; 609us; 1us; 610us; 1us; 611us; 2us; 612us; 613us; 3us; 612us; 623us; 624us; 1us; 612us; 1us; 613us; 1us; 613us; 3us; 614us; 633us; 634us; 1us; 615us; 3us; 615us; 623us; 624us; 1us; 615us; 3us; 616us; 617us; 618us; 2us; 617us; 618us; 1us; 617us; 1us; 618us; 1us; 618us; 1us; 619us; 2us; 620us; 621us; 1us; 621us; 1us; 622us; 3us; 623us; 623us; 624us; 3us; 623us; 624us; 624us; 3us; 623us; 624us; 625us; 1us; 623us; 1us; 624us; 1us; 625us; 1us; 626us; 1us; 626us; 1us; 627us; 1us; 628us; 1us; 628us; 1us; 629us; 1us; 630us; 1us; 631us; 1us; 632us; 2us; 633us; 634us; 1us; 633us; 1us; 634us; 4us; 635us; 636us; 638us; 639us; 1us; 635us; 1us; 635us; 1us; 636us; 1us; 636us; 1us; 637us; 3us; 638us; 639us; 668us; 3us; 638us; 639us; 668us; 1us; 638us; 1us; 639us; 1us; 639us; 1us; 639us; 1us; 640us; 1us; 641us; 1us; 642us; 1us; 643us; 1us; 644us; 1us; 645us; 1us; 646us; 1us; 647us; 1us; 648us; 1us; 649us; 1us; 650us; 1us; 651us; 1us; 652us; 1us; 653us; 1us; 654us; 1us; 655us; 1us; 656us; 1us; 657us; 1us; 658us; 1us; 659us; 1us; 660us; 1us; 661us; 1us; 662us; 2us; 663us; 664us; 1us; 664us; 1us; 665us; 1us; 665us; 1us; 666us; 1us; 667us; 1us; 667us; 1us; 668us; 1us; 669us; 1us; 670us; 3us; 671us; 674us; 675us; 1us; 672us; 1us; 673us; 2us; 674us; 675us; 1us; 674us; 1us; 675us; 1us; 676us; 1us; 677us; 1us; 678us; 1us; 679us; 2us; 680us; 681us; 1us; 681us; 2us; 690us; 692us; 2us; 691us; 693us; 1us; 692us; 1us; 693us; 1us; 694us; 1us; 695us; 1us; 696us; 1us; 701us; 1us; 705us; 1us; 707us; 1us; 709us; 1us; 713us; 1us; 715us; 1us; 717us; 1us; 719us; 1us; 720us; 1us; 721us; 1us; 722us; 1us; 730us; 1us; 731us; 1us; 735us; 2us; 735us; 757us; 1us; 735us; 1us; 736us; 1us; 737us; 1us; 738us; 1us; 739us; 1us; 740us; 2us; 740us; 758us; 1us; 740us; 1us; 741us; 1us; 742us; 1us; 743us; 1us; 743us; 1us; 744us; 1us; 745us; 1us; 746us; 1us; 746us; 1us; 747us; 1us; 748us; 1us; 749us; 1us; 749us; 1us; 750us; 1us; 751us; 1us; 752us; 1us; 753us; 1us; 754us; 1us; 755us; 1us; 756us; 1us; 757us; 1us; 758us; 1us; 759us; 1us; 760us; 1us; 761us; 1us; 762us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 16us; 21us; 23us; 25us; 27us; 31us; 33us; 36us; 39us; 41us; 46us; 48us; 52us; 55us; 57us; 59us; 61us; 65us; 67us; 69us; 71us; 73us; 78us; 80us; 83us; 85us; 88us; 90us; 92us; 94us; 96us; 98us; 101us; 103us; 108us; 112us; 115us; 117us; 119us; 122us; 124us; 126us; 128us; 130us; 132us; 135us; 137us; 141us; 143us; 145us; 148us; 152us; 154us; 156us; 158us; 162us; 164us; 166us; 168us; 170us; 172us; 174us; 176us; 179us; 181us; 184us; 186us; 188us; 191us; 193us; 195us; 197us; 199us; 201us; 204us; 208us; 210us; 212us; 214us; 216us; 218us; 220us; 222us; 224us; 226us; 228us; 230us; 232us; 235us; 237us; 239us; 241us; 243us; 245us; 247us; 249us; 251us; 253us; 255us; 257us; 259us; 262us; 265us; 267us; 269us; 271us; 273us; 275us; 277us; 279us; 281us; 283us; 285us; 287us; 289us; 291us; 293us; 296us; 298us; 300us; 302us; 304us; 306us; 308us; 310us; 312us; 314us; 316us; 318us; 320us; 322us; 324us; 326us; 328us; 330us; 332us; 335us; 337us; 339us; 342us; 345us; 347us; 349us; 352us; 354us; 356us; 358us; 360us; 362us; 364us; 366us; 368us; 372us; 374us; 376us; 378us; 381us; 383us; 385us; 387us; 389us; 391us; 393us; 395us; 397us; 399us; 401us; 403us; 406us; 408us; 410us; 414us; 417us; 419us; 421us; 423us; 425us; 429us; 431us; 433us; 435us; 438us; 441us; 443us; 447us; 449us; 451us; 453us; 455us; 457us; 459us; 461us; 463us; 470us; 472us; 474us; 476us; 478us; 480us; 484us; 486us; 488us; 490us; 492us; 494us; 500us; 502us; 504us; 507us; 510us; 512us; 514us; 516us; 518us; 520us; 522us; 524us; 526us; 528us; 530us; 532us; 534us; 536us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 552us; 554us; 556us; 558us; 560us; 562us; 564us; 566us; 568us; 570us; 572us; 576us; 580us; 584us; 588us; 591us; 593us; 595us; 597us; 600us; 603us; 605us; 607us; 609us; 611us; 614us; 616us; 618us; 621us; 623us; 625us; 627us; 629us; 631us; 634us; 636us; 638us; 640us; 642us; 644us; 646us; 648us; 650us; 652us; 655us; 658us; 661us; 663us; 665us; 672us; 678us; 683us; 686us; 688us; 690us; 692us; 694us; 696us; 698us; 700us; 702us; 704us; 707us; 709us; 711us; 718us; 725us; 732us; 739us; 746us; 753us; 760us; 767us; 769us; 771us; 773us; 775us; 778us; 781us; 783us; 785us; 787us; 789us; 791us; 796us; 800us; 802us; 804us; 806us; 808us; 810us; 812us; 817us; 819us; 821us; 823us; 825us; 827us; 829us; 831us; 833us; 835us; 837us; 839us; 841us; 843us; 845us; 847us; 849us; 851us; 853us; 855us; 857us; 866us; 869us; 871us; 873us; 877us; 880us; 882us; 890us; 898us; 906us; 914us; 922us; 930us; 938us; 946us; 955us; 969us; 977us; 979us; 981us; 983us; 986us; 989us; 991us; 993us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1007us; 1010us; 1012us; 1015us; 1017us; 1021us; 1023us; 1025us; 1028us; 1030us; 1033us; 1036us; 1038us; 1040us; 1042us; 1044us; 1046us; 1048us; 1093us; 1096us; 1098us; 1101us; 1103us; 1105us; 1154us; 1205us; 1257us; 1260us; 1262us; 1264us; 1266us; 1268us; 1270us; 1272us; 1274us; 1280us; 1282us; 1285us; 1288us; 1291us; 1294us; 1297us; 1300us; 1303us; 1306us; 1309us; 1313us; 1316us; 1318us; 1323us; 1326us; 1329us; 1375us; 1378us; 1380us; 1382us; 1387us; 1390us; 1393us; 1439us; 1442us; 1444us; 1446us; 1448us; 1493us; 1496us; 1499us; 1502us; 1504us; 1506us; 1509us; 1512us; 1515us; 1517us; 1519us; 1521us; 1523us; 1526us; 1529us; 1531us; 1533us; 1538us; 1540us; 1542us; 1545us; 1547us; 1549us; 1551us; 1553us; 1555us; 1557us; 1559us; 1561us; 1563us; 1565us; 1568us; 1571us; 1573us; 1575us; 1580us; 1627us; 1630us; 1632us; 1634us; 1641us; 1689us; 1693us; 1696us; 1698us; 1700us; 1702us; 1704us; 1706us; 1708us; 1710us; 1726us; 1733us; 1738us; 1741us; 1743us; 1745us; 1747us; 1749us; 1751us; 1757us; 1762us; 1765us; 1767us; 1769us; 1771us; 1773us; 1775us; 1777us; 1779us; 1781us; 1783us; 1785us; 1788us; 1790us; 1792us; 1837us; 1882us; 1927us; 1972us; 2017us; 2062us; 2107us; 2152us; 2197us; 2242us; 2287us; 2332us; 2377us; 2422us; 2467us; 2512us; 2557us; 2602us; 2647us; 2692us; 2737us; 2782us; 2827us; 2872us; 2918us; 2963us; 3008us; 3053us; 3098us; 3146us; 3192us; 3237us; 3282us; 3327us; 3329us; 3331us; 3333us; 3336us; 3339us; 3342us; 3345us; 3348us; 3351us; 3354us; 3357us; 3360us; 3363us; 3366us; 3369us; 3372us; 3375us; 3378us; 3381us; 3384us; 3387us; 3390us; 3393us; 3396us; 3398us; 3400us; 3402us; 3404us; 3406us; 3408us; 3410us; 3412us; 3414us; 3416us; 3418us; 3420us; 3422us; 3424us; 3426us; 3428us; 3430us; 3432us; 3434us; 3436us; 3438us; 3440us; 3442us; 3444us; 3446us; 3448us; 3450us; 3453us; 3456us; 3458us; 3460us; 3462us; 3465us; 3467us; 3469us; 3471us; 3473us; 3479us; 3484us; 3487us; 3489us; 3491us; 3493us; 3495us; 3497us; 3499us; 3501us; 3503us; 3505us; 3507us; 3510us; 3513us; 3516us; 3518us; 3520us; 3522us; 3525us; 3528us; 3531us; 3533us; 3535us; 3538us; 3540us; 3542us; 3544us; 3546us; 3548us; 3551us; 3553us; 3555us; 3558us; 3560us; 3562us; 3565us; 3567us; 3571us; 3574us; 3577us; 3579us; 3581us; 3583us; 3585us; 3587us; 3590us; 3597us; 3599us; 3606us; 3608us; 3615us; 3622us; 3629us; 3636us; 3643us; 3645us; 3647us; 3649us; 3651us; 3653us; 3656us; 3658us; 3660us; 3662us; 3664us; 3666us; 3668us; 3671us; 3673us; 3675us; 3677us; 3679us; 3681us; 3686us; 3689us; 3691us; 3693us; 3695us; 3697us; 3699us; 3701us; 3703us; 3705us; 3711us; 3713us; 3715us; 3721us; 3724us; 3726us; 3728us; 3730us; 3732us; 3734us; 3736us; 3739us; 3741us; 3743us; 3745us; 3747us; 3749us; 3751us; 3753us; 3755us; 3757us; 3759us; 3764us; 3767us; 3769us; 3771us; 3773us; 3775us; 3777us; 3782us; 3785us; 3787us; 3789us; 3791us; 3793us; 3803us; 3817us; 3819us; 3822us; 3824us; 3826us; 3828us; 3831us; 3833us; 3835us; 3837us; 3839us; 3841us; 3843us; 3849us; 3852us; 3854us; 3856us; 3858us; 3860us; 3862us; 3864us; 3866us; 3868us; 3870us; 3872us; 3876us; 3878us; 3880us; 3882us; 3884us; 3888us; 3890us; 3892us; 3894us; 3896us; 3898us; 3900us; 3902us; 3904us; 3906us; 3908us; 3911us; 3913us; 3915us; 3917us; 3920us; 3922us; 3926us; 3929us; 3931us; 3934us; 3936us; 3938us; 3940us; 3943us; 3945us; 3948us; 3950us; 3952us; 3954us; 3957us; 3959us; 3961us; 3963us; 3966us; 3969us; 3972us; 3974us; 3976us; 3980us; 3982us; 3984us; 3990us; 3994us; 3996us; 3998us; 4000us; 4002us; 4004us; 4006us; 4008us; 4010us; 4012us; 4015us; 4017us; 4019us; 4022us; 4024us; 4026us; 4029us; 4031us; 4033us; 4041us; 4044us; 4050us; 4053us; 4056us; 4059us; 4065us; 4068us; 4070us; 4072us; 4079us; 4081us; 4083us; 4085us; 4087us; 4089us; 4091us; 4098us; 4100us; 4102us; 4104us; 4106us; 4112us; 4114us; 4116us; 4120us; 4123us; 4128us; 4130us; 4132us; 4134us; 4139us; 4141us; 4148us; 4150us; 4153us; 4155us; 4158us; 4160us; 4163us; 4165us; 4168us; 4174us; 4179us; 4181us; 4184us; 4186us; 4189us; 4191us; 4194us; 4196us; 4201us; 4203us; 4207us; 4209us; 4212us; 4214us; 4216us; 4218us; 4220us; 4222us; 4224us; 4227us; 4231us; 4233us; 4235us; 4239us; 4246us; 4249us; 4254us; 4256us; 4259us; 4261us; 4264us; 4266us; 4269us; 4271us; 4273us; 4275us; 4279us; 4281us; 4283us; 4285us; 4287us; 4289us; 4291us; 4293us; 4295us; 4297us; 4299us; 4301us; 4303us; 4305us; 4307us; 4315us; 4319us; 4323us; 4326us; 4328us; 4330us; 4332us; 4336us; 4338us; 4340us; 4342us; 4344us; 4346us; 4348us; 4351us; 4355us; 4357us; 4359us; 4361us; 4365us; 4367us; 4371us; 4373us; 4377us; 4380us; 4382us; 4384us; 4386us; 4388us; 4391us; 4393us; 4395us; 4399us; 4403us; 4407us; 4409us; 4411us; 4413us; 4415us; 4417us; 4419us; 4421us; 4423us; 4425us; 4427us; 4429us; 4431us; 4434us; 4436us; 4438us; 4443us; 4445us; 4447us; 4449us; 4451us; 4453us; 4457us; 4461us; 4463us; 4465us; 4467us; 4469us; 4471us; 4473us; 4475us; 4477us; 4479us; 4481us; 4483us; 4485us; 4487us; 4489us; 4491us; 4493us; 4495us; 4497us; 4499us; 4501us; 4503us; 4505us; 4507us; 4509us; 4511us; 4513us; 4515us; 4518us; 4520us; 4522us; 4524us; 4526us; 4528us; 4530us; 4532us; 4534us; 4536us; 4540us; 4542us; 4544us; 4547us; 4549us; 4551us; 4553us; 4555us; 4557us; 4559us; 4562us; 4564us; 4567us; 4570us; 4572us; 4574us; 4576us; 4578us; 4580us; 4582us; 4584us; 4586us; 4588us; 4590us; 4592us; 4594us; 4596us; 4598us; 4600us; 4602us; 4604us; 4606us; 4608us; 4611us; 4613us; 4615us; 4617us; 4619us; 4621us; 4623us; 4626us; 4628us; 4630us; 4632us; 4634us; 4636us; 4638us; 4640us; 4642us; 4644us; 4646us; 4648us; 4650us; 4652us; 4654us; 4656us; 4658us; 4660us; 4662us; 4664us; 4666us; 4668us; 4670us; 4672us; 4674us; 4676us; |]
let _fsyacc_action_rows = 1083
let _fsyacc_actionTableElements = [|16us; 16401us; 10us; 428us; 21us; 18us; 38us; 16411us; 42us; 1048us; 43us; 1051us; 44us; 1055us; 45us; 1058us; 87us; 40us; 115us; 223us; 116us; 80us; 124us; 1052us; 130us; 74us; 136us; 1054us; 160us; 16411us; 172us; 1059us; 219us; 16us; 0us; 49152us; 0us; 16385us; 0us; 16386us; 0us; 16387us; 3us; 32768us; 47us; 966us; 59us; 965us; 212us; 964us; 1us; 16388us; 91us; 968us; 13us; 16401us; 10us; 8us; 21us; 18us; 38us; 16411us; 42us; 1048us; 43us; 1051us; 87us; 40us; 115us; 223us; 116us; 80us; 124us; 1052us; 130us; 74us; 136us; 1054us; 160us; 16411us; 219us; 32us; 0us; 16389us; 1us; 32768us; 10us; 10us; 0us; 16390us; 2us; 32768us; 10us; 12us; 219us; 13us; 0us; 16391us; 1us; 32768us; 10us; 14us; 0us; 16392us; 0us; 16394us; 14us; 16411us; 10us; 17us; 20us; 1025us; 42us; 1048us; 43us; 1051us; 82us; 1024us; 87us; 40us; 98us; 1023us; 115us; 223us; 116us; 80us; 124us; 1052us; 130us; 74us; 136us; 1054us; 219us; 32us; 221us; 16660us; 0us; 16395us; 11us; 16401us; 38us; 16411us; 42us; 1048us; 43us; 1051us; 87us; 40us; 115us; 223us; 116us; 80us; 124us; 1052us; 130us; 74us; 136us; 1054us; 160us; 16411us; 219us; 23us; 5us; 32768us; 10us; 428us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 219us; 416us; 1us; 17090us; 20us; 1036us; 0us; 16396us; 0us; 16397us; 15us; 16411us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 20us; 1025us; 42us; 1048us; 43us; 1051us; 82us; 1024us; 87us; 40us; 98us; 1023us; 115us; 223us; 116us; 80us; 124us; 1052us; 130us; 74us; 136us; 1054us; 219us; 32us; 0us; 16398us; 0us; 16399us; 0us; 16400us; 0us; 16402us; 14us; 16406us; 20us; 1025us; 38us; 16411us; 42us; 1048us; 43us; 1051us; 82us; 1024us; 87us; 40us; 98us; 1023us; 115us; 223us; 116us; 80us; 124us; 1052us; 130us; 74us; 136us; 1054us; 160us; 16411us; 219us; 32us; 0us; 16403us; 11us; 16407us; 38us; 16411us; 42us; 1048us; 43us; 1051us; 87us; 40us; 115us; 223us; 116us; 80us; 124us; 1052us; 130us; 74us; 136us; 1054us; 160us; 16411us; 219us; 32us; 0us; 16404us; 12us; 16411us; 20us; 1025us; 42us; 1048us; 43us; 1051us; 82us; 1024us; 87us; 40us; 98us; 1023us; 115us; 223us; 116us; 80us; 124us; 1052us; 130us; 74us; 136us; 1054us; 219us; 32us; 0us; 16405us; 9us; 16411us; 42us; 1048us; 43us; 1051us; 87us; 40us; 115us; 223us; 116us; 80us; 124us; 1052us; 130us; 74us; 136us; 1054us; 219us; 32us; 0us; 16408us; 0us; 16409us; 0us; 16410us; 1us; 16412us; 87us; 40us; 0us; 16413us; 16us; 32768us; 10us; 428us; 15us; 1081us; 42us; 1049us; 43us; 1051us; 44us; 1056us; 45us; 1058us; 47us; 966us; 59us; 965us; 74us; 1079us; 108us; 1080us; 124us; 1052us; 130us; 1053us; 136us; 1054us; 172us; 1059us; 212us; 964us; 219us; 45us; 2us; 17092us; 20us; 1028us; 98us; 1029us; 8us; 32768us; 10us; 428us; 15us; 1081us; 42us; 1077us; 44us; 1078us; 68us; 43us; 74us; 1079us; 108us; 1080us; 219us; 416us; 1us; 17090us; 20us; 1036us; 0us; 16414us; 1us; 16660us; 68us; 46us; 1us; 17090us; 20us; 1036us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 11us; 17091us; 42us; 1048us; 43us; 1051us; 44us; 1055us; 45us; 1058us; 47us; 966us; 59us; 965us; 124us; 1052us; 130us; 1053us; 136us; 1054us; 172us; 1059us; 212us; 964us; 0us; 16419us; 3us; 17116us; 40us; 1047us; 41us; 1046us; 91us; 968us; 14us; 16893us; 86us; 728us; 88us; 748us; 106us; 734us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 213us; 4us; 214us; 3us; 0us; 16420us; 4us; 32768us; 21us; 60us; 47us; 966us; 59us; 965us; 212us; 964us; 3us; 17116us; 40us; 1047us; 41us; 1046us; 91us; 968us; 14us; 16893us; 86us; 728us; 88us; 748us; 106us; 734us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 213us; 4us; 214us; 3us; 0us; 16421us; 3us; 32768us; 47us; 966us; 59us; 965us; 212us; 964us; 4us; 32768us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 91us; 968us; 2us; 17116us; 40us; 1047us; 41us; 1046us; 14us; 16893us; 86us; 728us; 88us; 748us; 106us; 734us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 213us; 4us; 214us; 3us; 0us; 16422us; 1us; 32768us; 92us; 66us; 0us; 16423us; 1us; 32768us; 92us; 68us; 0us; 16424us; 1us; 17016us; 92us; 70us; 0us; 16425us; 2us; 32768us; 38us; 231us; 160us; 229us; 0us; 16426us; 0us; 16427us; 3us; 17122us; 47us; 966us; 59us; 965us; 212us; 964us; 1us; 16463us; 154us; 88us; 0us; 16428us; 3us; 32768us; 47us; 966us; 59us; 965us; 212us; 964us; 1us; 16463us; 154us; 88us; 0us; 16429us; 4us; 32768us; 47us; 966us; 59us; 965us; 212us; 964us; 214us; 225us; 1us; 16430us; 91us; 968us; 0us; 16431us; 0us; 16432us; 0us; 16449us; 0us; 16450us; 0us; 16451us; 0us; 16461us; 3us; 32768us; 47us; 966us; 59us; 965us; 212us; 964us; 1us; 16463us; 154us; 88us; 0us; 16462us; 1us; 32768us; 84us; 92us; 1us; 32768us; 21us; 94us; 0us; 16464us; 0us; 16486us; 1us; 17090us; 20us; 1036us; 1us; 16488us; 101us; 139us; 3us; 32768us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 1us; 16488us; 101us; 139us; 0us; 16465us; 1us; 17090us; 20us; 1036us; 1us; 16488us; 101us; 139us; 3us; 32768us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 1us; 16488us; 101us; 139us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 4us; 16474us; 46us; 16486us; 47us; 16486us; 61us; 16486us; 219us; 113us; 5us; 32768us; 10us; 428us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 219us; 416us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 4us; 16474us; 46us; 16486us; 47us; 16486us; 61us; 16486us; 219us; 113us; 0us; 16473us; 2us; 17092us; 20us; 1028us; 98us; 1029us; 4us; 16474us; 46us; 16486us; 47us; 16486us; 61us; 16486us; 219us; 113us; 0us; 16475us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 16922us; 92us; 816us; 1us; 32768us; 84us; 121us; 41us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16476us; 20us; 16922us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 92us; 816us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 16922us; 92us; 816us; 1us; 32768us; 84us; 126us; 41us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16477us; 1us; 32768us; 84us; 129us; 41us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16478us; 3us; 32768us; 46us; 85us; 47us; 86us; 61us; 84us; 1us; 17098us; 126us; 1039us; 1us; 17086us; 18us; 1035us; 0us; 16481us; 1us; 32768us; 91us; 136us; 4us; 32768us; 47us; 1018us; 106us; 971us; 114us; 976us; 212us; 964us; 0us; 16484us; 0us; 16485us; 5us; 16474us; 21us; 107us; 46us; 16486us; 47us; 16486us; 61us; 16486us; 219us; 113us; 3us; 32768us; 18us; 1032us; 19us; 1033us; 165us; 1034us; 0us; 16487us; 4us; 32768us; 88us; 145us; 106us; 199us; 114us; 976us; 212us; 964us; 0us; 16498us; 0us; 16499us; 4us; 16486us; 38us; 167us; 67us; 171us; 141us; 1041us; 212us; 17102us; 5us; 32768us; 10us; 428us; 73us; 1063us; 74us; 1060us; 75us; 1062us; 219us; 416us; 0us; 16500us; 0us; 16501us; 7us; 16502us; 20us; 1036us; 38us; 17090us; 46us; 17090us; 47us; 17090us; 67us; 17090us; 141us; 17090us; 212us; 17090us; 4us; 16486us; 38us; 167us; 67us; 171us; 141us; 1041us; 212us; 17102us; 0us; 16503us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 89us; 830us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16504us; 1us; 32768us; 92us; 152us; 1us; 32768us; 84us; 156us; 41us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16505us; 2us; 32768us; 46us; 159us; 47us; 162us; 1us; 17098us; 126us; 1039us; 1us; 17086us; 18us; 1035us; 0us; 16506us; 1us; 17098us; 126us; 1039us; 1us; 17086us; 18us; 1035us; 0us; 16507us; 1us; 17086us; 18us; 1035us; 0us; 16508us; 0us; 16486us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 17086us; 18us; 1035us; 0us; 16509us; 1us; 32768us; 212us; 174us; 0us; 16510us; 0us; 16511us; 1us; 16512us; 111us; 175us; 1us; 32768us; 212us; 174us; 0us; 16513us; 2us; 17102us; 141us; 1041us; 219us; 181us; 5us; 32768us; 10us; 428us; 73us; 1063us; 74us; 1060us; 75us; 1062us; 219us; 416us; 0us; 16514us; 0us; 16515us; 3us; 32768us; 73us; 1063us; 74us; 1060us; 75us; 1062us; 0us; 16516us; 1us; 16519us; 91us; 968us; 0us; 16522us; 3us; 32768us; 106us; 199us; 114us; 976us; 212us; 964us; 0us; 16523us; 4us; 16524us; 20us; 1036us; 106us; 17090us; 114us; 17090us; 212us; 17090us; 3us; 16526us; 106us; 199us; 114us; 976us; 212us; 964us; 0us; 16525us; 3us; 17090us; 20us; 1036us; 92us; 195us; 143us; 192us; 0us; 16527us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 88us; 177us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 17090us; 20us; 1036us; 0us; 16528us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 89us; 830us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 17090us; 20us; 1036us; 0us; 16529us; 0us; 16530us; 29us; 32768us; 71us; 1011us; 76us; 993us; 77us; 991us; 84us; 995us; 85us; 202us; 89us; 999us; 93us; 200us; 97us; 1003us; 103us; 1000us; 104us; 1001us; 110us; 994us; 117us; 996us; 166us; 1006us; 167us; 1002us; 177us; 1008us; 180us; 1005us; 182us; 997us; 183us; 998us; 202us; 1004us; 203us; 992us; 204us; 989us; 205us; 988us; 206us; 990us; 207us; 983us; 208us; 987us; 209us; 986us; 210us; 985us; 211us; 984us; 219us; 974us; 3us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 0us; 16531us; 1us; 32768us; 72us; 203us; 3us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 0us; 16532us; 2us; 17053us; 20us; 1036us; 143us; 208us; 0us; 16533us; 0us; 16534us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 88us; 177us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16535us; 0us; 16536us; 6us; 16538us; 41us; 863us; 47us; 966us; 59us; 965us; 85us; 878us; 110us; 212us; 212us; 964us; 16us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16537us; 2us; 17092us; 20us; 1028us; 98us; 1029us; 2us; 17091us; 141us; 1041us; 212us; 17102us; 0us; 16539us; 0us; 16540us; 0us; 16541us; 1us; 32768us; 212us; 964us; 1us; 32768us; 92us; 221us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16542us; 1us; 32768us; 214us; 224us; 0us; 16543us; 0us; 16544us; 1us; 17094us; 118us; 1038us; 2us; 17098us; 126us; 1039us; 219us; 246us; 0us; 16545us; 41us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16546us; 1us; 17094us; 118us; 1038us; 2us; 17098us; 126us; 1039us; 219us; 246us; 3us; 32768us; 10us; 428us; 18us; 238us; 219us; 416us; 0us; 16547us; 41us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 3us; 32768us; 10us; 428us; 18us; 238us; 219us; 416us; 0us; 16548us; 0us; 16553us; 0us; 16554us; 1us; 16557us; 154us; 242us; 0us; 16555us; 2us; 17098us; 126us; 1039us; 219us; 246us; 1us; 16557us; 154us; 242us; 0us; 16556us; 0us; 16558us; 0us; 16559us; 1us; 17100us; 140us; 1040us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 16922us; 92us; 816us; 3us; 32768us; 10us; 428us; 84us; 251us; 219us; 416us; 42us; 32768us; 21us; 255us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 253us; 0us; 16560us; 0us; 16561us; 0us; 16562us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 5us; 32768us; 10us; 428us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 219us; 416us; 0us; 16563us; 0us; 16564us; 0us; 16565us; 0us; 16568us; 1us; 16566us; 99us; 263us; 0us; 16567us; 2us; 32768us; 105us; 959us; 209us; 962us; 2us; 32768us; 84us; 265us; 154us; 267us; 41us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16569us; 2us; 32768us; 105us; 959us; 209us; 962us; 0us; 16570us; 0us; 16571us; 2us; 32768us; 69us; 273us; 92us; 271us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16572us; 0us; 16573us; 0us; 16574us; 0us; 16575us; 0us; 16576us; 0us; 16577us; 0us; 16578us; 0us; 16579us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 32768us; 112us; 282us; 42us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 284us; 0us; 16580us; 0us; 16581us; 20us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 296us; 2us; 32768us; 112us; 287us; 219us; 294us; 43us; 32768us; 10us; 428us; 17us; 291us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 416us; 3us; 32768us; 10us; 428us; 19us; 289us; 219us; 416us; 0us; 16582us; 0us; 16583us; 1us; 32768us; 19us; 292us; 0us; 16584us; 0us; 16585us; 1us; 32768us; 19us; 295us; 0us; 16586us; 1us; 32768us; 19us; 297us; 0us; 16587us; 1us; 16588us; 39us; 299us; 1us; 32768us; 182us; 935us; 0us; 16589us; 5us; 16590us; 71us; 311us; 93us; 312us; 103us; 319us; 111us; 317us; 155us; 309us; 5us; 16591us; 71us; 311us; 93us; 312us; 103us; 319us; 111us; 317us; 155us; 309us; 3us; 16593us; 93us; 312us; 103us; 319us; 111us; 317us; 1us; 16594us; 93us; 312us; 2us; 16598us; 93us; 312us; 103us; 319us; 2us; 16599us; 93us; 312us; 103us; 319us; 1us; 16600us; 93us; 312us; 1us; 16601us; 93us; 312us; 1us; 32768us; 212us; 964us; 0us; 16592us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 16595us; 111us; 316us; 0us; 16596us; 0us; 16597us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 25us; 16606us; 10us; 16615us; 15us; 16615us; 20us; 16615us; 42us; 16615us; 44us; 16615us; 71us; 16615us; 72us; 16615us; 73us; 16615us; 74us; 16615us; 75us; 16615us; 79us; 16615us; 84us; 16615us; 92us; 16615us; 93us; 16615us; 98us; 16615us; 99us; 16615us; 103us; 16615us; 107us; 16615us; 108us; 16615us; 109us; 16615us; 111us; 16615us; 112us; 16615us; 150us; 16615us; 155us; 16615us; 219us; 16615us; 21us; 32768us; 40us; 323us; 41us; 325us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16602us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16603us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16604us; 0us; 16605us; 21us; 16610us; 40us; 332us; 41us; 330us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16607us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16608us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16609us; 3us; 32768us; 47us; 966us; 59us; 965us; 212us; 964us; 3us; 32768us; 73us; 1063us; 74us; 1060us; 75us; 1062us; 0us; 16611us; 19us; 16641us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 32768us; 72us; 339us; 0us; 16612us; 19us; 16641us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 32768us; 79us; 342us; 0us; 16613us; 0us; 16614us; 0us; 16615us; 0us; 16616us; 0us; 16617us; 0us; 16618us; 0us; 16619us; 47us; 16625us; 10us; 428us; 47us; 1018us; 59us; 135us; 71us; 1011us; 76us; 993us; 77us; 991us; 81us; 343us; 84us; 995us; 85us; 337us; 86us; 340us; 88us; 334us; 89us; 999us; 97us; 1003us; 103us; 1000us; 104us; 1001us; 106us; 349us; 110us; 994us; 114us; 976us; 117us; 996us; 122us; 347us; 145us; 346us; 166us; 1006us; 167us; 1002us; 170us; 348us; 177us; 1008us; 180us; 1005us; 182us; 997us; 183us; 998us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 202us; 1004us; 203us; 992us; 204us; 989us; 205us; 988us; 206us; 990us; 207us; 983us; 208us; 987us; 209us; 986us; 210us; 985us; 211us; 984us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 353us; 5us; 32768us; 10us; 428us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 219us; 416us; 0us; 16620us; 0us; 16621us; 3us; 16660us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 0us; 16622us; 0us; 16623us; 6us; 16624us; 71us; 369us; 92us; 372us; 93us; 374us; 103us; 379us; 111us; 377us; 155us; 367us; 4us; 16627us; 92us; 372us; 93us; 374us; 103us; 379us; 111us; 377us; 2us; 16631us; 92us; 372us; 93us; 374us; 3us; 16633us; 92us; 372us; 93us; 374us; 103us; 379us; 3us; 16634us; 92us; 372us; 93us; 374us; 103us; 379us; 2us; 16635us; 92us; 372us; 93us; 374us; 2us; 16636us; 92us; 372us; 93us; 374us; 6us; 16640us; 71us; 369us; 92us; 372us; 93us; 374us; 103us; 379us; 111us; 377us; 155us; 367us; 8us; 17092us; 20us; 1028us; 71us; 369us; 92us; 372us; 93us; 374us; 98us; 1029us; 103us; 379us; 111us; 377us; 155us; 367us; 15us; 32768us; 10us; 428us; 15us; 1081us; 42us; 1077us; 44us; 1078us; 71us; 369us; 74us; 1079us; 84us; 769us; 92us; 372us; 93us; 374us; 103us; 379us; 108us; 1080us; 111us; 377us; 150us; 765us; 155us; 367us; 219us; 421us; 7us; 16775us; 71us; 369us; 92us; 372us; 93us; 374us; 99us; 622us; 103us; 379us; 111us; 377us; 155us; 367us; 1us; 32768us; 212us; 964us; 0us; 16626us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 16628us; 111us; 376us; 1us; 16629us; 103us; 378us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16630us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16632us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16637us; 2us; 17092us; 20us; 1028us; 98us; 1029us; 0us; 16638us; 3us; 17091us; 47us; 966us; 59us; 965us; 212us; 964us; 0us; 16639us; 2us; 32768us; 84us; 386us; 91us; 968us; 19us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16642us; 19us; 16641us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16643us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 5us; 32768us; 10us; 428us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 219us; 416us; 0us; 16645us; 0us; 16646us; 0us; 16647us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 3us; 32768us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 0us; 16648us; 23us; 16649us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 1us; 16651us; 17us; 400us; 0us; 16650us; 1us; 16653us; 92us; 402us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16652us; 27us; 16656us; 20us; 1028us; 28us; 411us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 98us; 1029us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 119us; 409us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 28us; 16656us; 20us; 1028us; 28us; 411us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 98us; 1029us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 119us; 409us; 151us; 558us; 166us; 710us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 28us; 16656us; 20us; 1028us; 28us; 411us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 98us; 1029us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 119us; 409us; 151us; 558us; 166us; 760us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 40us; 16655us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16654us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16657us; 1us; 32768us; 21us; 412us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 3us; 32768us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 0us; 16658us; 43us; 16659us; 20us; 464us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 463us; 0us; 16660us; 2us; 16660us; 18us; 1045us; 161us; 1044us; 2us; 16660us; 18us; 1045us; 161us; 1044us; 2us; 16660us; 18us; 1045us; 161us; 1044us; 2us; 16660us; 30us; 1043us; 160us; 1042us; 2us; 16660us; 18us; 1045us; 161us; 1044us; 1us; 16660us; 72us; 693us; 1us; 16660us; 72us; 706us; 1us; 16660us; 79us; 732us; 3us; 16660us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 3us; 16660us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 3us; 16660us; 73us; 1063us; 74us; 1060us; 75us; 1062us; 0us; 16661us; 41us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 81us; 430us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 2us; 32768us; 27us; 445us; 120us; 443us; 1us; 16662us; 51us; 429us; 25us; 32768us; 27us; 445us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 120us; 443us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 1us; 16663us; 51us; 429us; 0us; 16664us; 0us; 16665us; 41us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 81us; 437us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 2us; 32768us; 27us; 445us; 120us; 443us; 1us; 16666us; 51us; 429us; 25us; 32768us; 27us; 445us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 120us; 443us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 1us; 16667us; 51us; 429us; 0us; 16668us; 0us; 16669us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 23us; 16670us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 1us; 32768us; 21us; 446us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 5us; 32768us; 10us; 428us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 219us; 416us; 0us; 16671us; 0us; 16672us; 41us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 3us; 32768us; 10us; 428us; 18us; 238us; 219us; 416us; 1us; 16673us; 35us; 450us; 0us; 16674us; 0us; 16675us; 0us; 16676us; 0us; 16677us; 1us; 32768us; 150us; 458us; 41us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 460us; 0us; 16678us; 0us; 16679us; 43us; 32768us; 20us; 464us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 463us; 0us; 16680us; 0us; 16681us; 42us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 466us; 0us; 16682us; 0us; 16683us; 0us; 16684us; 41us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 3us; 32768us; 10us; 428us; 18us; 238us; 219us; 416us; 0us; 16685us; 41us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 3us; 32768us; 10us; 428us; 18us; 238us; 219us; 416us; 0us; 16686us; 0us; 16687us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 4us; 32768us; 10us; 428us; 25us; 605us; 101us; 603us; 219us; 416us; 0us; 16688us; 0us; 16689us; 42us; 32768us; 10us; 428us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 416us; 27us; 32768us; 10us; 428us; 28us; 628us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 119us; 627us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 219us; 416us; 0us; 16690us; 0us; 16692us; 0us; 16693us; 42us; 32768us; 10us; 428us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 417us; 27us; 32768us; 10us; 428us; 30us; 1043us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 160us; 1042us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 219us; 416us; 42us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 490us; 4us; 32768us; 10us; 428us; 18us; 1045us; 161us; 1044us; 219us; 416us; 0us; 16694us; 0us; 16695us; 2us; 32768us; 18us; 1045us; 161us; 1044us; 0us; 16696us; 0us; 16697us; 0us; 16698us; 0us; 16699us; 26us; 32768us; 10us; 428us; 15us; 1081us; 42us; 1077us; 44us; 1078us; 47us; 1018us; 59us; 135us; 74us; 1079us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 108us; 1080us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 420us; 10us; 17090us; 10us; 428us; 15us; 1081us; 20us; 1036us; 30us; 1043us; 42us; 1077us; 44us; 1078us; 74us; 1079us; 108us; 1080us; 160us; 1042us; 219us; 416us; 48us; 32768us; 10us; 428us; 15us; 1081us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 42us; 1077us; 44us; 1078us; 51us; 429us; 53us; 436us; 59us; 687us; 74us; 1079us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 108us; 1080us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 418us; 9us; 32768us; 10us; 428us; 15us; 1081us; 18us; 1045us; 42us; 1077us; 44us; 1078us; 74us; 1079us; 108us; 1080us; 161us; 1044us; 219us; 416us; 0us; 16700us; 0us; 16701us; 0us; 16702us; 0us; 16703us; 0us; 16704us; 4us; 32768us; 10us; 428us; 30us; 1043us; 160us; 1042us; 219us; 416us; 43us; 32768us; 10us; 428us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 419us; 4us; 32768us; 10us; 428us; 18us; 1045us; 161us; 1044us; 219us; 416us; 0us; 16705us; 0us; 16706us; 0us; 16707us; 0us; 16708us; 0us; 16709us; 41us; 32768us; 21us; 390us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 2us; 32768us; 18us; 1045us; 161us; 1044us; 0us; 16710us; 0us; 16711us; 0us; 16712us; 0us; 16713us; 1us; 32768us; 112us; 763us; 0us; 16714us; 23us; 16716us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 18us; 16718us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 103us; 562us; 104us; 563us; 110us; 575us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 18us; 16719us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 103us; 562us; 104us; 563us; 110us; 575us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 8us; 16720us; 76us; 574us; 93us; 572us; 110us; 575us; 180us; 571us; 204us; 573us; 206us; 576us; 209us; 570us; 211us; 577us; 18us; 16721us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 103us; 562us; 104us; 563us; 110us; 575us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 16us; 16722us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 110us; 575us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 16us; 16723us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 110us; 575us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 8us; 16724us; 76us; 574us; 93us; 572us; 110us; 575us; 180us; 571us; 204us; 573us; 206us; 576us; 209us; 570us; 211us; 577us; 8us; 16725us; 76us; 574us; 93us; 572us; 110us; 575us; 180us; 571us; 204us; 573us; 206us; 576us; 209us; 570us; 211us; 577us; 8us; 16726us; 76us; 574us; 93us; 572us; 110us; 575us; 180us; 571us; 204us; 573us; 206us; 576us; 209us; 570us; 211us; 577us; 8us; 16727us; 76us; 574us; 93us; 572us; 110us; 575us; 180us; 571us; 204us; 573us; 206us; 576us; 209us; 570us; 211us; 577us; 8us; 16728us; 76us; 574us; 93us; 572us; 110us; 575us; 180us; 571us; 204us; 573us; 206us; 576us; 209us; 570us; 211us; 577us; 8us; 16729us; 76us; 574us; 93us; 572us; 110us; 575us; 180us; 571us; 204us; 573us; 206us; 576us; 209us; 570us; 211us; 577us; 8us; 16730us; 76us; 574us; 93us; 572us; 110us; 575us; 180us; 571us; 204us; 573us; 206us; 576us; 209us; 570us; 211us; 577us; 1us; 16731us; 211us; 577us; 7us; 16732us; 76us; 574us; 93us; 572us; 110us; 575us; 180us; 571us; 204us; 573us; 206us; 576us; 211us; 577us; 4us; 16733us; 110us; 575us; 180us; 571us; 206us; 576us; 211us; 577us; 4us; 16734us; 110us; 575us; 180us; 571us; 206us; 576us; 211us; 577us; 1us; 16735us; 211us; 577us; 1us; 16736us; 211us; 577us; 1us; 16737us; 211us; 577us; 23us; 16774us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 23us; 16779us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 23us; 16783us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 27us; 32768us; 10us; 428us; 28us; 628us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 119us; 627us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 219us; 416us; 21us; 16790us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 103us; 562us; 104us; 563us; 110us; 575us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 21us; 16791us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 103us; 562us; 104us; 563us; 110us; 575us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 23us; 16829us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 23us; 16831us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 24us; 16879us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 166us; 760us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 24us; 16875us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 166us; 761us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 23us; 16876us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 25us; 32768us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 121us; 812us; 151us; 558us; 162us; 813us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 23us; 16890us; 76us; 574us; 77us; 567us; 84us; 565us; 93us; 572us; 94us; 554us; 97us; 556us; 103us; 562us; 104us; 563us; 110us; 575us; 111us; 643us; 117us; 561us; 151us; 558us; 167us; 559us; 180us; 571us; 182us; 568us; 183us; 569us; 204us; 573us; 205us; 564us; 206us; 576us; 208us; 560us; 209us; 570us; 210us; 566us; 211us; 577us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16715us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 16717us; 111us; 642us; 41us; 32768us; 15us; 578us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 579us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 580us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 581us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 582us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 583us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 584us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 585us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 586us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 587us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 588us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 589us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 590us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 591us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 592us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 593us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 594us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 595us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 596us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 41us; 32768us; 15us; 597us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16738us; 0us; 16739us; 0us; 16740us; 0us; 16741us; 0us; 16742us; 0us; 16743us; 0us; 16744us; 0us; 16745us; 0us; 16746us; 0us; 16747us; 0us; 16748us; 0us; 16749us; 0us; 16750us; 0us; 16751us; 0us; 16752us; 0us; 16753us; 0us; 16754us; 0us; 16755us; 0us; 16756us; 0us; 16757us; 0us; 16758us; 0us; 16759us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 3us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 0us; 16760us; 21us; 32768us; 47us; 1018us; 59us; 135us; 71us; 610us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 613us; 0us; 16761us; 21us; 32768us; 47us; 1018us; 59us; 135us; 71us; 610us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 613us; 3us; 32768us; 10us; 428us; 19us; 607us; 219us; 416us; 0us; 16762us; 0us; 16763us; 0us; 16764us; 20us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 612us; 0us; 16765us; 0us; 16766us; 0us; 16767us; 0us; 16768us; 2us; 32768us; 112us; 623us; 219us; 621us; 2us; 16769us; 71us; 617us; 219us; 620us; 20us; 32768us; 47us; 1018us; 59us; 135us; 81us; 343us; 85us; 337us; 86us; 340us; 88us; 334us; 106us; 349us; 114us; 976us; 122us; 347us; 145us; 346us; 170us; 348us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 619us; 0us; 16770us; 0us; 16771us; 0us; 16772us; 0us; 16773us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16776us; 3us; 16782us; 26us; 634us; 163us; 633us; 164us; 639us; 0us; 16778us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 32768us; 21us; 629us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 5us; 32768us; 10us; 428us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 219us; 416us; 0us; 16780us; 0us; 16781us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 32768us; 21us; 635us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 5us; 32768us; 10us; 428us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 219us; 416us; 0us; 16784us; 0us; 16785us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16786us; 0us; 16787us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 26us; 32768us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 142us; 653us; 145us; 717us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 26us; 17034us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 142us; 653us; 145us; 717us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16792us; 26us; 32768us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 142us; 653us; 145us; 717us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 26us; 17030us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 142us; 653us; 145us; 717us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16793us; 26us; 32768us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 142us; 653us; 145us; 717us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 26us; 17046us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 142us; 653us; 145us; 717us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16794us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 869us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 658us; 2us; 17116us; 40us; 1047us; 41us; 1046us; 15us; 32768us; 86us; 728us; 88us; 748us; 106us; 734us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 213us; 4us; 214us; 3us; 219us; 657us; 0us; 16795us; 0us; 16796us; 0us; 16797us; 26us; 32768us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 142us; 653us; 145us; 717us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16798us; 22us; 16799us; 59us; 687us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 176us; 679us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 203us; 665us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 25us; 16799us; 25us; 791us; 59us; 687us; 84us; 778us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 101us; 787us; 106us; 735us; 114us; 976us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 176us; 679us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 203us; 665us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16800us; 5us; 16801us; 39us; 673us; 40us; 672us; 41us; 671us; 89us; 685us; 91us; 677us; 21us; 32768us; 59us; 687us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 176us; 679us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 5us; 16802us; 39us; 673us; 40us; 672us; 41us; 671us; 89us; 685us; 91us; 677us; 5us; 16803us; 39us; 673us; 40us; 672us; 41us; 671us; 89us; 685us; 91us; 677us; 2us; 16804us; 39us; 673us; 40us; 672us; 1us; 16805us; 39us; 673us; 5us; 16807us; 39us; 673us; 40us; 672us; 41us; 671us; 89us; 685us; 91us; 677us; 21us; 32768us; 59us; 687us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 176us; 679us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 21us; 32768us; 59us; 687us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 176us; 679us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 1us; 32768us; 182us; 921us; 0us; 16806us; 21us; 32768us; 59us; 687us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 176us; 679us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 21us; 17024us; 59us; 687us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 106us; 735us; 114us; 976us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 176us; 679us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 7us; 16821us; 10us; 428us; 47us; 697us; 85us; 702us; 106us; 699us; 114us; 976us; 212us; 964us; 219us; 416us; 0us; 16808us; 1us; 32768us; 91us; 680us; 7us; 16821us; 10us; 428us; 47us; 697us; 85us; 702us; 106us; 699us; 114us; 976us; 212us; 964us; 219us; 416us; 0us; 16809us; 3us; 32768us; 106us; 971us; 114us; 976us; 212us; 964us; 3us; 17040us; 106us; 971us; 114us; 976us; 212us; 964us; 0us; 16810us; 2us; 32768us; 106us; 600us; 212us; 599us; 0us; 16811us; 0us; 16812us; 0us; 16813us; 42us; 16872us; 10us; 428us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 422us; 3us; 32768us; 10us; 428us; 72us; 691us; 219us; 416us; 0us; 16814us; 0us; 16815us; 0us; 16816us; 0us; 16817us; 0us; 16818us; 0us; 16819us; 0us; 16820us; 0us; 16822us; 62us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 71us; 1011us; 76us; 645us; 77us; 991us; 84us; 995us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 683us; 97us; 1003us; 100us; 484us; 103us; 1000us; 104us; 1001us; 106us; 735us; 110us; 994us; 114us; 976us; 117us; 996us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 166us; 1006us; 167us; 1002us; 168us; 659us; 170us; 716us; 176us; 679us; 177us; 1008us; 180us; 651us; 182us; 997us; 183us; 998us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 202us; 1004us; 203us; 992us; 204us; 648us; 205us; 988us; 206us; 990us; 207us; 676us; 208us; 987us; 209us; 986us; 210us; 985us; 211us; 984us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 974us; 3us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 0us; 16823us; 44us; 32768us; 10us; 428us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 110us; 712us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 166us; 711us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 423us; 3us; 32768us; 10us; 428us; 72us; 704us; 219us; 416us; 0us; 16824us; 0us; 16825us; 0us; 16826us; 0us; 16827us; 1us; 32768us; 72us; 709us; 0us; 16828us; 40us; 16830us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16832us; 0us; 16833us; 0us; 16834us; 0us; 16835us; 0us; 16836us; 0us; 16837us; 0us; 16838us; 0us; 16839us; 0us; 16840us; 42us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 165us; 727us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 725us; 3us; 32768us; 10us; 428us; 165us; 723us; 219us; 416us; 0us; 16841us; 0us; 16842us; 1us; 32768us; 165us; 726us; 0us; 16843us; 0us; 16844us; 42us; 16872us; 10us; 428us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 424us; 3us; 32768us; 10us; 428us; 79us; 730us; 219us; 416us; 0us; 16845us; 0us; 16846us; 0us; 16847us; 0us; 16848us; 49us; 32768us; 10us; 428us; 15us; 745us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 42us; 742us; 44us; 743us; 51us; 429us; 53us; 436us; 59us; 687us; 74us; 744us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 425us; 70us; 32768us; 10us; 428us; 15us; 745us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 42us; 742us; 44us; 743us; 51us; 429us; 53us; 436us; 59us; 687us; 71us; 1011us; 74us; 744us; 76us; 645us; 77us; 991us; 84us; 995us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 683us; 97us; 1003us; 100us; 484us; 103us; 1000us; 104us; 1001us; 106us; 735us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 110us; 994us; 114us; 976us; 117us; 996us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 166us; 1006us; 167us; 1002us; 168us; 659us; 170us; 716us; 176us; 679us; 177us; 1008us; 180us; 651us; 182us; 997us; 183us; 998us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 202us; 1004us; 203us; 992us; 204us; 648us; 205us; 988us; 206us; 990us; 207us; 676us; 208us; 987us; 209us; 986us; 210us; 985us; 211us; 984us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 426us; 0us; 16849us; 9us; 32768us; 10us; 428us; 15us; 1075us; 42us; 1072us; 44us; 1073us; 74us; 1074us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 219us; 416us; 0us; 16850us; 0us; 16851us; 0us; 16852us; 0us; 16852us; 0us; 16853us; 0us; 16854us; 0us; 16855us; 0us; 16856us; 0us; 16857us; 0us; 16858us; 47us; 32768us; 10us; 428us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 67us; 772us; 73us; 1063us; 74us; 1060us; 75us; 1062us; 76us; 644us; 81us; 782us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 427us; 5us; 32768us; 10us; 428us; 73us; 1063us; 74us; 1060us; 75us; 1062us; 219us; 416us; 0us; 16863us; 0us; 16864us; 0us; 16865us; 0us; 16866us; 0us; 16867us; 0us; 16868us; 0us; 16869us; 0us; 16871us; 0us; 16873us; 0us; 16874us; 42us; 32768us; 10us; 428us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 416us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16877us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16878us; 47us; 32768us; 10us; 428us; 15us; 1081us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 42us; 1077us; 44us; 1078us; 51us; 429us; 53us; 436us; 59us; 687us; 74us; 1079us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 108us; 1080us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 416us; 0us; 16880us; 0us; 16881us; 0us; 16882us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 40us; 32768us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16894us; 16us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 869us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 2us; 17116us; 40us; 1047us; 41us; 1046us; 14us; 16893us; 86us; 728us; 88us; 748us; 106us; 734us; 122us; 718us; 145us; 717us; 159us; 721us; 170us; 716us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 213us; 4us; 214us; 3us; 0us; 16912us; 2us; 16904us; 20us; 800us; 98us; 801us; 0us; 16895us; 41us; 32768us; 21us; 395us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16912us; 2us; 16904us; 20us; 800us; 98us; 801us; 0us; 16896us; 1us; 16897us; 84us; 783us; 41us; 16898us; 21us; 395us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 51us; 429us; 53us; 436us; 59us; 687us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16912us; 2us; 16904us; 20us; 800us; 98us; 801us; 0us; 16899us; 4us; 32768us; 47us; 966us; 59us; 965us; 81us; 805us; 212us; 964us; 0us; 16912us; 2us; 16904us; 20us; 800us; 98us; 801us; 0us; 16900us; 6us; 16904us; 20us; 800us; 47us; 966us; 59us; 965us; 81us; 805us; 98us; 801us; 212us; 964us; 1us; 32768us; 19us; 793us; 0us; 16901us; 0us; 16912us; 2us; 16904us; 20us; 800us; 98us; 801us; 1us; 32768us; 19us; 797us; 0us; 16902us; 0us; 16903us; 4us; 16903us; 47us; 966us; 59us; 965us; 81us; 805us; 212us; 964us; 1us; 16905us; 98us; 803us; 1us; 16906us; 20us; 802us; 0us; 16907us; 0us; 16908us; 1us; 16909us; 91us; 968us; 0us; 16910us; 0us; 16911us; 8us; 16916us; 10us; 428us; 15us; 1081us; 42us; 1077us; 44us; 1078us; 74us; 1079us; 84us; 808us; 108us; 1080us; 219us; 416us; 48us; 16914us; 10us; 428us; 15us; 1081us; 21us; 395us; 23us; 285us; 30us; 235us; 33us; 471us; 35us; 450us; 36us; 468us; 38us; 231us; 42us; 1077us; 44us; 1078us; 51us; 429us; 53us; 436us; 59us; 687us; 74us; 1079us; 76us; 644us; 85us; 689us; 86us; 728us; 88us; 748us; 89us; 682us; 100us; 484us; 106us; 735us; 108us; 1080us; 114us; 976us; 122us; 718us; 139us; 475us; 142us; 653us; 145us; 717us; 146us; 495us; 147us; 280us; 149us; 479us; 159us; 721us; 168us; 659us; 170us; 716us; 176us; 679us; 180us; 650us; 184us; 226us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 204us; 647us; 207us; 675us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 416us; 0us; 16913us; 0us; 16915us; 0us; 16917us; 0us; 16918us; 0us; 16919us; 0us; 16920us; 0us; 16921us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 89us; 830us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16923us; 1us; 16925us; 112us; 819us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 89us; 830us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16924us; 1us; 16927us; 110us; 822us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 89us; 830us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16926us; 1us; 16929us; 110us; 825us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 89us; 830us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16928us; 6us; 16932us; 41us; 863us; 47us; 966us; 59us; 965us; 85us; 878us; 92us; 828us; 212us; 964us; 16us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 5us; 16930us; 41us; 863us; 47us; 966us; 59us; 965us; 85us; 878us; 212us; 964us; 1us; 32768us; 212us; 964us; 1us; 32768us; 92us; 832us; 16us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 5us; 16931us; 41us; 863us; 47us; 966us; 59us; 965us; 85us; 878us; 212us; 964us; 1us; 16937us; 112us; 835us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16936us; 7us; 16941us; 41us; 863us; 47us; 966us; 59us; 965us; 85us; 878us; 110us; 838us; 206us; 842us; 212us; 964us; 16us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16938us; 16us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16939us; 16us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16940us; 7us; 16944us; 41us; 863us; 47us; 966us; 59us; 965us; 85us; 878us; 110us; 845us; 206us; 847us; 212us; 964us; 16us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16942us; 16us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16943us; 6us; 16946us; 41us; 863us; 47us; 966us; 59us; 965us; 85us; 878us; 110us; 850us; 212us; 964us; 16us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16945us; 1us; 16947us; 91us; 968us; 1us; 16949us; 209us; 855us; 4us; 16949us; 39us; 919us; 91us; 916us; 182us; 921us; 209us; 855us; 1us; 32768us; 198us; 856us; 0us; 16948us; 16us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 212us; 964us; 213us; 4us; 214us; 3us; 6us; 32768us; 41us; 863us; 47us; 966us; 59us; 965us; 72us; 859us; 85us; 878us; 212us; 964us; 0us; 16950us; 5us; 32768us; 41us; 864us; 47us; 966us; 59us; 965us; 85us; 878us; 212us; 964us; 0us; 16951us; 22us; 16951us; 10us; 16966us; 20us; 16966us; 40us; 16966us; 73us; 16966us; 74us; 16966us; 75us; 16966us; 86us; 16966us; 88us; 16966us; 98us; 16966us; 106us; 16966us; 122us; 16966us; 145us; 16966us; 159us; 16966us; 170us; 16966us; 188us; 16966us; 189us; 16966us; 190us; 16966us; 196us; 16966us; 198us; 16966us; 213us; 16966us; 214us; 16966us; 219us; 16966us; 1us; 32768us; 85us; 878us; 1us; 32768us; 85us; 878us; 0us; 16952us; 22us; 16952us; 10us; 16967us; 20us; 16967us; 40us; 16967us; 73us; 16967us; 74us; 16967us; 75us; 16967us; 86us; 16967us; 88us; 16967us; 98us; 16967us; 106us; 16967us; 122us; 16967us; 145us; 16967us; 159us; 16967us; 170us; 16967us; 188us; 16967us; 189us; 16967us; 190us; 16967us; 196us; 16967us; 198us; 16967us; 213us; 16967us; 214us; 16967us; 219us; 16967us; 0us; 16953us; 22us; 16953us; 10us; 16968us; 20us; 16968us; 40us; 16968us; 73us; 16968us; 74us; 16968us; 75us; 16968us; 86us; 16968us; 88us; 16968us; 98us; 16968us; 106us; 16968us; 122us; 16968us; 145us; 16968us; 159us; 16968us; 170us; 16968us; 188us; 16968us; 189us; 16968us; 190us; 16968us; 196us; 16968us; 198us; 16968us; 213us; 16968us; 214us; 16968us; 219us; 16968us; 18us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 913us; 18us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 913us; 3us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 3us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 3us; 32768us; 47us; 966us; 59us; 965us; 212us; 964us; 3us; 32768us; 47us; 966us; 59us; 965us; 212us; 964us; 0us; 16954us; 22us; 16954us; 10us; 16969us; 20us; 16969us; 40us; 16969us; 73us; 16969us; 74us; 16969us; 75us; 16969us; 86us; 16969us; 88us; 16969us; 98us; 16969us; 106us; 16969us; 122us; 16969us; 145us; 16969us; 159us; 16969us; 170us; 16969us; 188us; 16969us; 189us; 16969us; 190us; 16969us; 196us; 16969us; 198us; 16969us; 213us; 16969us; 214us; 16969us; 219us; 16969us; 0us; 16955us; 2us; 32768us; 72us; 879us; 111us; 880us; 0us; 16956us; 2us; 32768us; 72us; 881us; 111us; 882us; 0us; 16957us; 2us; 32768us; 72us; 883us; 111us; 884us; 0us; 16958us; 1us; 32768us; 72us; 885us; 0us; 16959us; 1us; 32768us; 111us; 887us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16962us; 1us; 16960us; 111us; 891us; 4us; 32768us; 10us; 428us; 111us; 891us; 183us; 925us; 219us; 416us; 17us; 32768us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 0us; 16961us; 1us; 16963us; 209us; 895us; 23us; 16963us; 10us; 16971us; 20us; 16971us; 40us; 16971us; 73us; 16971us; 74us; 16971us; 75us; 16971us; 86us; 16971us; 88us; 16971us; 98us; 16971us; 106us; 16971us; 122us; 16971us; 145us; 16971us; 159us; 16971us; 170us; 16971us; 188us; 16971us; 189us; 16971us; 190us; 16971us; 196us; 16971us; 198us; 16971us; 209us; 896us; 213us; 16971us; 214us; 16971us; 219us; 16971us; 2us; 32768us; 76us; 899us; 198us; 897us; 2us; 32768us; 76us; 900us; 198us; 898us; 0us; 16964us; 22us; 16964us; 10us; 16972us; 20us; 16972us; 40us; 16972us; 73us; 16972us; 74us; 16972us; 75us; 16972us; 86us; 16972us; 88us; 16972us; 98us; 16972us; 106us; 16972us; 122us; 16972us; 145us; 16972us; 159us; 16972us; 170us; 16972us; 188us; 16972us; 189us; 16972us; 190us; 16972us; 196us; 16972us; 198us; 16972us; 213us; 16972us; 214us; 16972us; 219us; 16972us; 1us; 32768us; 198us; 901us; 1us; 32768us; 198us; 902us; 0us; 16965us; 22us; 16965us; 10us; 16973us; 20us; 16973us; 40us; 16973us; 73us; 16973us; 74us; 16973us; 75us; 16973us; 86us; 16973us; 88us; 16973us; 98us; 16973us; 106us; 16973us; 122us; 16973us; 145us; 16973us; 159us; 16973us; 170us; 16973us; 188us; 16973us; 189us; 16973us; 190us; 16973us; 196us; 16973us; 198us; 16973us; 213us; 16973us; 214us; 16973us; 219us; 16973us; 0us; 16970us; 0us; 16974us; 0us; 16975us; 5us; 16994us; 10us; 428us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 219us; 416us; 0us; 16976us; 0us; 16977us; 0us; 16978us; 0us; 16979us; 0us; 16980us; 0us; 16981us; 3us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 0us; 16982us; 0us; 16983us; 7us; 32768us; 10us; 428us; 15us; 1081us; 42us; 1077us; 44us; 1078us; 74us; 1079us; 108us; 1080us; 219us; 416us; 0us; 16984us; 0us; 16985us; 1us; 32768us; 182us; 921us; 0us; 16986us; 20us; 32768us; 10us; 428us; 47us; 966us; 59us; 965us; 81us; 905us; 85us; 857us; 106us; 870us; 122us; 912us; 145us; 911us; 170us; 910us; 183us; 931us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 416us; 1us; 32768us; 111us; 923us; 24us; 32768us; 10us; 428us; 15us; 1081us; 42us; 1077us; 44us; 1078us; 47us; 966us; 59us; 965us; 74us; 1079us; 81us; 905us; 85us; 857us; 106us; 870us; 108us; 1080us; 122us; 912us; 145us; 911us; 170us; 910us; 188us; 278us; 189us; 277us; 190us; 276us; 196us; 274us; 198us; 275us; 206us; 840us; 212us; 964us; 213us; 4us; 214us; 3us; 219us; 416us; 0us; 16962us; 0us; 16987us; 0us; 16988us; 0us; 16989us; 3us; 16995us; 10us; 428us; 183us; 929us; 219us; 416us; 0us; 16990us; 0us; 16991us; 0us; 16992us; 0us; 16993us; 0us; 16994us; 0us; 16995us; 7us; 32768us; 47us; 966us; 59us; 965us; 81us; 938us; 106us; 941us; 198us; 949us; 206us; 958us; 212us; 964us; 3us; 32768us; 110us; 956us; 183us; 937us; 206us; 957us; 0us; 16996us; 1us; 32768us; 183us; 939us; 0us; 16997us; 1us; 16998us; 91us; 968us; 6us; 32768us; 47us; 966us; 59us; 965us; 106us; 941us; 198us; 949us; 206us; 958us; 212us; 964us; 5us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 110us; 956us; 206us; 957us; 0us; 16999us; 1us; 17000us; 209us; 945us; 2us; 32768us; 76us; 947us; 198us; 946us; 0us; 17001us; 1us; 32768us; 198us; 948us; 0us; 17002us; 0us; 17003us; 5us; 17004us; 47us; 966us; 59us; 965us; 106us; 941us; 198us; 949us; 212us; 964us; 0us; 17005us; 0us; 17006us; 0us; 17007us; 0us; 17008us; 0us; 17009us; 6us; 32768us; 47us; 966us; 59us; 965us; 106us; 941us; 198us; 949us; 206us; 958us; 212us; 964us; 6us; 32768us; 47us; 966us; 59us; 965us; 106us; 941us; 198us; 949us; 206us; 958us; 212us; 964us; 6us; 32768us; 47us; 966us; 59us; 965us; 106us; 941us; 198us; 949us; 206us; 958us; 212us; 964us; 1us; 32768us; 212us; 964us; 0us; 17010us; 0us; 17011us; 1us; 32768us; 212us; 964us; 0us; 17012us; 0us; 17013us; 0us; 17014us; 0us; 17015us; 0us; 17016us; 8us; 32768us; 10us; 428us; 15us; 1081us; 42us; 1077us; 44us; 1078us; 74us; 1079us; 108us; 1080us; 212us; 964us; 219us; 416us; 0us; 17017us; 0us; 17018us; 27us; 32768us; 71us; 1011us; 76us; 993us; 77us; 991us; 84us; 995us; 89us; 999us; 97us; 1003us; 103us; 1000us; 104us; 1001us; 110us; 994us; 117us; 996us; 166us; 1006us; 167us; 1002us; 177us; 1008us; 180us; 1005us; 182us; 997us; 183us; 998us; 202us; 1004us; 203us; 992us; 204us; 989us; 205us; 988us; 206us; 990us; 207us; 983us; 208us; 987us; 209us; 986us; 210us; 985us; 211us; 984us; 219us; 974us; 3us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 0us; 17019us; 3us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 0us; 17020us; 0us; 17021us; 1us; 32768us; 71us; 978us; 5us; 32768us; 81us; 980us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 212us; 1010us; 0us; 17022us; 1us; 32768us; 71us; 981us; 3us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 0us; 17023us; 0us; 17024us; 0us; 17025us; 0us; 17026us; 0us; 17027us; 0us; 17028us; 0us; 17029us; 0us; 17030us; 0us; 17031us; 0us; 17032us; 0us; 17033us; 0us; 17034us; 0us; 17035us; 0us; 17036us; 0us; 17037us; 0us; 17038us; 0us; 17039us; 0us; 17040us; 0us; 17041us; 0us; 17042us; 0us; 17043us; 0us; 17044us; 0us; 17045us; 0us; 17046us; 1us; 17047us; 166us; 1007us; 0us; 17048us; 1us; 32768us; 178us; 1009us; 0us; 17049us; 0us; 17050us; 1us; 32768us; 212us; 1010us; 0us; 17051us; 0us; 17052us; 0us; 17053us; 0us; 17054us; 1us; 17055us; 91us; 1019us; 0us; 17056us; 0us; 17057us; 5us; 32768us; 47us; 1018us; 106us; 971us; 114us; 976us; 212us; 964us; 219us; 1021us; 0us; 17058us; 0us; 17059us; 0us; 17060us; 0us; 17061us; 0us; 17062us; 0us; 17063us; 3us; 17064us; 20us; 1025us; 82us; 1024us; 98us; 1023us; 0us; 17065us; 1us; 17074us; 98us; 1030us; 1us; 17075us; 20us; 1031us; 0us; 17076us; 0us; 17077us; 0us; 17078us; 0us; 17079us; 0us; 17080us; 0us; 17085us; 0us; 17089us; 0us; 17091us; 0us; 17093us; 0us; 17097us; 0us; 17099us; 0us; 17101us; 0us; 17103us; 0us; 17104us; 0us; 17105us; 0us; 17106us; 0us; 17114us; 0us; 17115us; 5us; 32768us; 42us; 1048us; 43us; 1051us; 124us; 1052us; 130us; 1053us; 136us; 1054us; 5us; 17141us; 42us; 1048us; 43us; 1051us; 124us; 1052us; 130us; 1053us; 136us; 1054us; 0us; 17119us; 0us; 17120us; 0us; 17121us; 0us; 17122us; 0us; 17123us; 3us; 32768us; 44us; 1055us; 45us; 1058us; 172us; 1059us; 3us; 17142us; 44us; 1055us; 45us; 1058us; 172us; 1059us; 0us; 17124us; 0us; 17125us; 0us; 17126us; 3us; 32768us; 73us; 1063us; 74us; 1060us; 75us; 1062us; 0us; 17127us; 0us; 17128us; 0us; 17129us; 3us; 32768us; 107us; 1067us; 108us; 1064us; 109us; 1066us; 0us; 17130us; 0us; 17131us; 0us; 17132us; 3us; 32768us; 14us; 1071us; 15us; 1068us; 16us; 1070us; 0us; 17133us; 0us; 17134us; 0us; 17135us; 0us; 17136us; 0us; 17137us; 0us; 17138us; 0us; 17139us; 0us; 17140us; 0us; 17141us; 0us; 17142us; 0us; 17143us; 0us; 17144us; 0us; 17145us; 0us; 17146us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 17us; 18us; 19us; 20us; 21us; 25us; 27us; 41us; 42us; 44us; 45us; 48us; 49us; 51us; 52us; 53us; 68us; 69us; 81us; 87us; 89us; 90us; 91us; 107us; 108us; 109us; 110us; 111us; 126us; 127us; 139us; 140us; 153us; 154us; 164us; 165us; 166us; 167us; 169us; 170us; 187us; 190us; 199us; 201us; 202us; 204us; 206us; 207us; 208us; 209us; 210us; 222us; 223us; 227us; 242us; 243us; 248us; 252us; 267us; 268us; 272us; 277us; 280us; 295us; 296us; 298us; 299us; 301us; 302us; 304us; 305us; 308us; 309us; 310us; 314us; 316us; 317us; 321us; 323us; 324us; 329us; 331us; 332us; 333us; 334us; 335us; 336us; 337us; 341us; 343us; 344us; 346us; 348us; 349us; 350us; 352us; 354us; 358us; 360us; 361us; 363us; 365us; 369us; 371us; 372us; 373us; 374us; 379us; 385us; 386us; 387us; 388us; 389us; 394us; 395us; 398us; 403us; 404us; 424us; 426us; 428us; 470us; 471us; 492us; 494us; 496us; 538us; 539us; 541us; 583us; 584us; 588us; 590us; 592us; 593us; 595us; 600us; 601us; 602us; 608us; 612us; 613us; 618us; 619us; 620us; 625us; 631us; 632us; 633us; 641us; 646us; 647us; 665us; 666us; 668us; 670us; 712us; 713us; 716us; 718us; 720us; 721us; 723us; 725us; 726us; 728us; 729us; 730us; 750us; 752us; 753us; 755us; 756us; 757us; 759us; 761us; 762us; 765us; 771us; 772us; 773us; 777us; 778us; 780us; 781us; 785us; 786us; 791us; 795us; 796us; 800us; 801us; 819us; 821us; 822us; 840us; 842us; 843us; 844us; 874us; 878us; 879us; 881us; 885us; 886us; 889us; 890us; 891us; 909us; 910us; 911us; 918us; 935us; 936us; 939us; 942us; 943us; 944us; 945us; 947us; 949us; 967us; 968us; 970us; 971us; 972us; 974us; 977us; 978us; 1020us; 1021us; 1023us; 1026us; 1030us; 1031us; 1073us; 1077us; 1078us; 1079us; 1080us; 1082us; 1083us; 1086us; 1088us; 1089us; 1090us; 1091us; 1093us; 1113us; 1115us; 1119us; 1162us; 1163us; 1164us; 1165us; 1206us; 1212us; 1213us; 1214us; 1215us; 1216us; 1218us; 1219us; 1222us; 1225us; 1267us; 1268us; 1271us; 1272us; 1273us; 1276us; 1294us; 1295us; 1296us; 1297us; 1298us; 1299us; 1300us; 1301us; 1302us; 1322us; 1324us; 1367us; 1368us; 1369us; 1390us; 1393us; 1437us; 1441us; 1442us; 1443us; 1445us; 1446us; 1447us; 1449us; 1450us; 1452us; 1453us; 1455us; 1457us; 1458us; 1464us; 1470us; 1474us; 1476us; 1479us; 1482us; 1484us; 1486us; 1488us; 1489us; 1509us; 1529us; 1531us; 1532us; 1533us; 1553us; 1573us; 1593us; 1613us; 1639us; 1661us; 1662us; 1682us; 1683us; 1703us; 1704us; 1705us; 1727us; 1728us; 1748us; 1749us; 1769us; 1770us; 1774us; 1778us; 1779us; 1799us; 1801us; 1802us; 1822us; 1824us; 1825us; 1826us; 1827us; 1828us; 1829us; 1830us; 1831us; 1879us; 1885us; 1886us; 1887us; 1891us; 1892us; 1893us; 1900us; 1905us; 1908us; 1912us; 1916us; 1919us; 1922us; 1929us; 1938us; 1954us; 1962us; 1964us; 1965us; 1985us; 1987us; 1989us; 2007us; 2008us; 2028us; 2029us; 2049us; 2069us; 2089us; 2109us; 2110us; 2113us; 2114us; 2118us; 2119us; 2122us; 2142us; 2143us; 2163us; 2164us; 2205us; 2211us; 2212us; 2213us; 2214us; 2255us; 2259us; 2260us; 2284us; 2286us; 2287us; 2289us; 2307us; 2308us; 2336us; 2365us; 2394us; 2435us; 2436us; 2477us; 2478us; 2480us; 2521us; 2525us; 2526us; 2570us; 2571us; 2574us; 2577us; 2580us; 2583us; 2586us; 2588us; 2590us; 2592us; 2596us; 2600us; 2604us; 2605us; 2647us; 2650us; 2652us; 2678us; 2680us; 2681us; 2682us; 2724us; 2727us; 2729us; 2755us; 2757us; 2758us; 2759us; 2800us; 2824us; 2826us; 2867us; 2873us; 2874us; 2875us; 2917us; 2921us; 2923us; 2924us; 2925us; 2926us; 2927us; 2929us; 2971us; 2972us; 2973us; 3017us; 3018us; 3019us; 3062us; 3063us; 3064us; 3065us; 3107us; 3111us; 3112us; 3154us; 3158us; 3159us; 3160us; 3201us; 3206us; 3207us; 3208us; 3251us; 3279us; 3280us; 3281us; 3282us; 3325us; 3353us; 3396us; 3401us; 3402us; 3403us; 3406us; 3407us; 3408us; 3409us; 3410us; 3437us; 3448us; 3497us; 3507us; 3508us; 3509us; 3510us; 3511us; 3512us; 3517us; 3561us; 3566us; 3567us; 3568us; 3569us; 3570us; 3571us; 3613us; 3616us; 3617us; 3618us; 3619us; 3620us; 3622us; 3623us; 3647us; 3666us; 3685us; 3694us; 3713us; 3730us; 3747us; 3756us; 3765us; 3774us; 3783us; 3792us; 3801us; 3810us; 3812us; 3820us; 3825us; 3830us; 3832us; 3834us; 3836us; 3860us; 3884us; 3908us; 3936us; 3958us; 3980us; 4004us; 4028us; 4053us; 4078us; 4102us; 4128us; 4152us; 4170us; 4171us; 4212us; 4214us; 4256us; 4298us; 4340us; 4382us; 4424us; 4466us; 4508us; 4550us; 4592us; 4634us; 4676us; 4718us; 4760us; 4802us; 4844us; 4886us; 4928us; 4970us; 5012us; 5054us; 5055us; 5056us; 5057us; 5058us; 5059us; 5060us; 5061us; 5062us; 5063us; 5064us; 5065us; 5066us; 5067us; 5068us; 5069us; 5070us; 5071us; 5072us; 5073us; 5074us; 5075us; 5076us; 5117us; 5121us; 5122us; 5144us; 5145us; 5167us; 5171us; 5172us; 5173us; 5174us; 5195us; 5196us; 5197us; 5198us; 5199us; 5202us; 5205us; 5226us; 5227us; 5228us; 5229us; 5230us; 5271us; 5312us; 5313us; 5317us; 5318us; 5359us; 5361us; 5402us; 5408us; 5409us; 5410us; 5451us; 5453us; 5494us; 5500us; 5501us; 5502us; 5543us; 5544us; 5545us; 5586us; 5627us; 5654us; 5681us; 5682us; 5709us; 5736us; 5737us; 5764us; 5791us; 5792us; 5810us; 5813us; 5829us; 5830us; 5831us; 5832us; 5859us; 5860us; 5883us; 5909us; 5910us; 5916us; 5938us; 5944us; 5950us; 5953us; 5955us; 5961us; 5983us; 6005us; 6007us; 6008us; 6030us; 6052us; 6060us; 6061us; 6063us; 6071us; 6072us; 6076us; 6080us; 6081us; 6084us; 6085us; 6086us; 6087us; 6130us; 6134us; 6135us; 6136us; 6137us; 6138us; 6139us; 6140us; 6141us; 6142us; 6205us; 6209us; 6210us; 6255us; 6259us; 6260us; 6261us; 6262us; 6263us; 6265us; 6266us; 6307us; 6348us; 6349us; 6350us; 6351us; 6352us; 6353us; 6354us; 6355us; 6356us; 6357us; 6400us; 6404us; 6405us; 6406us; 6408us; 6409us; 6410us; 6453us; 6457us; 6458us; 6459us; 6460us; 6461us; 6511us; 6582us; 6583us; 6593us; 6594us; 6595us; 6596us; 6597us; 6598us; 6599us; 6600us; 6601us; 6602us; 6603us; 6651us; 6657us; 6658us; 6659us; 6660us; 6661us; 6662us; 6663us; 6664us; 6665us; 6666us; 6667us; 6710us; 6751us; 6752us; 6793us; 6794us; 6842us; 6843us; 6844us; 6845us; 6886us; 6927us; 6928us; 6945us; 6948us; 6963us; 6964us; 6967us; 6968us; 7010us; 7011us; 7014us; 7015us; 7017us; 7059us; 7060us; 7063us; 7064us; 7069us; 7070us; 7073us; 7074us; 7081us; 7083us; 7084us; 7085us; 7088us; 7090us; 7091us; 7092us; 7097us; 7099us; 7101us; 7102us; 7103us; 7105us; 7106us; 7107us; 7116us; 7165us; 7166us; 7167us; 7168us; 7169us; 7170us; 7171us; 7172us; 7190us; 7191us; 7193us; 7211us; 7212us; 7214us; 7232us; 7233us; 7235us; 7253us; 7254us; 7261us; 7278us; 7284us; 7286us; 7288us; 7305us; 7311us; 7313us; 7331us; 7332us; 7340us; 7357us; 7358us; 7375us; 7376us; 7393us; 7394us; 7402us; 7419us; 7420us; 7437us; 7438us; 7445us; 7462us; 7463us; 7465us; 7467us; 7472us; 7474us; 7475us; 7492us; 7499us; 7500us; 7506us; 7507us; 7530us; 7532us; 7534us; 7535us; 7558us; 7559us; 7582us; 7601us; 7620us; 7624us; 7628us; 7632us; 7636us; 7637us; 7660us; 7661us; 7664us; 7665us; 7668us; 7669us; 7672us; 7673us; 7675us; 7676us; 7678us; 7696us; 7697us; 7699us; 7704us; 7722us; 7723us; 7725us; 7749us; 7752us; 7755us; 7756us; 7779us; 7781us; 7783us; 7784us; 7807us; 7808us; 7809us; 7810us; 7816us; 7817us; 7818us; 7819us; 7820us; 7821us; 7822us; 7826us; 7827us; 7828us; 7836us; 7837us; 7838us; 7840us; 7841us; 7862us; 7864us; 7889us; 7890us; 7891us; 7892us; 7893us; 7897us; 7898us; 7899us; 7900us; 7901us; 7902us; 7903us; 7911us; 7915us; 7916us; 7918us; 7919us; 7921us; 7928us; 7934us; 7935us; 7937us; 7940us; 7941us; 7943us; 7944us; 7945us; 7951us; 7952us; 7953us; 7954us; 7955us; 7956us; 7963us; 7970us; 7977us; 7979us; 7980us; 7981us; 7983us; 7984us; 7985us; 7986us; 7987us; 7988us; 7997us; 7998us; 7999us; 8027us; 8031us; 8032us; 8036us; 8037us; 8038us; 8040us; 8046us; 8047us; 8049us; 8053us; 8054us; 8055us; 8056us; 8057us; 8058us; 8059us; 8060us; 8061us; 8062us; 8063us; 8064us; 8065us; 8066us; 8067us; 8068us; 8069us; 8070us; 8071us; 8072us; 8073us; 8074us; 8075us; 8076us; 8077us; 8079us; 8080us; 8082us; 8083us; 8084us; 8086us; 8087us; 8088us; 8089us; 8090us; 8092us; 8093us; 8094us; 8100us; 8101us; 8102us; 8103us; 8104us; 8105us; 8106us; 8110us; 8111us; 8113us; 8115us; 8116us; 8117us; 8118us; 8119us; 8120us; 8121us; 8122us; 8123us; 8124us; 8125us; 8126us; 8127us; 8128us; 8129us; 8130us; 8131us; 8132us; 8133us; 8139us; 8145us; 8146us; 8147us; 8148us; 8149us; 8150us; 8154us; 8158us; 8159us; 8160us; 8161us; 8165us; 8166us; 8167us; 8168us; 8172us; 8173us; 8174us; 8175us; 8179us; 8180us; 8181us; 8182us; 8183us; 8184us; 8185us; 8186us; 8187us; 8188us; 8189us; 8190us; 8191us; 8192us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 4us; 4us; 1us; 2us; 4us; 3us; 3us; 1us; 1us; 0us; 1us; 2us; 3us; 2us; 1us; 2us; 3us; 1us; 1us; 0us; 1us; 2us; 5us; 4us; 4us; 2us; 1us; 3us; 3us; 4us; 6us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 0us; 3us; 0us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 2us; 0us; 2us; 3us; 3us; 1us; 3us; 1us; 3us; 0us; 3us; 6us; 6us; 1us; 1us; 3us; 3us; 1us; 1us; 2us; 0us; 3us; 5us; 5us; 4us; 1us; 2us; 4us; 0us; 2us; 3us; 1us; 0us; 3us; 0us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 1us; 1us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 4us; 4us; 4us; 4us; 2us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 2us; 1us; 2us; 4us; 4us; 1us; 3us; 4us; 2us; 2us; 3us; 1us; 3us; 1us; 3us; 2us; 1us; 4us; 2us; 2us; 3us; 2us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 0us; 1us; 1us; 6us; 6us; 5us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 5us; 5us; 5us; 4us; 4us; 3us; 1us; 3us; 1us; 1us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 4us; 4us; 1us; 0us; 2us; 3us; 3us; 1us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 3us; 3us; 4us; 4us; 3us; 3us; 4us; 4us; 2us; 4us; 4us; 3us; 4us; 1us; 1us; 1us; 3us; 3us; 2us; 2us; 3us; 3us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 2us; 5us; 5us; 5us; 3us; 2us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 2us; 4us; 3us; 4us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 3us; 2us; 2us; 0us; 2us; 1us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 4us; 4us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 1us; 1us; 0us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 0us; 1us; 1us; 3us; 5us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 1us; 3us; 5us; 2us; 0us; 0us; 1us; 6us; 5us; 1us; 2us; 5us; 5us; 4us; 6us; 1us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 4us; 1us; 3us; 4us; 1us; 3us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 3us; 1us; 1us; 3us; 1us; 3us; 2us; 3us; 2us; 4us; 1us; 2us; 3us; 4us; 5us; 4us; 3us; 0us; 1us; 3us; 4us; 2us; 3us; 2us; 4us; 1us; 1us; 3us; 4us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 3us; 2us; 3us; 1us; 2us; 6us; 6us; 4us; 3us; 3us; 2us; 2us; 1us; 1us; 3us; 3us; 1us; 3us; 1us; 3us; 4us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 2us; 2us; 0us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 8us; 8us; 8us; 8us; 8us; 8us; 9us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 19us; 20us; 21us; 22us; 22us; 22us; 23us; 23us; 23us; 24us; 24us; 24us; 25us; 25us; 25us; 25us; 26us; 26us; 27us; 28us; 28us; 29us; 30us; 30us; 31us; 32us; 33us; 33us; 33us; 34us; 34us; 34us; 35us; 36us; 37us; 38us; 39us; 39us; 40us; 41us; 41us; 42us; 42us; 43us; 44us; 44us; 45us; 45us; 46us; 47us; 47us; 48us; 48us; 49us; 49us; 50us; 51us; 52us; 52us; 53us; 53us; 54us; 55us; 56us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 58us; 58us; 58us; 59us; 59us; 60us; 61us; 61us; 62us; 62us; 62us; 63us; 63us; 64us; 64us; 64us; 65us; 65us; 65us; 66us; 66us; 67us; 68us; 68us; 68us; 69us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 78us; 78us; 78us; 78us; 79us; 79us; 80us; 81us; 81us; 82us; 82us; 83us; 83us; 83us; 84us; 84us; 84us; 85us; 86us; 86us; 87us; 88us; 88us; 89us; 89us; 90us; 90us; 90us; 90us; 90us; 90us; 91us; 91us; 91us; 91us; 91us; 91us; 91us; 91us; 92us; 92us; 93us; 94us; 95us; 95us; 95us; 95us; 95us; 95us; 96us; 96us; 97us; 97us; 98us; 98us; 98us; 98us; 99us; 100us; 100us; 100us; 100us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 102us; 102us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 104us; 104us; 105us; 105us; 106us; 107us; 107us; 108us; 109us; 109us; 109us; 110us; 111us; 111us; 111us; 112us; 112us; 113us; 113us; 114us; 114us; 115us; 115us; 115us; 115us; 115us; 115us; 116us; 116us; 117us; 117us; 117us; 117us; 118us; 118us; 118us; 118us; 119us; 119us; 119us; 120us; 120us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 121us; 122us; 122us; 123us; 123us; 123us; 124us; 124us; 124us; 124us; 125us; 126us; 126us; 126us; 126us; 126us; 127us; 127us; 128us; 129us; 130us; 131us; 131us; 131us; 132us; 132us; 132us; 132us; 132us; 132us; 133us; 133us; 134us; 134us; 135us; 135us; 135us; 135us; 135us; 135us; 135us; 135us; 136us; 136us; 137us; 137us; 138us; 138us; 138us; 138us; 138us; 138us; 138us; 138us; 138us; 138us; 138us; 138us; 138us; 138us; 138us; 139us; 139us; 139us; 139us; 139us; 139us; 139us; 139us; 139us; 139us; 140us; 140us; 140us; 140us; 141us; 141us; 141us; 141us; 141us; 141us; 141us; 141us; 142us; 142us; 142us; 142us; 143us; 143us; 143us; 143us; 144us; 144us; 144us; 144us; 144us; 144us; 144us; 144us; 144us; 145us; 146us; 146us; 147us; 147us; 148us; 148us; 148us; 148us; 148us; 149us; 149us; 150us; 151us; 151us; 152us; 152us; 153us; 153us; 153us; 154us; 155us; 155us; 155us; 155us; 156us; 156us; 156us; 156us; 157us; 157us; 157us; 158us; 159us; 159us; 160us; 160us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 162us; 162us; 163us; 163us; 163us; 163us; 164us; 164us; 165us; 165us; 166us; 166us; 166us; 166us; 166us; 167us; 167us; 168us; 169us; 170us; 170us; 171us; 171us; 172us; 172us; 173us; 173us; 174us; 174us; 174us; 174us; 174us; 174us; 175us; 175us; 176us; 176us; 176us; 176us; 177us; 177us; 177us; 178us; 178us; 179us; 180us; 180us; 181us; 181us; 181us; 181us; 181us; 181us; 182us; 182us; 182us; 182us; 183us; 184us; 184us; 185us; 185us; 185us; 186us; 186us; 186us; 186us; 186us; 187us; 187us; 187us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 189us; 189us; 190us; 190us; 190us; 190us; 190us; 190us; 190us; 191us; 192us; 193us; 193us; 194us; 194us; 195us; 195us; 195us; 195us; 196us; 196us; 197us; 197us; 197us; 197us; 198us; 198us; 199us; 200us; 201us; 201us; 201us; 201us; 201us; 202us; 202us; 202us; 202us; 202us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 204us; 205us; 205us; 206us; 206us; 207us; 207us; 207us; 207us; 207us; 208us; 209us; 209us; 209us; 210us; 210us; 211us; 211us; 212us; 212us; 213us; 213us; 214us; 214us; 215us; 215us; 215us; 215us; 216us; 216us; 216us; 217us; 217us; 217us; 217us; 218us; 218us; 219us; 219us; 220us; 220us; 221us; 221us; 222us; 222us; 223us; 223us; 224us; 224us; 225us; 225us; 226us; 226us; 227us; 227us; 228us; 228us; 229us; 229us; 230us; 230us; 231us; 231us; 232us; 233us; 233us; 233us; 234us; 234us; 235us; 235us; 235us; 235us; 235us; 236us; 236us; 236us; 237us; 237us; 237us; 238us; 238us; 238us; 239us; 239us; 239us; 240us; 240us; 240us; 240us; 240us; 241us; 241us; 241us; 241us; 241us; 241us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 16386us; 16387us; 65535us; 65535us; 65535us; 16389us; 65535us; 16390us; 65535us; 16391us; 65535us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 16396us; 16397us; 65535us; 16398us; 16399us; 16400us; 16402us; 65535us; 16403us; 65535us; 16404us; 65535us; 16405us; 65535us; 16408us; 16409us; 16410us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 16415us; 16416us; 16417us; 16418us; 65535us; 16419us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 65535us; 65535us; 16422us; 65535us; 16423us; 65535us; 16424us; 65535us; 16425us; 65535us; 16426us; 16427us; 65535us; 65535us; 16428us; 65535us; 65535us; 16429us; 65535us; 65535us; 16431us; 16432us; 16449us; 16450us; 16451us; 16461us; 65535us; 65535us; 16462us; 65535us; 65535us; 16464us; 65535us; 65535us; 65535us; 65535us; 65535us; 16465us; 65535us; 65535us; 65535us; 65535us; 16466us; 16467us; 16468us; 65535us; 65535us; 16469us; 16470us; 16471us; 16472us; 65535us; 16473us; 65535us; 65535us; 16475us; 65535us; 65535us; 65535us; 65535us; 16476us; 65535us; 65535us; 65535us; 65535us; 16477us; 65535us; 65535us; 16478us; 65535us; 65535us; 65535us; 16481us; 65535us; 65535us; 16484us; 16485us; 65535us; 65535us; 16487us; 65535us; 16498us; 16499us; 65535us; 65535us; 16500us; 16501us; 65535us; 65535us; 16503us; 65535us; 16504us; 65535us; 65535us; 65535us; 16505us; 65535us; 65535us; 65535us; 16506us; 65535us; 65535us; 16507us; 65535us; 16508us; 65535us; 65535us; 65535us; 16509us; 65535us; 16510us; 16511us; 65535us; 65535us; 16513us; 65535us; 65535us; 16514us; 16515us; 65535us; 16516us; 65535us; 16522us; 65535us; 16523us; 65535us; 65535us; 16525us; 65535us; 16527us; 65535us; 65535us; 16528us; 65535us; 65535us; 16529us; 16530us; 65535us; 65535us; 16531us; 65535us; 65535us; 16532us; 65535us; 16533us; 16534us; 65535us; 16535us; 16536us; 65535us; 65535us; 16537us; 65535us; 65535us; 16539us; 16540us; 16541us; 65535us; 65535us; 65535us; 16542us; 65535us; 16543us; 16544us; 65535us; 65535us; 16545us; 65535us; 16546us; 65535us; 65535us; 65535us; 16547us; 65535us; 65535us; 16548us; 16553us; 16554us; 65535us; 16555us; 65535us; 65535us; 16556us; 16558us; 16559us; 65535us; 65535us; 65535us; 65535us; 65535us; 16560us; 16561us; 16562us; 65535us; 65535us; 16563us; 16564us; 16565us; 65535us; 65535us; 16567us; 65535us; 65535us; 65535us; 16569us; 65535us; 16570us; 16571us; 65535us; 65535us; 16572us; 16573us; 16574us; 16575us; 16576us; 16577us; 16578us; 16579us; 65535us; 65535us; 65535us; 16580us; 16581us; 65535us; 65535us; 65535us; 65535us; 16582us; 16583us; 65535us; 16584us; 16585us; 65535us; 16586us; 65535us; 16587us; 65535us; 65535us; 16589us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16592us; 65535us; 65535us; 65535us; 65535us; 16597us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16602us; 65535us; 16603us; 65535us; 16604us; 16605us; 65535us; 16607us; 65535us; 16608us; 65535us; 16609us; 65535us; 65535us; 16611us; 65535us; 65535us; 16612us; 65535us; 65535us; 16613us; 16614us; 16615us; 16616us; 16617us; 16618us; 16619us; 65535us; 65535us; 16620us; 16621us; 65535us; 65535us; 16623us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16626us; 65535us; 65535us; 65535us; 65535us; 16630us; 65535us; 16632us; 65535us; 65535us; 65535us; 65535us; 16637us; 65535us; 16638us; 65535us; 16639us; 65535us; 65535us; 16642us; 65535us; 16643us; 65535us; 65535us; 16645us; 16646us; 16647us; 65535us; 65535us; 16648us; 65535us; 65535us; 16650us; 65535us; 65535us; 16652us; 65535us; 65535us; 65535us; 65535us; 16654us; 65535us; 16657us; 65535us; 65535us; 65535us; 16658us; 65535us; 16660us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16661us; 65535us; 65535us; 65535us; 65535us; 65535us; 16664us; 16665us; 65535us; 65535us; 65535us; 65535us; 65535us; 16668us; 16669us; 65535us; 65535us; 65535us; 65535us; 65535us; 16671us; 16672us; 65535us; 65535us; 65535us; 16674us; 16675us; 16676us; 16677us; 65535us; 65535us; 16678us; 16679us; 65535us; 16680us; 16681us; 65535us; 16682us; 16683us; 16684us; 65535us; 65535us; 16685us; 65535us; 65535us; 16686us; 16687us; 65535us; 65535us; 16688us; 16689us; 65535us; 65535us; 65535us; 16692us; 16693us; 65535us; 65535us; 65535us; 65535us; 16694us; 16695us; 65535us; 16696us; 16697us; 16698us; 16699us; 65535us; 65535us; 65535us; 65535us; 16700us; 16701us; 16702us; 16703us; 16704us; 65535us; 65535us; 65535us; 16705us; 16706us; 16707us; 16708us; 16709us; 65535us; 65535us; 16710us; 16711us; 16712us; 65535us; 65535us; 16714us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16715us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16738us; 16739us; 16740us; 16741us; 16742us; 16743us; 16744us; 16745us; 16746us; 16747us; 16748us; 16749us; 16750us; 16751us; 16752us; 16753us; 16754us; 16755us; 16756us; 16757us; 16758us; 16759us; 65535us; 65535us; 16760us; 65535us; 16761us; 65535us; 65535us; 16762us; 16763us; 16764us; 65535us; 16765us; 16766us; 16767us; 16768us; 65535us; 65535us; 65535us; 16770us; 16771us; 16772us; 16773us; 65535us; 65535us; 16776us; 65535us; 16778us; 65535us; 65535us; 65535us; 65535us; 16780us; 16781us; 65535us; 65535us; 65535us; 65535us; 16784us; 16785us; 65535us; 16786us; 16787us; 65535us; 65535us; 65535us; 65535us; 16792us; 65535us; 65535us; 16793us; 65535us; 65535us; 16794us; 65535us; 65535us; 65535us; 16795us; 16796us; 16797us; 65535us; 16798us; 65535us; 65535us; 16800us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16806us; 65535us; 65535us; 65535us; 16808us; 65535us; 65535us; 16809us; 65535us; 65535us; 16810us; 65535us; 16811us; 16812us; 16813us; 65535us; 65535us; 16814us; 16815us; 16816us; 16817us; 16818us; 16819us; 16820us; 16822us; 65535us; 65535us; 16823us; 65535us; 65535us; 16824us; 16825us; 16826us; 16827us; 65535us; 16828us; 65535us; 65535us; 16832us; 16833us; 16834us; 16835us; 16836us; 16837us; 16838us; 16839us; 16840us; 65535us; 65535us; 16841us; 16842us; 65535us; 16843us; 16844us; 65535us; 65535us; 16845us; 16846us; 16847us; 16848us; 65535us; 65535us; 16849us; 65535us; 16850us; 16851us; 16852us; 65535us; 16853us; 16854us; 16855us; 16856us; 16857us; 16858us; 65535us; 65535us; 16863us; 16864us; 16865us; 16866us; 16867us; 16868us; 16869us; 16871us; 16873us; 16874us; 65535us; 65535us; 16877us; 65535us; 16878us; 65535us; 16880us; 16881us; 16882us; 65535us; 65535us; 16894us; 65535us; 65535us; 65535us; 65535us; 65535us; 16895us; 65535us; 65535us; 65535us; 16896us; 65535us; 65535us; 65535us; 65535us; 16899us; 65535us; 65535us; 65535us; 16900us; 65535us; 65535us; 16901us; 65535us; 65535us; 65535us; 16902us; 16903us; 65535us; 65535us; 65535us; 16907us; 16908us; 65535us; 16910us; 16911us; 65535us; 65535us; 16913us; 16915us; 16917us; 16918us; 16919us; 16920us; 16921us; 65535us; 16923us; 65535us; 65535us; 16924us; 65535us; 65535us; 16926us; 65535us; 65535us; 16928us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16936us; 65535us; 65535us; 16938us; 65535us; 16939us; 65535us; 16940us; 65535us; 65535us; 16942us; 65535us; 16943us; 65535us; 65535us; 16945us; 65535us; 65535us; 65535us; 65535us; 16948us; 65535us; 65535us; 16950us; 65535us; 16951us; 65535us; 65535us; 65535us; 16952us; 65535us; 16953us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16954us; 65535us; 16955us; 65535us; 16956us; 65535us; 16957us; 65535us; 16958us; 65535us; 16959us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16961us; 65535us; 65535us; 65535us; 65535us; 16964us; 65535us; 65535us; 65535us; 16965us; 65535us; 16970us; 16974us; 16975us; 65535us; 16976us; 16977us; 16978us; 16979us; 16980us; 16981us; 65535us; 16982us; 16983us; 65535us; 16984us; 16985us; 65535us; 16986us; 65535us; 65535us; 65535us; 65535us; 16987us; 16988us; 16989us; 65535us; 16990us; 16991us; 16992us; 16993us; 16994us; 16995us; 65535us; 65535us; 16996us; 65535us; 16997us; 65535us; 65535us; 65535us; 16999us; 65535us; 65535us; 17001us; 65535us; 17002us; 17003us; 65535us; 17005us; 17006us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17010us; 17011us; 65535us; 17012us; 17013us; 17014us; 17015us; 17016us; 65535us; 17017us; 17018us; 65535us; 65535us; 17019us; 65535us; 17020us; 17021us; 65535us; 65535us; 17022us; 65535us; 65535us; 17023us; 17024us; 17025us; 17026us; 17027us; 17028us; 17029us; 17030us; 17031us; 17032us; 17033us; 17034us; 17035us; 17036us; 17037us; 17038us; 17039us; 17040us; 17041us; 17042us; 17043us; 17044us; 17045us; 17046us; 65535us; 17048us; 65535us; 17049us; 17050us; 65535us; 17051us; 17052us; 17053us; 17054us; 65535us; 17056us; 17057us; 65535us; 17058us; 17059us; 17060us; 17061us; 17062us; 17063us; 65535us; 17065us; 65535us; 65535us; 17076us; 17077us; 17078us; 17079us; 17080us; 17085us; 17089us; 17091us; 17093us; 17097us; 17099us; 17101us; 17103us; 17104us; 17105us; 17106us; 17114us; 17115us; 65535us; 65535us; 17119us; 17120us; 17121us; 17122us; 17123us; 65535us; 65535us; 17124us; 17125us; 17126us; 65535us; 17127us; 17128us; 17129us; 65535us; 17130us; 17131us; 17132us; 65535us; 17133us; 17134us; 17135us; 17136us; 17137us; 17138us; 17139us; 17140us; 17141us; 17142us; 17143us; 17144us; 17145us; 17146us; |]
let _fsyacc_reductions ()  =    [| 
# 2522 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Program)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 2531 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'casanovaModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 440 "Parser.fsy"
                                                                   _1 
                   )
# 440 "Parser.fsy"
                 : Program));
# 2542 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 444 "Parser.fsy"
                                  _1 
                   )
# 444 "Parser.fsy"
                 : 'stringOrKeywordString));
# 2553 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 445 "Parser.fsy"
                                          _1 
                   )
# 445 "Parser.fsy"
                 : 'stringOrKeywordString));
# 2564 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 450 "Parser.fsy"
                                               _2 
                   )
# 450 "Parser.fsy"
                 : 'cnvModuleIntro));
# 2576 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 454 "Parser.fsy"
                           let m = rhs parseState 1
                           {ModuleStatement = _1; WorldOrEntityDecls = []; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 454 "Parser.fsy"
                 : 'casanovaModuleImpl));
# 2589 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 458 "Parser.fsy"
                           let m = rhs parseState 1
                           {ModuleStatement = LongIdentWithDots([Ident("internal_module", Position.Empty)], []); 
                            WorldOrEntityDecls = _1; 
                            Range = m;
                            ReferencedLibraries = Seq.empty} 
                   )
# 458 "Parser.fsy"
                 : 'casanovaModuleImpl));
# 2605 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 466 "Parser.fsy"
                           let m2 = rhs parseState 1
                           let m = (m2, _2) ||> unionRangeWithListBy (fun modu -> modu.Range) 
                           {ModuleStatement = _1; WorldOrEntityDecls = _2; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 466 "Parser.fsy"
                 : 'casanovaModuleImpl));
# 2620 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 471 "Parser.fsy"
                           let m2 = rhs parseState 1
                           let m = (m2, _2) ||> unionRangeWithListBy (fun modu -> modu.Range) 
                           {ModuleStatement = _1; WorldOrEntityDecls = _2; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 471 "Parser.fsy"
                 : 'casanovaModuleImpl));
# 2635 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 476 "Parser.fsy"
                           let m2 = rhs parseState 1
                           let m = (m2, _2) ||> unionRangeWithListBy (fun modu -> modu.Range) 
                           {ModuleStatement = _1; WorldOrEntityDecls = _2; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 476 "Parser.fsy"
                 : 'casanovaModuleImpl));
# 2650 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 481 "Parser.fsy"
                           errorR(Error(FSComp.SR.buildMultiFileRequiresNamespaceOrModule(),rhs parseState 1))
                           Program.Empty() 
                   )
# 481 "Parser.fsy"
                 : 'casanovaModuleImpl));
# 2662 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 487 "Parser.fsy"
                            errorR(Error(FSComp.SR.buildMultiFileRequiresNamespaceOrModule(),rhs parseState 1))
                            Program.Empty() 
                   )
# 487 "Parser.fsy"
                 : 'casanovaModuleImpl));
# 2674 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 493 "Parser.fsy"
                            _2 
                   )
# 493 "Parser.fsy"
                 : SynModuleDecl list));
# 2687 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 495 "Parser.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              _2 
                            
                   )
# 495 "Parser.fsy"
                 : SynModuleDecl list));
# 2702 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 500 "Parser.fsy"
                              
                              [] 
                            
                   )
# 500 "Parser.fsy"
                 : SynModuleDecl list));
# 2715 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 504 "Parser.fsy"
                            _1 
                   )
# 504 "Parser.fsy"
                 : SynModuleDecl list));
# 2726 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 508 "Parser.fsy"
                            _1 
                   )
# 508 "Parser.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 2737 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 510 "Parser.fsy"
                            [] 
                   )
# 510 "Parser.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 2747 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 515 "Parser.fsy"
                             _1 
                   )
# 515 "Parser.fsy"
                 : 'moduleDefnsOrExpr));
# 2758 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 519 "Parser.fsy"
                             _1 @ _2 
                   )
# 519 "Parser.fsy"
                 : 'moduleDefns));
# 2770 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 521 "Parser.fsy"
                              _1 @ _3 
                   )
# 521 "Parser.fsy"
                 : 'moduleDefns));
# 2783 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 523 "Parser.fsy"
                             _2 
                   )
# 523 "Parser.fsy"
                 : 'moduleDefns));
# 2794 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 526 "Parser.fsy"
                             _1 
                   )
# 526 "Parser.fsy"
                 : 'moduleDefns));
# 2805 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 528 "Parser.fsy"
                             _1 
                   )
# 528 "Parser.fsy"
                 : 'moduleDefns));
# 2817 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 530 "Parser.fsy"
                             _3 
                   )
# 530 "Parser.fsy"
                 : 'moduleDefns));
# 2829 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 534 "Parser.fsy"
                             _1  
                   )
# 534 "Parser.fsy"
                 : 'moduleDefnOrDirective));
# 2840 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 536 "Parser.fsy"
                                                                     _1 
                   )
# 536 "Parser.fsy"
                 : 'opt_attributes));
# 2851 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 537 "Parser.fsy"
                                                                     [] 
                   )
# 537 "Parser.fsy"
                 : 'opt_attributes));
# 2861 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 540 "Parser.fsy"
                            _1 
                   )
# 540 "Parser.fsy"
                 : 'attributes));
# 2872 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 542 "Parser.fsy"
                            _1 @ _2 
                   )
# 542 "Parser.fsy"
                 : 'attributes));
# 2884 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 545 "Parser.fsy"
                                                                                                     _2 
                   )
# 545 "Parser.fsy"
                 : 'attributeList));
# 2897 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 546 "Parser.fsy"
                                                                            [] 
                   )
# 546 "Parser.fsy"
                 : 'attributeList));
# 2908 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 548 "Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             _2 
                   )
# 548 "Parser.fsy"
                 : 'attributeList));
# 2922 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 551 "Parser.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             [] 
                   )
# 551 "Parser.fsy"
                 : 'attributeList));
# 2934 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 556 "Parser.fsy"
                            [_1] 
                   )
# 556 "Parser.fsy"
                 : 'attributeListElements));
# 2945 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 558 "Parser.fsy"
                            _1 @ [_3] 
                   )
# 558 "Parser.fsy"
                 : 'attributeListElements));
# 2958 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 562 "Parser.fsy"
                            let arg = match _3 with None -> mkSynUnit _1.Range | Some e -> e 
                            ({ TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=_1.Range } : SynAttribute) 
                   )
# 562 "Parser.fsy"
                 : 'attribute));
# 2972 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 565 "Parser.fsy"
                            let arg = match _4 with None -> mkSynUnit _2.Range | Some e -> e 
                            ({ TypeName=_2; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_2.Range } : SynAttribute) 
                   )
# 565 "Parser.fsy"
                 : 'attribute));
# 2987 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 568 "Parser.fsy"
                            let arg = match _6 with None -> mkSynUnit _3.Range | Some e -> e 
                            ({ TypeName=_3; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_3.Range } : SynAttribute) 
                   )
# 568 "Parser.fsy"
                 : 'attribute));
# 3003 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 572 "Parser.fsy"
                                                Some(ident("module",(rhs parseState 1))) 
                   )
# 572 "Parser.fsy"
                 : 'attributeTarget));
# 3014 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 "Parser.fsy"
                                              Some(ident("type",(rhs parseState 1))) 
                   )
# 573 "Parser.fsy"
                 : 'attributeTarget));
# 3025 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 574 "Parser.fsy"
                                       Some(_1) 
                   )
# 574 "Parser.fsy"
                 : 'attributeTarget));
# 3036 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 581 "Parser.fsy"
                             let hwlb,m = _2
                             mkEntryPoint (m,hwlb,_1,m)  
                   )
# 581 "Parser.fsy"
                 : 'moduleDefn));
# 3049 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 585 "Parser.fsy"
                           printfn "Hello!"
                           let mWhole = rhs parseState 3 
                           mkEntryPoint (mWhole,_2,_1,mWhole) 
                   )
# 585 "Parser.fsy"
                 : 'moduleDefn));
# 3063 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 589 "Parser.fsy"
                             let types = (_2, true) :: _3
                             [ SynModuleDecl.Types(types, (rhs parseState 1, (types |> List.map(fun e -> fst e))) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
# 589 "Parser.fsy"
                 : 'moduleDefn));
# 3076 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 592 "Parser.fsy"
                             let types = (_2, _1) :: _3
                             [ SynModuleDecl.Types(types, (rhs parseState 1, (types |> List.map(fun e -> fst e))) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
# 592 "Parser.fsy"
                 : 'moduleDefn));
# 3090 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 598 "Parser.fsy"
                             [SynModuleDecl.Open(_2, _2.Range)] 
                   )
# 598 "Parser.fsy"
                 : 'moduleDefn));
# 3101 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'importLibrary)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 601 "Parser.fsy"
                             let elem, elem_range = _1
                             [SynModuleDecl.OpenLibrary(elem, elem_range)] 
                   )
# 601 "Parser.fsy"
                 : 'moduleDefn));
# 3113 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'importDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 605 "Parser.fsy"
                             let elem, elem_range = _1
                             [SynModuleDecl.Import(elem, elem_range)] 
                   )
# 605 "Parser.fsy"
                 : 'moduleDefn));
# 3125 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 612 "Parser.fsy"
                              _2.Lid 
                   )
# 612 "Parser.fsy"
                 : 'namedModuleAbbrevBlock));
# 3137 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 614 "Parser.fsy"
                              _1.Lid  
                   )
# 614 "Parser.fsy"
                 : 'namedModuleAbbrevBlock));
# 3148 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 618 "Parser.fsy"
                              
                              Choice2Of2 _2 
                            
                   )
# 618 "Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3162 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 622 "Parser.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              Choice2Of2 _2 
                            
                   )
# 622 "Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3176 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 626 "Parser.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              Choice2Of2 _2 
                            
                   )
# 626 "Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3191 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 631 "Parser.fsy"
                              
                              Choice2Of2 [] 
                            
                   )
# 631 "Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3204 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 635 "Parser.fsy"
                             
                              Choice2Of2 _1 
                             
                   )
# 635 "Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3217 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 639 "Parser.fsy"
                              
                              Choice1Of2 _1.Lid
                             
                   )
# 639 "Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3230 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 645 "Parser.fsy"
                              _2 
                   )
# 645 "Parser.fsy"
                 : 'wrappedNamedModuleDefn));
# 3242 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 647 "Parser.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct());  
                              _2 
                   )
# 647 "Parser.fsy"
                 : 'wrappedNamedModuleDefn));
# 3256 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 650 "Parser.fsy"
                              [] 
                   )
# 650 "Parser.fsy"
                 : 'wrappedNamedModuleDefn));
# 3267 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 654 "Parser.fsy"
                              None 
                   )
# 654 "Parser.fsy"
                 : 'opt_signature));
# 3277 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 658 "Parser.fsy"
                            _2 
                   )
# 658 "Parser.fsy"
                 : SynMemberDefns));
# 3289 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 661 "Parser.fsy"
                           None 
                   )
# 661 "Parser.fsy"
                 : 'opt_literalValue));
# 3299 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 662 "Parser.fsy"
                                           Some(_2) 
                   )
# 662 "Parser.fsy"
                 : 'opt_literalValue));
# 3310 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 663 "Parser.fsy"
                                                                 Some(_3) 
                   )
# 663 "Parser.fsy"
                 : 'opt_literalValue));
# 3322 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 666 "Parser.fsy"
                                           (false,NonVirtualMemberFlags) 
                   )
# 666 "Parser.fsy"
                 : 'memberFlags));
# 3332 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 667 "Parser.fsy"
                                  (false,NonVirtualMemberFlags) 
                   )
# 667 "Parser.fsy"
                 : 'memberFlags));
# 3342 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 668 "Parser.fsy"
                                        (false,NonVirtualMemberFlags) 
                   )
# 668 "Parser.fsy"
                 : 'memberFlags));
# 3352 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 671 "Parser.fsy"
                                       _1 
                   )
# 671 "Parser.fsy"
                 : 'memberSpecFlags));
# 3363 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 672 "Parser.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 672 "Parser.fsy"
                 : 'memberSpecFlags));
# 3373 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 673 "Parser.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 673 "Parser.fsy"
                 : 'memberSpecFlags));
# 3383 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 677 "Parser.fsy"
                           None, MemberKind.Member 
                   )
# 677 "Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3393 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 679 "Parser.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 679 "Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3404 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 681 "Parser.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 681 "Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3415 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 683 "Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith());
                            Some (rhs2 parseState 1 2), _2 
                   )
# 683 "Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3427 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 689 "Parser.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then MemberKind.PropertyGet 
                            else if id.idText = "set" then MemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
# 689 "Parser.fsy"
                 : 'classMemberSpfnGetSetElements));
# 3441 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 694 "Parser.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired());
                           MemberKind.PropertyGetSet 
                   )
# 694 "Parser.fsy"
                 : 'classMemberSpfnGetSetElements));
# 3457 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 702 "Parser.fsy"
                            _1 
                   )
# 702 "Parser.fsy"
                 : 'typeNameInfo));
# 3468 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 706 "Parser.fsy"
                            (_2, false) :: _3 
                   )
# 706 "Parser.fsy"
                 : 'tyconDefnList));
# 3480 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 708 "Parser.fsy"
                            [] 
                   )
# 708 "Parser.fsy"
                 : 'tyconDefnList));
# 3490 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 712 "Parser.fsy"
                            let nameRange = rhs parseState 1
                            let (tcDefRepr:SynTypeDefnRepr),members, inherits = _3 nameRange
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)    
                            TypeDefn(_1, tcDefRepr, members, inherits, mWhole) 
                   )
# 712 "Parser.fsy"
                 : 'tyconDefn));
# 3506 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvTyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 728 "Parser.fsy"
                            let m = unionRanges (rhs parseState 1) (match _6 with [] -> (match _4 with [] -> (rhs parseState 3) | _ -> (rhs parseState 4)) | _ -> (rhs parseState 6))
                            let fields,rules = _2
                            (fun nameRange -> fields nameRange (checkForMultipleAugmentations m (rules @ _4) _6)) 
                   )
# 728 "Parser.fsy"
                 : 'tyconDefnRhsBlock));
# 3523 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 734 "Parser.fsy"
                            let m = unionRanges (rhs parseState 1) (match _6 with [] -> (match _4 with [] -> (rhs parseState 3) | _ -> (rhs parseState 4)) | _ -> (rhs parseState 6))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m _4 _6)) 
                   )
# 734 "Parser.fsy"
                 : 'tyconDefnRhsBlock));
# 3539 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnOrSpfnCnvRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 746 "Parser.fsy"
                             
                            let inherits,m,rules = _1
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (m,m.Range),augmentation, inherits),rules 
                   )
# 746 "Parser.fsy"
                 : 'cnvTyconDefnRhs));
# 3552 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 752 "Parser.fsy"
                            let m = _1.Range
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1,m),augmentation, [])
                   )
# 752 "Parser.fsy"
                 : 'tyconDefnRhs));
# 3564 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 758 "Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition());
                             _2 
                   )
# 758 "Parser.fsy"
                 : 'classDefnBlock));
# 3577 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 761 "Parser.fsy"
                             _2 
                   )
# 761 "Parser.fsy"
                 : 'classDefnBlock));
# 3589 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 763 "Parser.fsy"
                             _1 
                   )
# 763 "Parser.fsy"
                 : 'classDefnBlock));
# 3600 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 778 "Parser.fsy"
                            _1 
                   )
# 778 "Parser.fsy"
                 : 'classDefnMembers));
# 3611 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 781 "Parser.fsy"
                            _2 
                   )
# 781 "Parser.fsy"
                 : 'classDefnMembers));
# 3622 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 783 "Parser.fsy"
                            [] 
                   )
# 783 "Parser.fsy"
                 : 'classDefnMembers));
# 3632 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 787 "Parser.fsy"
                            _1 @  _3 
                   )
# 787 "Parser.fsy"
                 : 'classDefnMembersAtLeastOne));
# 3645 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 792 "Parser.fsy"
                             
                             
                             let mRhs = _5.Range 
                             let mWhole = unionRanges (rhs2 parseState 3 4) mRhs 
                             let optReturnType = _3 
                             let bindingBuilder,mBindLhs = _2 
                             (fun vis memFlagsBuilder -> 
                                  let b = bindingBuilder (mBindLhs,optReturnType,_5,Some(memFlagsBuilder MemberKind.Member))
                                  [ SynMemberDefn.Member (b,unionRanges mWhole mBindLhs) ]) 
                   )
# 792 "Parser.fsy"
                 : 'memberCore));
# 3667 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'createBindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 805 "Parser.fsy"
                             
                             
                             let mRhs = _5.Range 
                             let mWhole = unionRanges (rhs2 parseState 3 4) mRhs 
                             let optReturnType = _3 
                             let bindingBuilder,mBindLhs = _2 
                             (fun vis memFlagsBuilder -> 
                                  let b = bindingBuilder (mBindLhs,optReturnType,_5,Some(memFlagsBuilder MemberKind.Member))             
                                  [ SynMemberDefn.Member(make_synexpr_create b,unionRanges mWhole mBindLhs) ]) 
                   )
# 805 "Parser.fsy"
                 : 'createMemberCoreWithParams));
# 3689 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 819 "Parser.fsy"
                             
                             
                             let mRhs = _4.Range 
                             let mWhole = unionRanges (rhs2 parseState 2 3) mRhs 
                             let optReturnType = _2 
                             (fun vis memFlagsBuilder _range -> 
                                  let test = mkSynPatMaybeVar (LongIdentWithDots([Ident("Create",_range)],[])) _range
                                  [ SynMemberDefn.Member (mkSynBinding test (_range,optReturnType,_4,Some(memFlagsBuilder MemberKind.Member)),unionRanges mWhole _range) ]) 
                   )
# 819 "Parser.fsy"
                 : 'createMemberCore));
# 3709 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 829 "Parser.fsy"
                                   
                   )
# 829 "Parser.fsy"
                 : 'abstractMemberFlags));
# 3719 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 830 "Parser.fsy"
                                          
                   )
# 830 "Parser.fsy"
                 : 'abstractMemberFlags));
# 3729 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 834 "Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let _,flags = _2
                            _3 _1 flags
                   )
# 834 "Parser.fsy"
                 : 'classDefnMember));
# 3745 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 840 "Parser.fsy"
                                        None 
                   )
# 840 "Parser.fsy"
                 : 'opt_typ));
# 3755 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 841 "Parser.fsy"
                                      Some _2 
                   )
# 841 "Parser.fsy"
                 : 'opt_typ));
# 3766 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 846 "Parser.fsy"
                             let (LongIdentWithDots(lid,dotms)) = _3 
                             (None,LongIdentWithDots(ident(MangledGlobalName,rhs parseState 1)::lid, rhs parseState 2::dotms)) 
                   )
# 846 "Parser.fsy"
                 : 'atomicPatternLongIdent));
# 3778 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 848 "Parser.fsy"
                                  (None,_1) 
                   )
# 848 "Parser.fsy"
                 : 'atomicPatternLongIdent));
# 3789 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 852 "Parser.fsy"
                            None 
                   )
# 852 "Parser.fsy"
                 : 'opt_declVisibility));
# 3799 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 855 "Parser.fsy"
                                                       _2 
                   )
# 855 "Parser.fsy"
                 : 'opt_classDefn));
# 3811 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 856 "Parser.fsy"
                                                     [] 
                   )
# 856 "Parser.fsy"
                 : 'opt_classDefn));
# 3821 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 859 "Parser.fsy"
                                  Some(_1) 
                   )
# 859 "Parser.fsy"
                 : 'optAsSpec));
# 3832 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 860 "Parser.fsy"
                                  None 
                   )
# 860 "Parser.fsy"
                 : 'optAsSpec));
# 3842 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 863 "Parser.fsy"
                                    _2 
                   )
# 863 "Parser.fsy"
                 : 'asSpec));
# 3853 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 866 "Parser.fsy"
                                    Some(_1) 
                   )
# 866 "Parser.fsy"
                 : 'optBaseSpec));
# 3864 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 867 "Parser.fsy"
                                  None 
                   )
# 867 "Parser.fsy"
                 : 'optBaseSpec));
# 3874 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 871 "Parser.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 871 "Parser.fsy"
                 : 'baseSpec));
# 3887 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 876 "Parser.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 876 "Parser.fsy"
                 : 'baseSpec));
# 3898 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 880 "Parser.fsy"
                                    
                   )
# 880 "Parser.fsy"
                 : 'memberOrOverride));
# 3908 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 881 "Parser.fsy"
                                      
                   )
# 881 "Parser.fsy"
                 : 'memberOrOverride));
# 3918 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 886 "Parser.fsy"
                            let _SynUnionCases : Choice<_,SynUnionCase> list = _2
                            let rangesOf3 = _SynUnionCases |> List.map (function |Choice1Of2(ec)->ec.Range | Choice2Of2(uc)->uc.Range)
                            let mWhole = (rhs parseState 1, rangesOf3) ||> List.fold unionRanges 
                            SynTypeDefnSimpleRepr.Union ( _SynUnionCases |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                          mWhole) 
                   )
# 886 "Parser.fsy"
                 : SynTypeDefnSimpleRepr));
# 3934 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldOrRuleDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 894 "Parser.fsy"
                            let inherits,fields,rules = _2
                            inherits,(SynTypeDefnSimpleRepr.Record (fields,lhs parseState)),rules 
                   )
# 894 "Parser.fsy"
                 : 'tyconDefnOrSpfnCnvRepr));
# 3947 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRuleList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 899 "Parser.fsy"
                            let fieldsOrInherit,rules = split (fun x -> match x with CnvRule (_) -> false |_ -> true ) _2
                            let inherits, fields = split (fun x -> match x with CnvField (_) -> false |_ -> true ) fieldsOrInherit
                            let fields,rules = fields |> List.map(fun x -> x.GetField),rules |> List.map(fun x -> x.GetRule)
                            let inherits = inherits |> List.map(fun x -> x.GetInherit)
                            if (inherits.Length > 1) then failwith "Multiple inherits keywords definition per entity not allowed."
                            if inherits.Length = 1 then inherits.Head, fields,rules
                            else [], fields,rules
                   )
# 899 "Parser.fsy"
                 : 'braceFieldOrRuleDeclList));
# 3965 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRuleList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 907 "Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()); 
                            let fieldsOrInherit,rules = split (fun x -> match x with CnvRule (_) -> false |_ -> true ) _2
                            let inherits, fields = split (fun x -> match x with CnvField (_) -> false |_ -> true ) fieldsOrInherit
                            let fields,rules = fields |> List.map(fun x -> x.GetField),rules |> List.map(fun x -> x.GetRule)
                            let inherits = inherits |> List.map(fun x -> x.GetInherit)
                            if (inherits.Length > 1) then failwith "Multiple inherits keywords definition per entity not allowed."
                            if inherits.Length = 1 then inherits.Head, fields,rules
                            else [], fields,rules
                   )
# 907 "Parser.fsy"
                 : 'braceFieldOrRuleDeclList));
# 3984 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRule)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 919 "Parser.fsy"
                                       [_1] 
                   )
# 919 "Parser.fsy"
                 : 'fieldOrRuleList));
# 3995 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRule)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRuleList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 920 "Parser.fsy"
                                                                     _1 :: _3 
                   )
# 920 "Parser.fsy"
                 : 'fieldOrRuleList));
# 4008 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 924 "Parser.fsy"
                            let ty,arity = _2 
                            let arity = (match arity with SynValInfo([],rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty,arity),rhs parseState 2)) 
                   )
# 924 "Parser.fsy"
                 : 'topReturnTypeWithTypeConstraints));
# 4021 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 931 "Parser.fsy"
                             let mRhs = _4.Range 
                             let mWhole = unionRanges (rhs2 parseState 2 3) mRhs 
                             let optReturnType = _2 
                             let bindingBuilder,mBindLhs = _1 
                             (fun vis memFlagsBuilder -> 
                                  [ SynMemberDefn.Member (bindingBuilder (mBindLhs,optReturnType,_4,Some(memFlagsBuilder MemberKind.Member)),unionRanges mWhole mBindLhs) ]) 
                   )
# 931 "Parser.fsy"
                 : 'cnvFieldInitCore));
# 4039 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 942 "Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let flags = NonVirtualMemberFlags
                            let res = _3 _1 flags
                            CnvRule (res.Head) 
                   )
# 942 "Parser.fsy"
                 : 'fieldOrRule));
# 4055 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'createMemberCoreWithParams)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 948 "Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let flags = NonVirtualMemberFlags
                            let res = _3 _1 flags
                            CnvRule (res.Head) 
                   )
# 948 "Parser.fsy"
                 : 'fieldOrRule));
# 4071 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'createMemberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 955 "Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let flags = StaticMemberFlags
                            let res = _3 _1 flags (rhs parseState 2)
                            CnvRule (res.Head) 
                   )
# 955 "Parser.fsy"
                 : 'fieldOrRule));
# 4087 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvFieldInitCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 961 "Parser.fsy"
                            let flags = NonVirtualMemberFlags
                            let res = _3 _2 flags
                            let res_head = res.Head
                            CnvRule (res_head) 
                   )
# 961 "Parser.fsy"
                 : 'fieldOrRule));
# 4104 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'inherit_idents)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 966 "Parser.fsy"
                           CnvInherit _2 
                   )
# 966 "Parser.fsy"
                 : 'fieldOrRule));
# 4115 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 968 "Parser.fsy"
                            let (Field(c,d,is_ref,g)) = _1 
                            CnvField (Field(c,d,is_ref,g))  
                   )
# 968 "Parser.fsy"
                 : 'fieldOrRule));
# 4127 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 972 "Parser.fsy"
                                 [Ident(_1, lhs parseState)] 
                   )
# 972 "Parser.fsy"
                 : 'inherit_idents));
# 4138 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inherit_idents)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 973 "Parser.fsy"
                                                      Ident(_1, lhs parseState) :: _3 
                   )
# 973 "Parser.fsy"
                 : 'inherit_idents));
# 4150 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 977 "Parser.fsy"
                            _2 
                   )
# 977 "Parser.fsy"
                 : 'braceFieldDeclList));
# 4162 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 979 "Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()); 
                            _2 
                   )
# 979 "Parser.fsy"
                 : 'braceFieldDeclList));
# 4175 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 982 "Parser.fsy"
                            [] 
                   )
# 982 "Parser.fsy"
                 : 'braceFieldDeclList));
# 4186 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 985 "Parser.fsy"
                                     
                   )
# 985 "Parser.fsy"
                 : 'interfaceMember));
# 4196 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 986 "Parser.fsy"
                                                
                   )
# 986 "Parser.fsy"
                 : 'interfaceMember));
# 4206 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 990 "Parser.fsy"
                             _1.Lid 
                   )
# 990 "Parser.fsy"
                 : 'tyconNameAndTyparDecls));
# 4217 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 993 "Parser.fsy"
                                             _3::_1 
                   )
# 993 "Parser.fsy"
                 : 'typarAlts));
# 4229 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 994 "Parser.fsy"
                                [_1] 
                   )
# 994 "Parser.fsy"
                 : 'typarAlts));
# 4240 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1000 "Parser.fsy"
                            _1 
                   )
# 1000 "Parser.fsy"
                 : 'unionRepr));
# 4251 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1002 "Parser.fsy"
                            _1 :: _2
                   )
# 1002 "Parser.fsy"
                 : 'unionRepr));
# 4263 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1004 "Parser.fsy"
                            [_1] 
                   )
# 1004 "Parser.fsy"
                 : 'unionRepr));
# 4274 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1007 "Parser.fsy"
                                                                 _1 :: _2 
                   )
# 1007 "Parser.fsy"
                 : 'attrUnionCaseDecls));
# 4286 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1008 "Parser.fsy"
                                             [ _1 ] 
                   )
# 1008 "Parser.fsy"
                 : 'attrUnionCaseDecls));
# 4297 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1012 "Parser.fsy"
                             let mDecl = rhs parseState 1
                             Choice2Of2 (UnionCase (_1,UnionCaseFields [],mDecl)) 
                           
                   )
# 1012 "Parser.fsy"
                 : 'attrUnionCaseDecl));
# 4311 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1016 "Parser.fsy"
                             let mDecl = rhs2 parseState 1 3
                             Choice2Of2 (UnionCase (_1,UnionCaseFields _3,mDecl)) 
                           
                   )
# 1016 "Parser.fsy"
                 : 'attrUnionCaseDecl));
# 4326 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1020 "Parser.fsy"
                             libraryOnlyWarning(lhs parseState);
                             let mDecl = rhs2 parseState 1 3
                             Choice2Of2 (UnionCase (_1,UnionCaseFullType _3,mDecl))
                           
                   )
# 1020 "Parser.fsy"
                 : 'attrUnionCaseDecl));
# 4342 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1028 "Parser.fsy"
                             _1 
                   )
# 1028 "Parser.fsy"
                 : 'unionCaseName));
# 4353 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1030 "Parser.fsy"
                              ident(opNameCons,rhs parseState 2) 
                   )
# 1030 "Parser.fsy"
                 : 'unionCaseName));
# 4364 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1032 "Parser.fsy"
                              ident(opNameNil,rhs2 parseState 2 3) 
                   )
# 1032 "Parser.fsy"
                 : 'unionCaseName));
# 4375 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1036 "Parser.fsy"
                             
                             Choice2Of2 (UnionCase (_1,UnionCaseFields [],rhs parseState 1)) 
                           
                   )
# 1036 "Parser.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 4389 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1040 "Parser.fsy"
                             _1 
                   )
# 1040 "Parser.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 4401 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1044 "Parser.fsy"
                            
                            Choice2Of2 (UnionCase (_1,UnionCaseFields _3,rhs2 parseState 1 3))
                         
                   )
# 1044 "Parser.fsy"
                 : 'firstUnionCaseDecl));
# 4415 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1050 "Parser.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(),lhs parseState)); 
                            _1 
                   )
# 1050 "Parser.fsy"
                 : 'unionCaseRepr));
# 4427 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1053 "Parser.fsy"
                            List.map mkAnonField (_1 :: _3) 
                   )
# 1053 "Parser.fsy"
                 : 'unionCaseRepr));
# 4439 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1055 "Parser.fsy"
                            [mkAnonField _1] 
                   )
# 1055 "Parser.fsy"
                 : 'unionCaseRepr));
# 4450 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1059 "Parser.fsy"
                            _1 :: _3 
                   )
# 1059 "Parser.fsy"
                 : 'recdFieldDeclList));
# 4463 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1061 "Parser.fsy"
                            [_1] 
                   )
# 1061 "Parser.fsy"
                 : 'recdFieldDeclList));
# 4475 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1065 "Parser.fsy"
                            let fld = _1
                            let (Field(c,d,is_ref,g)) = fld
                            Field(c,d,is_ref,g)  
                   )
# 1065 "Parser.fsy"
                 : 'recdFieldDecl));
# 4488 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ref)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1071 "Parser.fsy"
                            let mRhs = rhs2 parseState 1 4
                            Field(Some _2,_4,_1,mRhs) 
                   )
# 1071 "Parser.fsy"
                 : 'fieldDecl));
# 4502 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1076 "Parser.fsy"
                                          (_2, lhs parseState) 
                   )
# 1076 "Parser.fsy"
                 : 'importDecl));
# 4513 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1079 "Parser.fsy"
                                        (_2, lhs parseState) 
                   )
# 1079 "Parser.fsy"
                 : 'importLibrary));
# 4524 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1083 "Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise Position of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate Position *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             let binds = localBindingsBuilder 
                             if not isRec && List.length binds > 1 then 
                                 reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs( mLetKwd,isRec,isUse,
                                                 binds, 
                                                 bindingSetRange) 
                   )
# 1083 "Parser.fsy"
                 : 'defnBindings));
# 4553 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1105 "Parser.fsy"
                             let mDoKwd = rhs parseState 1 
                             let mWhole = unionRanges mDoKwd _2.Range
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mDoKwd,false,false,[mkSynDoBinding (true,_2,mWhole)], mWhole) 
                   )
# 1105 "Parser.fsy"
                 : 'doBinding));
# 4568 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1114 "Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd;  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise Position of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate Position *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             
                             let binds = localBindingsBuilder 
                             if not isRec && List.length binds > 1 then 
                                 reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                             
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,binds,bindingSetRange), (unionRanges mLetKwd bindingSetRange) 
                   )
# 1114 "Parser.fsy"
                 : 'hardwhiteLetBindings));
# 4600 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1137 "Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mLetKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mLetKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange), _2 
                   )
# 1137 "Parser.fsy"
                 : 'hardwhiteDoBinding));
# 4617 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1145 "Parser.fsy"
                                        _1 
                   )
# 1145 "Parser.fsy"
                 : 'classDefnBindings));
# 4628 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1146 "Parser.fsy"
                                     _1 
                   )
# 1146 "Parser.fsy"
                 : 'classDefnBindings));
# 4639 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1147 "Parser.fsy"
                                                let b,m = _1 in b 
                   )
# 1147 "Parser.fsy"
                 : 'classDefnBindings));
# 4650 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1148 "Parser.fsy"
                                               fst _1 
                   )
# 1148 "Parser.fsy"
                 : 'classDefnBindings));
# 4661 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1153 "Parser.fsy"
                            (fun _ m -> ()) 
                   )
# 1153 "Parser.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 4671 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1155 "Parser.fsy"
                            (fun kwd m -> reportParseErrorAt m (match kwd with 
                                                                | "let!" -> FSComp.SR.parsUnmatchedLetBang() 
                                                                | "use!" -> FSComp.SR.parsUnmatchedUseBang() 
                                                                | "use" -> FSComp.SR.parsUnmatchedUse() 
                                                                | _ (*"let" *) -> FSComp.SR.parsUnmatchedLet()))  
                   )
# 1155 "Parser.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 4686 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1163 "Parser.fsy"
                             let (moreBindings, moreBindingRanges) = List.unzip _2
                             let moreLocalBindingsLastRange = if moreBindingRanges.IsEmpty then None else Some (last moreBindingRanges)
                             match _1 with 
                             | Some (localBindingRange,attrLocalBindingBuilder) -> 
                                let lastRange = 
                                    match moreLocalBindingsLastRange with 
                                    | None -> localBindingRange 
                                    | Some m -> m
                                Some lastRange, attrLocalBindingBuilder ::  moreBindings
                             | None -> 
                                moreLocalBindingsLastRange, moreBindings 
                   )
# 1163 "Parser.fsy"
                 : 'localBindings));
# 4708 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1177 "Parser.fsy"
                             let mLetKwd = rhs parseState 1
                             (match _2 with 
                              | Some (localBindingRange,attrLocalBindingBuilder) -> (attrLocalBindingBuilder ,localBindingRange) :: _3 
                              | None -> _3) 
                   )
# 1177 "Parser.fsy"
                 : 'moreLocalBindings));
# 4723 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1182 "Parser.fsy"
                             [] 
                   )
# 1182 "Parser.fsy"
                 : 'moreLocalBindings));
# 4733 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1186 "Parser.fsy"
                             let localBindingRange,localBindingBuilder = _1
                             let attrLocalBindingBuilder = localBindingBuilder
                             Some(localBindingRange,attrLocalBindingBuilder) 
                   )
# 1186 "Parser.fsy"
                 : 'attr_localBinding));
# 4746 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1190 "Parser.fsy"
                             None 
                   )
# 1190 "Parser.fsy"
                 : 'attr_localBinding));
# 4756 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1194 "Parser.fsy"
                             let (expr:SynExpr),opts = _6
                             let mRhs = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingRange = unionRanges (rhs2 parseState 3 5) mRhs
                             let localBindingBuilder = bindingBuilder (mBindLhs,optReturnType,expr,None)
                             localBindingRange,localBindingBuilder 
                   )
# 1194 "Parser.fsy"
                 : 'localBinding));
# 4777 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1202 "Parser.fsy"
                             let mWhole = rhs2 parseState 3 5 
                             let optReturnType = _4 
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = 
                                 let eqm = rhs parseState 5
                                 let zeroWidthAtEnd = eqm
                                 bindingBuilder (mBindLhs,optReturnType,arbExpr("localBinding1",zeroWidthAtEnd),None) 
                             mWhole,localBindingBuilder 
                   )
# 1202 "Parser.fsy"
                 : 'localBinding));
# 4798 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1211 "Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 5) (FSComp.SR.parsUnexpectedEndOfFileDefinition())
                             let optReturnType = _4 
                             let mWhole = match optReturnType with None -> rhs parseState 3 | Some _ -> rhs2 parseState 3 4
                             let mRhs = mWhole  // zero-width Position at end of last good token
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = bindingBuilder (mBindLhs,optReturnType,arbExpr("localBinding2",mRhs),None)
                             mWhole,localBindingBuilder 
                   )
# 1211 "Parser.fsy"
                 : 'localBinding));
# 4819 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1222 "Parser.fsy"
                             _2 
                   )
# 1222 "Parser.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 4831 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1224 "Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             let a,b = _2
                             (exprFromParseError a, b) 
                   )
# 1224 "Parser.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 4845 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1228 "Parser.fsy"
                             _1 
                   )
# 1228 "Parser.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 4856 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1231 "Parser.fsy"
                                                                _1, List.rev _2 
                   )
# 1231 "Parser.fsy"
                 : 'typedExprWithStaticOptimizations));
# 4868 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1234 "Parser.fsy"
                                                                      _2 :: _1 
                   )
# 1234 "Parser.fsy"
                 : 'opt_staticOptimizations));
# 4880 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1235 "Parser.fsy"
                           [] 
                   )
# 1235 "Parser.fsy"
                 : 'opt_staticOptimizations));
# 4890 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1238 "Parser.fsy"
                                                                                      (_2,_4) 
                   )
# 1238 "Parser.fsy"
                 : 'staticOptimization));
# 4902 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1241 "Parser.fsy"
                                                                                        _3 :: _1 
                   )
# 1241 "Parser.fsy"
                 : 'staticOptimizationConditions));
# 4914 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1242 "Parser.fsy"
                                                       [_1 ] 
                   )
# 1242 "Parser.fsy"
                 : 'staticOptimizationConditions));
# 4925 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1245 "Parser.fsy"
                                           CasanovaCompiler.ParseAST.WhenTyparTyconEqualsTycon(_1,_3,lhs parseState) 
                   )
# 1245 "Parser.fsy"
                 : 'staticOptimizationCondition));
# 4937 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1246 "Parser.fsy"
                                        CasanovaCompiler.ParseAST.WhenTyparIsStruct(_1,lhs parseState) 
                   )
# 1246 "Parser.fsy"
                 : 'staticOptimizationCondition));
# 4948 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1249 "Parser.fsy"
                                 SynConst.Byte _1 
                   )
# 1249 "Parser.fsy"
                 : 'rawConstant));
# 4959 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1250 "Parser.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState));
                                 SynConst.Int32 (fst _1) 
                   )
# 1250 "Parser.fsy"
                 : 'rawConstant));
# 4971 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1252 "Parser.fsy"
                                  SynConst.Single _1 
                   )
# 1252 "Parser.fsy"
                 : 'rawConstant));
# 4982 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1253 "Parser.fsy"
                                  SynConst.Double _1 
                   )
# 1253 "Parser.fsy"
                 : 'rawConstant));
# 4993 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1254 "Parser.fsy"
                                SynConst.Char _1 
                   )
# 1254 "Parser.fsy"
                 : 'rawConstant));
# 5004 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1255 "Parser.fsy"
                                                 SynConst.String (_1,lhs parseState) 
                   )
# 1255 "Parser.fsy"
                 : 'rawConstant));
# 5015 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1259 "Parser.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas false mAll _2 _4 
                   )
# 1259 "Parser.fsy"
                 : 'anonLambdaExpr));
# 5028 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1262 "Parser.fsy"
                            let mAll = rhs2 parseState 1 3
                            mkSynFunMatchLambdas false mAll _2 (arbExpr("anonLambdaExpr1",(rhs parseState 4))) 
                   )
# 1262 "Parser.fsy"
                 : 'anonLambdaExpr));
# 5040 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1265 "Parser.fsy"
                            let e : SynExpr = _4
                            let mAll = unionRanges (rhs parseState 1) e.Range       
                            mkSynFunMatchLambdas false mAll _2 e 
                   )
# 1265 "Parser.fsy"
                 : 'anonLambdaExpr));
# 5054 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1269 "Parser.fsy"
                            if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody());
                            let e : SynExpr = _4 
                            let mAll = unionRanges (rhs parseState 1) e.Range
                            exprFromParseError (mkSynFunMatchLambdas false mAll _2 e) 
                   )
# 1269 "Parser.fsy"
                 : 'anonLambdaExpr));
# 5070 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1274 "Parser.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody())
                            mkSynFunMatchLambdas false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr2",(rhs parseState 4))) 
                   )
# 1274 "Parser.fsy"
                 : 'anonLambdaExpr));
# 5082 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1278 "Parser.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody())
                            exprFromParseError (mkSynFunMatchLambdas false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr3",(rhs parseState 4)))) 
                   )
# 1278 "Parser.fsy"
                 : 'anonLambdaExpr));
# 5095 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1281 "Parser.fsy"
                            exprFromParseError (mkSynFunMatchLambdas false (rhs2 parseState 1 2) _2 (arbExpr("anonLambdaExpr4",(rhs parseState 3)))) 
                   )
# 1281 "Parser.fsy"
                 : 'anonLambdaExpr));
# 5106 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1283 "Parser.fsy"
                            exprFromParseError (mkSynFunMatchLambdas false (rhs parseState 1) [] (arbExpr("anonLambdaExpr5",(rhs parseState 2)))) 
                   )
# 1283 "Parser.fsy"
                 : 'anonLambdaExpr));
# 5116 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1286 "Parser.fsy"
                                       _1 
                   )
# 1286 "Parser.fsy"
                 : 'constant));
# 5127 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1287 "Parser.fsy"
                                                                            SynConst.Measure(_1, _3) 
                   )
# 1287 "Parser.fsy"
                 : 'constant));
# 5139 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1291 "Parser.fsy"
                             mkSynBinding _1, rhs parseState 1 
                   )
# 1291 "Parser.fsy"
                 : 'bindingPattern));
# 5150 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1295 "Parser.fsy"
                             
                             let tuple = _1
                             let tuple1 = SynPat.LongIdent(LongIdentWithDots([Ident("Create", rhs parseState 1)],[]),None, [tuple], rhs parseState 1)
                             mkCreateSynBinding tuple1, rhs parseState 1 
                           
                   )
# 1295 "Parser.fsy"
                 : 'createBindingPattern));
# 5165 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1304 "Parser.fsy"
                             SynPat.Named (_1,_3,false,rhs2 parseState 1 3) 
                   )
# 1304 "Parser.fsy"
                 : SynPat));
# 5177 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1306 "Parser.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 1306 "Parser.fsy"
                 : SynPat));
# 5189 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1308 "Parser.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]), None,[SynPat.Tuple ([_1;_3],rhs2 parseState 1 3)],lhs parseState) 
                   )
# 1308 "Parser.fsy"
                 : SynPat));
# 5201 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1310 "Parser.fsy"
                             SynPat.Tuple(List.rev _1, lhs parseState) 
                   )
# 1310 "Parser.fsy"
                 : SynPat));
# 5212 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1312 "Parser.fsy"
                             SynPat.Ands(List.rev _1, lhs parseState) 
                   )
# 1312 "Parser.fsy"
                 : SynPat));
# 5223 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1314 "Parser.fsy"
                             _1 
                   )
# 1314 "Parser.fsy"
                 : SynPat));
# 5234 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1317 "Parser.fsy"
                             _3 :: _1 
                   )
# 1317 "Parser.fsy"
                 : 'tuplePatternElements));
# 5246 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1319 "Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1319 "Parser.fsy"
                 : 'tuplePatternElements));
# 5258 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1323 "Parser.fsy"
                             _3 :: _1 
                   )
# 1323 "Parser.fsy"
                 : 'conjPatternElements));
# 5270 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1325 "Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1325 "Parser.fsy"
                 : 'conjPatternElements));
# 5282 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1329 "Parser.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_3,lhs parseState) 
                   )
# 1329 "Parser.fsy"
                 : 'constrPattern));
# 5295 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1331 "Parser.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_4,lhs parseState) 
                   )
# 1331 "Parser.fsy"
                 : 'constrPattern));
# 5308 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1333 "Parser.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_4,lhs parseState) 
                   )
# 1333 "Parser.fsy"
                 : 'constrPattern));
# 5321 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1335 "Parser.fsy"
                             _1 
                   )
# 1335 "Parser.fsy"
                 : 'constrPattern));
# 5332 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1337 "Parser.fsy"
                                                   None 
                   )
# 1337 "Parser.fsy"
                 : 'opt_explicitValTyparDecls2));
# 5342 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1341 "Parser.fsy"
                             _1 :: _2 
                   )
# 1341 "Parser.fsy"
                 : 'atomicPatterns));
# 5354 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1343 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 1343 "Parser.fsy"
                 : 'atomicPatterns));
# 5367 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1346 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 1346 "Parser.fsy"
                 : 'atomicPatterns));
# 5380 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1348 "Parser.fsy"
                                         [_1] 
                   )
# 1348 "Parser.fsy"
                 : 'atomicPatterns));
# 5391 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1353 "Parser.fsy"
                             _2 
                   )
# 1353 "Parser.fsy"
                 : 'atomicPattern));
# 5403 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1355 "Parser.fsy"
                             SynPat.ArrayOrList(false,_2,lhs parseState) 
                   )
# 1355 "Parser.fsy"
                 : 'atomicPattern));
# 5414 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1357 "Parser.fsy"
                             SynPat.ArrayOrList(true,_2, lhs parseState) 
                   )
# 1357 "Parser.fsy"
                 : 'atomicPattern));
# 5425 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1359 "Parser.fsy"
                             SynPat.Wild (lhs parseState) 
                   )
# 1359 "Parser.fsy"
                 : 'atomicPattern));
# 5435 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1361 "Parser.fsy"
                             let vis,lidwd = _1 
                             if List.length lidwd.Lid > 1 || (let c = (List.head lidwd.Lid).idText.[0] in Char.IsUpper(c) && not (Char.IsLower c)) 
                             then mkSynPatMaybeVar lidwd (lhs parseState)
                             else mkSynPatVar (List.head lidwd.Lid) 
                   )
# 1361 "Parser.fsy"
                 : 'atomicPattern));
# 5449 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1366 "Parser.fsy"
                             SynPat.Const (_1,_1.Range (lhs parseState)) 
                   )
# 1366 "Parser.fsy"
                 : 'atomicPattern));
# 5460 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1368 "Parser.fsy"
                             SynPat.Const(SynConst.Bool false,lhs parseState) 
                   )
# 1368 "Parser.fsy"
                 : 'atomicPattern));
# 5470 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1370 "Parser.fsy"
                             SynPat.Const(SynConst.Bool true,lhs parseState) 
                   )
# 1370 "Parser.fsy"
                 : 'atomicPattern));
# 5480 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1372 "Parser.fsy"
                             SynPat.Null(lhs parseState) 
                   )
# 1372 "Parser.fsy"
                 : 'atomicPattern));
# 5490 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1374 "Parser.fsy"
                             let m = (lhs parseState)
                             SynPat.Paren(_2 m,m) 
                   )
# 1374 "Parser.fsy"
                 : 'atomicPattern));
# 5503 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1377 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             patFromParseError (_2 (rhs2 parseState 1 2)) 
                   )
# 1377 "Parser.fsy"
                 : 'atomicPattern));
# 5516 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1380 "Parser.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
# 1380 "Parser.fsy"
                 : 'atomicPattern));
# 5527 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1382 "Parser.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                              SynPat.Wild (lhs parseState)
                   )
# 1382 "Parser.fsy"
                 : 'atomicPattern));
# 5539 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1389 "Parser.fsy"
                             (fun m -> _1) 
                   )
# 1389 "Parser.fsy"
                 : 'parenPatternBody));
# 5550 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1391 "Parser.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit,m)) 
                   )
# 1391 "Parser.fsy"
                 : 'parenPatternBody));
# 5560 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1420 "Parser.fsy"
                             SynPat.Named (_1,_3,false,rhs2 parseState 1 3) 
                   )
# 1420 "Parser.fsy"
                 : 'parenPattern));
# 5572 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1422 "Parser.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 1422 "Parser.fsy"
                 : 'parenPattern));
# 5584 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1424 "Parser.fsy"
                             SynPat.Tuple(List.rev _1,lhs parseState) 
                   )
# 1424 "Parser.fsy"
                 : 'parenPattern));
# 5595 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1426 "Parser.fsy"
                             SynPat.Ands(List.rev _1,rhs2 parseState 1 3) 
                   )
# 1426 "Parser.fsy"
                 : 'parenPattern));
# 5606 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1428 "Parser.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Typed(_1,_3,lhsm) 
                   )
# 1428 "Parser.fsy"
                 : 'parenPattern));
# 5619 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1431 "Parser.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]),None,[ SynPat.Tuple ([_1;_3],rhs2 parseState 1 3) ],lhs parseState) 
                   )
# 1431 "Parser.fsy"
                 : 'parenPattern));
# 5631 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1432 "Parser.fsy"
                                         _1 
                   )
# 1432 "Parser.fsy"
                 : 'parenPattern));
# 5642 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1436 "Parser.fsy"
                             _3 :: _1 
                   )
# 1436 "Parser.fsy"
                 : 'tupleParenPatternElements));
# 5654 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1438 "Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1438 "Parser.fsy"
                 : 'tupleParenPatternElements));
# 5666 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1442 "Parser.fsy"
                             _3 :: _1 
                   )
# 1442 "Parser.fsy"
                 : 'conjParenPatternElements));
# 5678 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1444 "Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1444 "Parser.fsy"
                 : 'conjParenPatternElements));
# 5690 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1447 "Parser.fsy"
                                                    let rs,m = _1 in SynPat.Record (rs,m) 
                   )
# 1447 "Parser.fsy"
                 : 'recordPatternElements));
# 5701 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1451 "Parser.fsy"
                             [_1],lhs parseState 
                   )
# 1451 "Parser.fsy"
                 : 'recordPatternElementsAux));
# 5713 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1453 "Parser.fsy"
                             let r = _1 in let (rs,dropMark) = _3 in (r :: rs),lhs parseState 
                   )
# 1453 "Parser.fsy"
                 : 'recordPatternElementsAux));
# 5726 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1456 "Parser.fsy"
                                                    (frontAndBack _1.Lid,_3) 
                   )
# 1456 "Parser.fsy"
                 : 'recordPatternElement));
# 5738 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1460 "Parser.fsy"
                             [] 
                   )
# 1460 "Parser.fsy"
                 : 'listPatternElements));
# 5748 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1462 "Parser.fsy"
                             [_1] 
                   )
# 1462 "Parser.fsy"
                 : 'listPatternElements));
# 5760 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1464 "Parser.fsy"
                             _1 :: _3 
                   )
# 1464 "Parser.fsy"
                 : 'listPatternElements));
# 5773 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1469 "Parser.fsy"
                             _2 
                   )
# 1469 "Parser.fsy"
                 : 'fromAssignmentExprBlock));
# 5785 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1473 "Parser.fsy"
                             _2 
                   )
# 1473 "Parser.fsy"
                 : SynExpr));
# 5797 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1475 "Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                             exprFromParseError _2 
                   )
# 1475 "Parser.fsy"
                 : SynExpr));
# 5810 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1478 "Parser.fsy"
                             _1 
                   )
# 1478 "Parser.fsy"
                 : SynExpr));
# 5821 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1483 "Parser.fsy"
                             _2 
                   )
# 1483 "Parser.fsy"
                 : SynExpr));
# 5833 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1485 "Parser.fsy"
                             _1 
                   )
# 1485 "Parser.fsy"
                 : SynExpr));
# 5844 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1490 "Parser.fsy"
                                                         _1 
                   )
# 1490 "Parser.fsy"
                 : 'typedSeqExprBlockR));
# 5855 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1491 "Parser.fsy"
                                        _1 
                   )
# 1491 "Parser.fsy"
                 : 'typedSeqExprBlockR));
# 5866 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1494 "Parser.fsy"
                                                                               SynExpr.Typed (_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 1494 "Parser.fsy"
                 : 'typedSeqExpr));
# 5878 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1495 "Parser.fsy"
                                   _1 
                   )
# 1495 "Parser.fsy"
                 : 'typedSeqExpr));
# 5889 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1499 "Parser.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,true,_1,_3,unionRanges _1.Range _3.Range) 
                   )
# 1499 "Parser.fsy"
                 : 'seqExpr));
# 5902 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1501 "Parser.fsy"
                             _1 
                   )
# 1501 "Parser.fsy"
                 : 'seqExpr));
# 5914 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1503 "Parser.fsy"
                             _1 
                   )
# 1503 "Parser.fsy"
                 : 'seqExpr));
# 5925 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1505 "Parser.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_3,unionRanges _1.Range _3.Range ) 
                   )
# 1505 "Parser.fsy"
                 : 'seqExpr));
# 5937 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1507 "Parser.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_4,unionRanges _1.Range _4.Range) 
                   )
# 1507 "Parser.fsy"
                 : 'seqExpr));
# 5950 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1509 "Parser.fsy"
                            let hwlb,m = _1
                            let mLetKwd,isUse = match hwlb with (BindingSetPreAttrs(m,_,isUse,_,_))  -> m,isUse
                            reportParseErrorAt mLetKwd (FSComp.SR.parsExpectedStatementAfterLet(if isUse then "use" else "let"))
                            let fauxRange = m // zero width Position at end of m
                            mkLocalBindings (m,hwlb,arbExpr("seqExpr",fauxRange)) 
                   )
# 1509 "Parser.fsy"
                 : 'seqExpr));
# 5965 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1520 "Parser.fsy"
                                  debugPrint("recovering via error"); true 
                   )
# 1520 "Parser.fsy"
                 : 'recover));
# 5975 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1521 "Parser.fsy"
                                debugPrint("recovering via EOF"); false 
                   )
# 1521 "Parser.fsy"
                 : 'recover));
# 5986 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1525 "Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [SynExpr.Const(SynConst.Bool(true), mIf) ,_3,mIf] 
                   )
# 1525 "Parser.fsy"
                 : 'choices));
# 5998 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1528 "Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [_2,_3,mIf] 
                   )
# 1528 "Parser.fsy"
                 : 'choices));
# 6011 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1531 "Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (SynExpr.Const(SynConst.Bool(true), mIf) ,_3,mIf) :: _4 
                   )
# 1531 "Parser.fsy"
                 : 'choices));
# 6024 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1534 "Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (_2,_3,mIf) :: _4 
                   )
# 1534 "Parser.fsy"
                 : 'choices));
# 6038 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1539 "Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [SynExpr.Const(SynConst.Bool(true), mIf),_3,mIf] 
                   )
# 1539 "Parser.fsy"
                 : 'intChoices));
# 6050 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1542 "Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [_2,_3,mIf] 
                   )
# 1542 "Parser.fsy"
                 : 'intChoices));
# 6063 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1545 "Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (SynExpr.Const(SynConst.Bool(true), mIf),_3,mIf) :: _4 
                   )
# 1545 "Parser.fsy"
                 : 'intChoices));
# 6076 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1548 "Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (_2,_3,mIf) :: _4 
                   )
# 1548 "Parser.fsy"
                 : 'intChoices));
# 6090 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1553 "Parser.fsy"
                             _2 
                   )
# 1553 "Parser.fsy"
                 : 'choiceBody));
# 6101 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1555 "Parser.fsy"
                             _3 
                   )
# 1555 "Parser.fsy"
                 : 'choiceBody));
# 6113 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1557 "Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen());
                             exprFromParseError _3 
                   )
# 1557 "Parser.fsy"
                 : 'choiceBody));
# 6126 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1562 "Parser.fsy"
                             let mWaitKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mWaitKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mWaitKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange), _2)
                             [(e,mWaitKwd)]
                   )
# 1562 "Parser.fsy"
                 : 'parallel));
# 6142 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'parallel)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1568 "Parser.fsy"
                             let mWaitKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mWaitKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mWaitKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange), _2)
                             (e,mWaitKwd) :: _4 
                   )
# 1568 "Parser.fsy"
                 : 'parallel));
# 6159 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1576 "Parser.fsy"
                            SynExpr.Choice(false,_1) 
                   )
# 1576 "Parser.fsy"
                 : SynExpr));
# 6170 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'intChoices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1578 "Parser.fsy"
                            SynExpr.Choice(true,_1) 
                   )
# 1578 "Parser.fsy"
                 : SynExpr));
# 6181 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parallel)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1580 "Parser.fsy"
                            SynExpr.Parallel(_1) 
                   )
# 1580 "Parser.fsy"
                 : SynExpr));
# 6192 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1582 "Parser.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range,_1,_3) 
                   )
# 1582 "Parser.fsy"
                 : SynExpr));
# 6204 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1584 "Parser.fsy"
                            mkLocalBindings (rhs2 parseState 1 2,_1,arbExpr("declExpr1",(rhs parseState 3))) 
                   )
# 1584 "Parser.fsy"
                 : SynExpr));
# 6215 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1589 "Parser.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _2.Range,hwlb,_2) 
                   )
# 1589 "Parser.fsy"
                 : SynExpr));
# 6228 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1592 "Parser.fsy"
                            let hwlb,m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m,hwlb,arbExpr("declExpr2",(rhs parseState 2))) 
                   )
# 1592 "Parser.fsy"
                 : SynExpr));
# 6241 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1596 "Parser.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _3.Range ,hwlb,_3) 
                   )
# 1596 "Parser.fsy"
                 : SynExpr));
# 6254 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1599 "Parser.fsy"
                            let hwlb,m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3),hwlb,arbExpr("declExpr3",(rhs parseState 3))) 
                   )
# 1599 "Parser.fsy"
                 : SynExpr));
# 6267 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1604 "Parser.fsy"
                            let e = snd _1
                            SynExpr.Do(e,e.Range) 
                   )
# 1604 "Parser.fsy"
                 : SynExpr));
# 6279 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1610 "Parser.fsy"
                             let mWaitKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mWaitKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mWaitKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange), _2)
                             SynExpr.WaitStatement(e,e.Range) 
                   )
# 1610 "Parser.fsy"
                 : SynExpr));
# 6295 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1618 "Parser.fsy"
                             let mYieldKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mYieldKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mYieldKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange), _2)
                             SynExpr.YieldStatement(e,e.Range) 
                   )
# 1618 "Parser.fsy"
                 : SynExpr));
# 6311 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1625 "Parser.fsy"
                             printfn "anonLambdaExpr 1"
                             _1 
                   )
# 1625 "Parser.fsy"
                 : SynExpr));
# 6323 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1629 "Parser.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith,(clauses,mLast) = _3 
                             let spBind = SequencePointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.Match(spBind, _2,clauses,false,unionRanges mMatch mLast) 
                   )
# 1629 "Parser.fsy"
                 : SynExpr));
# 6338 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1635 "Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch());
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
# 1635 "Parser.fsy"
                 : SynExpr));
# 6352 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1640 "Parser.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 1640 "Parser.fsy"
                 : SynExpr));
# 6365 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1644 "Parser.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 1644 "Parser.fsy"
                 : SynExpr));
# 6378 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1649 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf()); 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             exprFromParseError _2 
                   )
# 1649 "Parser.fsy"
                 : SynExpr));
# 6395 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1657 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf())
                             // Produce an approximate expression during error recovery. There can still be value in doing this even
                             // for this pathological case.
                             let m = (rhs parseState 1)
                             let mEnd = m
                             let spIfToThen = SequencePointAtBinding mEnd
                             exprFromParseError (SynExpr.IfThenElse(arbExpr("ifGuard1",mEnd),arbExpr("thenBody1",mEnd),None,spIfToThen,true,m,m)) 
                   )
# 1657 "Parser.fsy"
                 : SynExpr));
# 6412 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1666 "Parser.fsy"
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.While(spWhile,_2,_4,mWhileAll) 
                   )
# 1666 "Parser.fsy"
                 : SynExpr));
# 6429 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1672 "Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.While(spWhile,_2,_4,mWhileAll)) 
                   )
# 1672 "Parser.fsy"
                 : SynExpr));
# 6447 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1679 "Parser.fsy"
                             // silent recovery 
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = unionRanges (rhs parseState 4) (rhs parseState 5)
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 5)
                             SynExpr.While(spWhile,_2,arbExpr("whileBody1",mWhileBodyArb),mWhileAll) 
                   )
# 1679 "Parser.fsy"
                 : SynExpr));
# 6465 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1687 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsWhileDoExpected())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,_2,arbExpr("whileBody2",mWhileBodyArb),mWhileAll))  
                   )
# 1687 "Parser.fsy"
                 : SynExpr));
# 6482 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1695 "Parser.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             arbExpr("whileLoop1",rhs parseState 1)  
                   )
# 1695 "Parser.fsy"
                 : SynExpr));
# 6494 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1699 "Parser.fsy"
                             //silent recovery
                             let mWhileHeader = rhs parseState 1
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,arbExpr("whileGuard1",mWhileHeader),arbExpr("whileBody3",mWhileBodyArb),mWhileAll))  
                   )
# 1699 "Parser.fsy"
                 : SynExpr));
# 6510 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1707 "Parser.fsy"
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 1707 "Parser.fsy"
                 : SynExpr));
# 6526 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1712 "Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,mForLoopAll) 
                   )
# 1712 "Parser.fsy"
                 : SynExpr));
# 6544 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1719 "Parser.fsy"
                             // Silent recovery
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2a",mForLoopBodyArb),mForLoopAll) 
                   )
# 1719 "Parser.fsy"
                 : SynExpr));
# 6563 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1728 "Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2",mForLoopBodyArb),mForLoopAll) 
                   )
# 1728 "Parser.fsy"
                 : SynExpr));
# 6582 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1737 "Parser.fsy"
                             let (a,b,ok) = _2 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsForDoExpected())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody1",mForLoopBodyArb),mForLoopAll) 
                   )
# 1737 "Parser.fsy"
                 : SynExpr));
# 6600 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1746 "Parser.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll) 
                   )
# 1746 "Parser.fsy"
                 : SynExpr));
# 6618 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1753 "Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             // Still produce an expression
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll)) 
                   )
# 1753 "Parser.fsy"
                 : SynExpr));
# 6638 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1762 "Parser.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll) 
                   )
# 1762 "Parser.fsy"
                 : SynExpr));
# 6657 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1771 "Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 1771 "Parser.fsy"
                 : SynExpr));
# 6676 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1780 "Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = (rhs parseState 2)
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 1780 "Parser.fsy"
                 : SynExpr));
# 6694 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1790 "Parser.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 2
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             let spBind = SequencePointAtForLoop(mForLoopHeader)
                             SynExpr.For(spBind,mkSynId mForLoopHeader "_loopVar",arbExpr("startLoopRange1",mForLoopHeader),true,arbExpr("endLoopRange1",rhs parseState 3),_4,mForLoopAll) 
                   )
# 1790 "Parser.fsy"
                 : SynExpr));
# 6711 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1809 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsIdentifierExpected())
                             arbExpr("declExpr12",(rhs parseState 1)) 
                   )
# 1809 "Parser.fsy"
                 : SynExpr));
# 6723 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1813 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsInOrEqualExpected())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 4
                             let mForLoopAll = rhs2 parseState 1 4
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll) 
                   )
# 1813 "Parser.fsy"
                 : SynExpr));
# 6740 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1821 "Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = (rhs parseState 2)
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll)) 
                   )
# 1821 "Parser.fsy"
                 : SynExpr));
# 6757 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicSingleLineQualifiersThenArrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1829 "Parser.fsy"
                            let spBind = SequencePointAtForLoop(rhs2 parseState 1 2)
                            let (a,b,_) = _2 in SynExpr.ForEach(spBind,SeqExprOnly true,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 1829 "Parser.fsy"
                 : SynExpr));
# 6771 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1832 "Parser.fsy"
                                                             SynExpr.Upcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 1832 "Parser.fsy"
                 : SynExpr));
# 6783 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1835 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ":=" _3 
                   )
# 1835 "Parser.fsy"
                 : SynExpr));
# 6795 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1837 "Parser.fsy"
                                                        let exprs,commas = _1 in SynExpr.Tuple(List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ) 
                   )
# 1837 "Parser.fsy"
                 : SynExpr));
# 6806 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1841 "Parser.fsy"
                                                                    SynExpr.JoinIn(_1,rhs parseState 2,_3,unionRanges _1.Range _3.Range) 
                   )
# 1841 "Parser.fsy"
                 : SynExpr));
# 6818 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1842 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "||" _3 
                   )
# 1842 "Parser.fsy"
                 : SynExpr));
# 6830 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1843 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1843 "Parser.fsy"
                 : SynExpr));
# 6843 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1844 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "or" _3 
                   )
# 1844 "Parser.fsy"
                 : SynExpr));
# 6855 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1845 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&" _3 
                   )
# 1845 "Parser.fsy"
                 : SynExpr));
# 6867 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1846 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&&" _3 
                   )
# 1846 "Parser.fsy"
                 : SynExpr));
# 6879 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1847 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1847 "Parser.fsy"
                 : SynExpr));
# 6892 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1848 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "=" _3 
                   )
# 1848 "Parser.fsy"
                 : SynExpr));
# 6904 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1849 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1849 "Parser.fsy"
                 : SynExpr));
# 6917 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1850 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "$" _3 
                   )
# 1850 "Parser.fsy"
                 : SynExpr));
# 6929 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1851 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "<" _3 
                   )
# 1851 "Parser.fsy"
                 : SynExpr));
# 6942 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1852 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ">" _3 
                   )
# 1852 "Parser.fsy"
                 : SynExpr));
# 6955 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1853 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1853 "Parser.fsy"
                 : SynExpr));
# 6968 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1854 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1854 "Parser.fsy"
                 : SynExpr));
# 6981 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1855 "Parser.fsy"
                                                                    SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;_3],[rhs parseState 2],unionRanges _1.Range _3.Range),unionRanges _1.Range _3.Range) 
                   )
# 1855 "Parser.fsy"
                 : SynExpr));
# 6993 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1856 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1856 "Parser.fsy"
                 : SynExpr));
# 7006 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1857 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "-" _3 
                   )
# 1857 "Parser.fsy"
                 : SynExpr));
# 7018 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1858 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "*" _3 
                   )
# 1858 "Parser.fsy"
                 : SynExpr));
# 7030 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1859 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1859 "Parser.fsy"
                 : SynExpr));
# 7043 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1860 "Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1860 "Parser.fsy"
                 : SynExpr));
# 7056 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1862 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("in")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "@in" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1862 "Parser.fsy"
                 : SynExpr));
# 7068 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1864 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("||")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "||" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1864 "Parser.fsy"
                 : SynExpr));
# 7080 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1866 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1866 "Parser.fsy"
                 : SynExpr));
# 7093 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1868 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("or")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "or" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1868 "Parser.fsy"
                 : SynExpr));
# 7105 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1870 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1870 "Parser.fsy"
                 : SynExpr));
# 7117 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1872 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&&" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1872 "Parser.fsy"
                 : SynExpr));
# 7129 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1874 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1874 "Parser.fsy"
                 : SynExpr));
# 7142 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1876 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("=")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "=" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1876 "Parser.fsy"
                 : SynExpr));
# 7154 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1878 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1878 "Parser.fsy"
                 : SynExpr));
# 7167 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1880 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("$")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "$" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1880 "Parser.fsy"
                 : SynExpr));
# 7179 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1882 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1882 "Parser.fsy"
                 : SynExpr));
# 7192 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1884 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(">")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 ">" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1884 "Parser.fsy"
                 : SynExpr));
# 7205 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1886 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1886 "Parser.fsy"
                 : SynExpr));
# 7218 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1888 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1888 "Parser.fsy"
                 : SynExpr));
# 7231 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1890 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("::")); 
                                                                                 SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;(arbExpr("declExprInfix",(rhs parseState 3)))],[rhs parseState 2],unionRanges _1.Range (rhs parseState 3)),unionRanges _1.Range (rhs parseState 3)) 
                   )
# 1890 "Parser.fsy"
                 : SynExpr));
# 7243 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1892 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1892 "Parser.fsy"
                 : SynExpr));
# 7256 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1894 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("-")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "-" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1894 "Parser.fsy"
                 : SynExpr));
# 7268 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1896 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("*")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "*" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1896 "Parser.fsy"
                 : SynExpr));
# 7280 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1898 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1898 "Parser.fsy"
                 : SynExpr));
# 7293 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1900 "Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1900 "Parser.fsy"
                 : SynExpr));
# 7306 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1903 "Parser.fsy"
                                                                  _1 
                   )
# 1903 "Parser.fsy"
                 : SynExpr));
# 7317 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1908 "Parser.fsy"
                             let con = SynConst.String (_1,rhs parseState 1)
                             let arg2 = SynExpr.Const (con,con.Range (rhs parseState 1)) 
                             arg2 
                   )
# 1908 "Parser.fsy"
                 : 'dynamicArg));
# 7330 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1912 "Parser.fsy"
                             _2 
                   )
# 1912 "Parser.fsy"
                 : 'dynamicArg));
# 7342 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1916 "Parser.fsy"
                             rhs parseState 1, _2 
                   )
# 1916 "Parser.fsy"
                 : 'withClauses));
# 7353 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1918 "Parser.fsy"
                             rhs parseState 1, _2 
                   )
# 1918 "Parser.fsy"
                 : 'withClauses));
# 7364 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1920 "Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWith());
                             rhs parseState 1, _2 
                   )
# 1920 "Parser.fsy"
                 : 'withClauses));
# 7377 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1925 "Parser.fsy"
                             _1 
                   )
# 1925 "Parser.fsy"
                 : 'withPatternClauses));
# 7388 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1927 "Parser.fsy"
                              _2 
                   )
# 1927 "Parser.fsy"
                 : 'withPatternClauses));
# 7399 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1929 "Parser.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 1929 "Parser.fsy"
                 : 'withPatternClauses));
# 7411 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1933 "Parser.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 1933 "Parser.fsy"
                 : 'withPatternClauses));
# 7423 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1940 "Parser.fsy"
                             _1, _2, rhs parseState 1 
                   )
# 1940 "Parser.fsy"
                 : 'patternAndGuard));
# 7435 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1944 "Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 1944 "Parser.fsy"
                 : 'patternClauses));
# 7449 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1948 "Parser.fsy"
                            let pat,guard,patm = _1 
                            let clauses,mLast = _4 
                            (Clause(pat,guard,_2,patm,SequencePointAtTarget) :: clauses), mLast 
                   )
# 1948 "Parser.fsy"
                 : 'patternClauses));
# 7464 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1952 "Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 3 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 1952 "Parser.fsy"
                 : 'patternClauses));
# 7479 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1957 "Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast 
                   )
# 1957 "Parser.fsy"
                 : 'patternClauses));
# 7494 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1962 "Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 2
                            // silent recovery 
                            [Clause(pat,guard,SynExpr.Const(SynConst.Unit,mLast),patm,SequencePointAtTarget)], mLast 
                   )
# 1962 "Parser.fsy"
                 : 'patternClauses));
# 7508 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1969 "Parser.fsy"
                            Some _2 
                   )
# 1969 "Parser.fsy"
                 : 'patternGuard));
# 7519 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1971 "Parser.fsy"
                            None 
                   )
# 1971 "Parser.fsy"
                 : 'patternGuard));
# 7529 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1975 "Parser.fsy"
                            _2 
                   )
# 1975 "Parser.fsy"
                 : SynExpr));
# 7540 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromTupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1980 "Parser.fsy"
                                         let exprs = _1 
                                         exprs 
                   )
# 1980 "Parser.fsy"
                 : 'fromExprCondition));
# 7552 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1988 "Parser.fsy"
                             let exprThen,mThen = _1 
                             (fun exprGuard mIf -> 
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match _2 with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = SequencePointAtBinding(mIfToThen)
                                 SynExpr.IfThenElse(exprGuard,exprThen,_2,spIfToThen,false,mIfToThen,mIfToEndOfLastBranch)) 
                   )
# 1988 "Parser.fsy"
                 : 'ifExprCases));
# 7570 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1998 "Parser.fsy"
                             _2, rhs parseState 1 
                   )
# 1998 "Parser.fsy"
                 : 'ifExprThen));
# 7581 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2000 "Parser.fsy"
                             _3,rhs parseState 1 
                   )
# 2000 "Parser.fsy"
                 : 'ifExprThen));
# 7593 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2002 "Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen());
                             exprFromParseError _3,rhs parseState 1 
                   )
# 2002 "Parser.fsy"
                 : 'ifExprThen));
# 7606 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2007 "Parser.fsy"
                             None 
                   )
# 2007 "Parser.fsy"
                 : 'ifExprElifs));
# 7616 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2009 "Parser.fsy"
                             Some _2 
                   )
# 2009 "Parser.fsy"
                 : 'ifExprElifs));
# 7627 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2011 "Parser.fsy"
                             Some _3 
                   )
# 2011 "Parser.fsy"
                 : 'ifExprElifs));
# 7639 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2013 "Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileElse());
                             Some (exprFromParseError _3) 
                   )
# 2013 "Parser.fsy"
                 : 'ifExprElifs));
# 7652 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2016 "Parser.fsy"
                             let mElif = rhs parseState 1 
                             Some (_3 _2 mElif) 
                   )
# 2016 "Parser.fsy"
                 : 'ifExprElifs));
# 7665 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2019 "Parser.fsy"
                             Some (exprFromParseError _2) 
                   )
# 2019 "Parser.fsy"
                 : 'ifExprElifs));
# 7677 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2024 "Parser.fsy"
                             let patterns,commas = _1 in (_3 :: patterns),((rhs parseState 2)::commas) 
                   )
# 2024 "Parser.fsy"
                 : 'tuplePat));
# 7689 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2035 "Parser.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
# 2035 "Parser.fsy"
                 : 'tuplePat));
# 7701 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2039 "Parser.fsy"
                             let exprs,commas = _1 in (_3 :: exprs),((rhs parseState 2)::commas) 
                   )
# 2039 "Parser.fsy"
                 : 'tupleExpr));
# 7713 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2050 "Parser.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
# 2050 "Parser.fsy"
                 : 'tupleExpr));
# 7725 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2054 "Parser.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
# 2054 "Parser.fsy"
                 : SynExpr));
# 7736 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2056 "Parser.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 2056 "Parser.fsy"
                 : SynExpr));
# 7749 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2059 "Parser.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 2059 "Parser.fsy"
                 : SynExpr));
# 7762 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2062 "Parser.fsy"
                             SynExpr.New(false,_2,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2062 "Parser.fsy"
                 : SynExpr));
# 7775 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2064 "Parser.fsy"
                             SynExpr.New(false,_2,arbExpr("minusExpr",(rhs parseState 4)),unionRanges (rhs parseState 1) (_2).Range) 
                   )
# 2064 "Parser.fsy"
                 : SynExpr));
# 7787 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2066 "Parser.fsy"
                             arbExpr("minusExpr2",(rhs parseState 1)) 
                   )
# 2066 "Parser.fsy"
                 : SynExpr));
# 7797 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2068 "Parser.fsy"
                             SynExpr.InferredUpcast(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2068 "Parser.fsy"
                 : SynExpr));
# 7808 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2070 "Parser.fsy"
                            _1 
                   )
# 2070 "Parser.fsy"
                 : SynExpr));
# 7819 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2074 "Parser.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, false, _1,_2,unionRanges _1.Range _2.Range)  
                   )
# 2074 "Parser.fsy"
                 : SynExpr));
# 7831 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2076 "Parser.fsy"
                             let arg,_ = _1 
                             arg 
                   )
# 2076 "Parser.fsy"
                 : SynExpr));
# 7843 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2081 "Parser.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~"^(_1)) arg2 
                   )
# 2081 "Parser.fsy"
                 : SynExpr));
# 7858 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2086 "Parser.fsy"
                             let arg,hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             arg 
                   )
# 2086 "Parser.fsy"
                 : SynExpr));
# 7871 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2093 "Parser.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 2093 "Parser.fsy"
                 : SynExpr * bool));
# 7885 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2098 "Parser.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 2098 "Parser.fsy"
                 : SynExpr * bool));
# 7899 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * bool     * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2103 "Parser.fsy"
                             let arg1,_ = _1 
                             let mLessThan,mGreaterThan,_,args,commas,mTypeArgs = _3
                             let mWholeExpr = unionRanges arg1.Range mTypeArgs
                             SynExpr.TypeApp(arg1, mLessThan, args, commas, mGreaterThan, mTypeArgs, mWholeExpr), false 
                   )
# 2103 "Parser.fsy"
                 : SynExpr * bool));
# 7914 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2109 "Parser.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2,hpa2 
                   )
# 2109 "Parser.fsy"
                 : SynExpr * bool));
# 7928 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2114 "Parser.fsy"
                             let arg1,hpa1 = _1 
                             _3 arg1 (lhs parseState) (rhs parseState 2),hpa1 
                   )
# 2114 "Parser.fsy"
                 : SynExpr * bool));
# 7941 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2117 "Parser.fsy"
                             let arg1 = SynExpr.Ident(ident("base",rhs parseState 1))
                             _3 arg1 (lhs parseState) (rhs parseState 2),false 
                   )
# 2117 "Parser.fsy"
                 : SynExpr * bool));
# 7953 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2120 "Parser.fsy"
                             SynExpr.LongIdent (true,LongIdentWithDots([_2],[]),None,rhs parseState 2),false 
                   )
# 2120 "Parser.fsy"
                 : SynExpr * bool));
# 7964 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2122 "Parser.fsy"
                             let arg1,hpa1 = _1
                             mkSynInfix (rhs parseState 2) arg1 "?" _3, hpa1 
                   )
# 2122 "Parser.fsy"
                 : SynExpr * bool));
# 7977 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2125 "Parser.fsy"
                             SynExpr.Ident (ident(MangledGlobalName,rhs parseState 1)), false 
                   )
# 2125 "Parser.fsy"
                 : SynExpr * bool));
# 7987 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2127 "Parser.fsy"
                             SynExpr.Ident (_1),false 
                   )
# 2127 "Parser.fsy"
                 : SynExpr * bool));
# 7998 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2129 "Parser.fsy"
                             _2 (lhs parseState) false,false 
                   )
# 2129 "Parser.fsy"
                 : SynExpr * bool));
# 8009 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2131 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) false), false 
                   )
# 2131 "Parser.fsy"
                 : SynExpr * bool));
# 8022 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2134 "Parser.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList(false,[ ], lhs parseState),false  
                   )
# 2134 "Parser.fsy"
                 : SynExpr * bool));
# 8033 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2137 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             // silent recovery 
                             exprFromParseError (SynExpr.ArrayOrList(false,[ ], rhs parseState 1)),false  
                   )
# 2137 "Parser.fsy"
                 : SynExpr * bool));
# 8046 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2141 "Parser.fsy"
                             _1,false 
                   )
# 2141 "Parser.fsy"
                 : SynExpr * bool));
# 8057 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2145 "Parser.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e _1) 
                   )
# 2145 "Parser.fsy"
                 : 'atomicExprQualification));
# 8069 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2148 "Parser.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e (Ident("Create",idm))) 
                   )
# 2148 "Parser.fsy"
                 : 'atomicExprQualification));
# 8080 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2151 "Parser.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm dotm // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
# 2151 "Parser.fsy"
                 : 'atomicExprQualification));
# 8093 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2156 "Parser.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm dotm // previous lhsm is wrong after 'recover'
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterMissingQualificationAfterDot(e,fixedLhsm)) 
                   )
# 2156 "Parser.fsy"
                 : 'atomicExprQualification));
# 8108 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2162 "Parser.fsy"
                             (fun e lhsm dotm -> 
                                 mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs parseState); 
                                 mkSynDotParenGet lhsm dotm e _2) 
                   )
# 2162 "Parser.fsy"
                 : 'atomicExprQualification));
# 8122 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2166 "Parser.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e _2) 
                   )
# 2166 "Parser.fsy"
                 : 'atomicExprQualification));
# 8133 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2169 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e _2)) 
                   )
# 2169 "Parser.fsy"
                 : 'atomicExprQualification));
# 8146 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2173 "Parser.fsy"
                             let mArg = rhs2 parseState 1 3
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr1",mArg))) 
                   )
# 2173 "Parser.fsy"
                 : 'atomicExprQualification));
# 8157 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2176 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket())
                             let mArg = (rhs parseState 1) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr2",mArg)))) 
                   )
# 2176 "Parser.fsy"
                 : 'atomicExprQualification));
# 8170 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2180 "Parser.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSliceGet lhsm dotm e _2) 
                   )
# 2180 "Parser.fsy"
                 : 'atomicExprQualification));
# 8181 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2184 "Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 3) (Some _3) 
                   )
# 2184 "Parser.fsy"
                 : 'optRange));
# 8193 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2186 "Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 2) None 
                   )
# 2186 "Parser.fsy"
                 : 'optRange));
# 8204 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2188 "Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 2) (Some _2) 
                   )
# 2188 "Parser.fsy"
                 : 'optRange));
# 8215 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2190 "Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 1) None 
                   )
# 2190 "Parser.fsy"
                 : 'optRange));
# 8225 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2196 "Parser.fsy"
                             SynExpr.Const (_1,_1.Range (lhs parseState)) 
                   )
# 2196 "Parser.fsy"
                 : SynExpr));
# 8236 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2198 "Parser.fsy"
                             _1 
                   )
# 2198 "Parser.fsy"
                 : SynExpr));
# 8247 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2200 "Parser.fsy"
                             _1 
                   )
# 2200 "Parser.fsy"
                 : SynExpr));
# 8258 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2202 "Parser.fsy"
                             SynExpr.Null(lhs parseState) 
                   )
# 2202 "Parser.fsy"
                 : SynExpr));
# 8268 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2204 "Parser.fsy"
                             SynExpr.Const(SynConst.Bool false,lhs parseState) 
                   )
# 2204 "Parser.fsy"
                 : SynExpr));
# 8278 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2206 "Parser.fsy"
                             SynExpr.Const(SynConst.Bool true,lhs parseState) 
                   )
# 2206 "Parser.fsy"
                 : SynExpr));
# 8288 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2208 "Parser.fsy"
                             _1 
                   )
# 2208 "Parser.fsy"
                 : SynExpr));
# 8299 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2210 "Parser.fsy"
                             _1 
                   )
# 2210 "Parser.fsy"
                 : SynExpr));
# 8310 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2214 "Parser.fsy"
                             SynExpr.Paren(_2, rhs parseState 1, Some(rhs parseState 3), rhs2 parseState 1 3) 
                   )
# 2214 "Parser.fsy"
                 : 'beginEndExpr));
# 8321 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2216 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); exprFromParseError _2 
                   )
# 2216 "Parser.fsy"
                 : 'beginEndExpr));
# 8333 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2218 "Parser.fsy"
                             (* silent recovery *) arbExpr("beginEndExpr",(lhs parseState))  
                   )
# 2218 "Parser.fsy"
                 : 'beginEndExpr));
# 8343 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2220 "Parser.fsy"
                             mkSynUnit (lhs parseState) 
                   )
# 2220 "Parser.fsy"
                 : 'beginEndExpr));
# 8353 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2224 "Parser.fsy"
                              _2 (lhs parseState) true 
                   )
# 2224 "Parser.fsy"
                 : 'arrayExpr));
# 8364 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2226 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) true) 
                   )
# 2226 "Parser.fsy"
                 : 'arrayExpr));
# 8377 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2229 "Parser.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList(true,[ ], lhs parseState) 
                   )
# 2229 "Parser.fsy"
                 : 'arrayExpr));
# 8387 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2231 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar());  
                             (* silent recovery *) 
                             exprFromParseError (SynExpr.ArrayOrList(true,[ ], rhs parseState 1)) 
                   )
# 2231 "Parser.fsy"
                 : 'arrayExpr));
# 8400 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2237 "Parser.fsy"
                             SynExpr.Const(SynConst.Unit,(rhs2 parseState 1 2)) 
                   )
# 2237 "Parser.fsy"
                 : 'parenExpr));
# 8411 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2239 "Parser.fsy"
                             let m = rhs2 parseState 1 3
                             SynExpr.Paren(_2 m, rhs parseState 1, Some(rhs parseState 3), m) 
                   )
# 2239 "Parser.fsy"
                 : 'parenExpr));
# 8424 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_other_than_rparen_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2242 "Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 3)
                             SynExpr.Paren(exprFromParseError (_2 lhsm), rhs parseState 1, None, lhsm) 
                   )
# 2242 "Parser.fsy"
                 : 'parenExpr));
# 8438 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2246 "Parser.fsy"
                             // silent recovery
                             SynExpr.Paren(arbExpr("parenExpr1",(rhs parseState 1)),(rhs parseState 1),Some(rhs parseState 3),(rhs2 parseState 1 3)) 
                   )
# 2246 "Parser.fsy"
                 : 'parenExpr));
# 8450 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2249 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2tcs", lhsm) 
                   )
# 2249 "Parser.fsy"
                 : 'parenExpr));
# 8462 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2253 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2mcs", lhsm) 
                   )
# 2253 "Parser.fsy"
                 : 'parenExpr));
# 8474 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2257 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2rbcs", lhsm) 
                   )
# 2257 "Parser.fsy"
                 : 'parenExpr));
# 8486 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2261 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2obecs", lhsm) 
                   )
# 2261 "Parser.fsy"
                 : 'parenExpr));
# 8498 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2265 "Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             arbExpr("parenExpr2",(lhs parseState))  
                   )
# 2265 "Parser.fsy"
                 : 'parenExpr));
# 8510 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2277 "Parser.fsy"
                             (fun _m -> _1) 
                   )
# 2277 "Parser.fsy"
                 : 'parenExprBody));
# 8521 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2281 "Parser.fsy"
                             [_1] 
                   )
# 2281 "Parser.fsy"
                 : 'staticallyKnownHeadTypars));
# 8532 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2283 "Parser.fsy"
                             List.rev _2 
                   )
# 2283 "Parser.fsy"
                 : 'staticallyKnownHeadTypars));
# 8544 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2287 "Parser.fsy"
                            _3 :: _1
                   )
# 2287 "Parser.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 8556 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2289 "Parser.fsy"
                             [_1] 
                   )
# 2289 "Parser.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 8567 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2293 "Parser.fsy"
                             let m,r = _2 in r (rhs2 parseState 1 3) 
                   )
# 2293 "Parser.fsy"
                 : 'braceExpr));
# 8579 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2295 "Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            let m,r = _2 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            r (unionRanges (rhs parseState 1) m) 
                   )
# 2295 "Parser.fsy"
                 : 'braceExpr));
# 8594 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2300 "Parser.fsy"
                            // silent recovery 
                            arbExpr("braceExpr",rhs2 parseState 1 3)  
                   )
# 2300 "Parser.fsy"
                 : 'braceExpr));
# 8606 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2303 "Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            SynExpr.Record(None,None,[],rhs parseState 1) 
                   )
# 2303 "Parser.fsy"
                 : 'braceExpr));
# 8619 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2307 "Parser.fsy"
                             let m = rhs2 parseState 1 2 
                             SynExpr.Record(None,None,[],m) 
                   )
# 2307 "Parser.fsy"
                 : 'braceExpr));
# 8631 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2312 "Parser.fsy"
                             (lhs parseState), (fun m -> let a,b,c = _1 in SynExpr.Record(a,b,c,m)) 
                   )
# 2312 "Parser.fsy"
                 : 'braceExprBody));
# 8642 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2314 "Parser.fsy"
                            let m,r = _1 in (m, r false) 
                   )
# 2314 "Parser.fsy"
                 : 'braceExprBody));
# 8653 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2318 "Parser.fsy"
                            let m,r = _1 in (m, r false) 
                   )
# 2318 "Parser.fsy"
                 : 'monadicExprBody));
# 8664 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2322 "Parser.fsy"
                            let m,r = _1 in (fun lhsm isArray -> SynExpr.ArrayOrListOfSeqExpr(isArray, r true m, lhsm)) 
                   )
# 2322 "Parser.fsy"
                 : 'listExprElements));
# 8675 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2324 "Parser.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrList(isArray,[ ], lhsm)) 
                   )
# 2324 "Parser.fsy"
                 : 'listExprElements));
# 8685 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2328 "Parser.fsy"
                            _1.Range, (fun isArrayOrList lhsm -> SynExpr.CompExpr(isArrayOrList,ref(isArrayOrList),_1,lhsm)) 
                   )
# 2328 "Parser.fsy"
                 : 'monadicExprInitial));
# 8696 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2330 "Parser.fsy"
                            _1 
                   )
# 2330 "Parser.fsy"
                 : 'monadicExprInitial));
# 8707 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2334 "Parser.fsy"
                            let opm = (rhs parseState 2)
                            (unionRanges _1.Range _3.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the Position of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that Position here
                                                                     match (mkSynInfix opm _1 ".." _3) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 2334 "Parser.fsy"
                 : 'rangeSequenceExpr));
# 8725 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2342 "Parser.fsy"
                            (unionRanges _1.Range _5.Range),(fun _isArray wholem -> mkSynTrifix wholem ".. .." _1 _3 _5) 
                   )
# 2342 "Parser.fsy"
                 : 'rangeSequenceExpr));
# 8738 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2345 "Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                            let opm = (rhs parseState 2)
                            let e = arbExpr("rangeSeqError1", (rhs parseState 3))
                            (unionRanges _1.Range e.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the Position of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that Position here
                                                                     match (mkSynInfix opm _1 ".." e) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 2345 "Parser.fsy"
                 : 'rangeSequenceExpr));
# 8758 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2361 "Parser.fsy"
                            SynExpr.YieldOrReturn((true,false), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2361 "Parser.fsy"
                 : 'monadicSingleLineQualifiersThenArrowThenExprR));
# 8769 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2367 "Parser.fsy"
                            (_1, _3, true) 
                   )
# 2367 "Parser.fsy"
                 : 'forLoopBinder));
# 8781 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2369 "Parser.fsy"
                            let m,r = _3 in (_1, r false m, true) 
                   )
# 2369 "Parser.fsy"
                 : 'forLoopBinder));
# 8793 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2371 "Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder",(rhs parseState 2)), false) 
                   )
# 2371 "Parser.fsy"
                 : 'forLoopBinder));
# 8806 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2374 "Parser.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2",(rhs parseState 1)), false) 
                   )
# 2374 "Parser.fsy"
                 : 'forLoopBinder));
# 8819 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2379 "Parser.fsy"
                            (_1, _3) 
                   )
# 2379 "Parser.fsy"
                 : 'fromLoopBinder));
# 8831 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2381 "Parser.fsy"
                            let m,r = _3 in (_1, r false m) 
                   )
# 2381 "Parser.fsy"
                 : 'fromLoopBinder));
# 8843 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2383 "Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder",(rhs parseState 2))) 
                   )
# 2383 "Parser.fsy"
                 : 'fromLoopBinder));
# 8856 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2386 "Parser.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2",(rhs parseState 1))) 
                   )
# 2386 "Parser.fsy"
                 : 'fromLoopBinder));
# 8869 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromTupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2391 "Parser.fsy"
                             let exprs = _1
                             let exprs = exprs
                             _3 :: exprs 
                   )
# 2391 "Parser.fsy"
                 : 'fromTupleExpr));
# 8883 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2404 "Parser.fsy"
                             [_1] 
                   )
# 2404 "Parser.fsy"
                 : 'fromTupleExpr));
# 8894 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2406 "Parser.fsy"
                             [_3 ; _1] 
                   )
# 2406 "Parser.fsy"
                 : 'fromTupleExpr));
# 8906 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2410 "Parser.fsy"
                             idOfPat (rhs parseState 1) _1,_3,_4,_5 
                   )
# 2410 "Parser.fsy"
                 : 'forLoopRange));
# 8920 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2413 "Parser.fsy"
                                                                        _2 :: _1 
                   )
# 2413 "Parser.fsy"
                 : 'opt_curriedArgExprs));
# 8932 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2414 "Parser.fsy"
                            [] 
                   )
# 2414 "Parser.fsy"
                 : 'opt_curriedArgExprs));
# 8942 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2417 "Parser.fsy"
                            None 
                   )
# 2417 "Parser.fsy"
                 : 'opt_atomicExprAfterType));
# 8952 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2418 "Parser.fsy"
                                                Some(_1) 
                   )
# 2418 "Parser.fsy"
                 : 'opt_atomicExprAfterType));
# 8963 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2422 "Parser.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs parseState) | Some e -> e 
                            let l = List.rev _5
                            let dummyField = mkRecdField (LongIdentWithDots([], [])) // dummy identifier, it will be discarded
                            let l = rebindRanges (dummyField, None) l _6 
                            let (_, _, inheritsSep) = List.head l
                            let bindings = List.tail l
                            (Some (_2,arg,rhs2 parseState 2 4, inheritsSep, rhs parseState 1), None, bindings) 
                   )
# 2422 "Parser.fsy"
                 : 'recdExpr));
# 8984 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2431 "Parser.fsy"
                            match _1 with 
                            
                            | LongOrSingleIdent(false, (LongIdentWithDots(_,_) as f),None,m) ->  
                                 let f = mkRecdField f
                                 let l = List.rev _4
                                 let l = rebindRanges (f, Some _3) l _5
                                 (None, None, l)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
# 2431 "Parser.fsy"
                 : 'recdExpr));
# 9005 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2445 "Parser.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           reportParseErrorAt m (FSComp.SR.parsFieldBinding())
                           let f = mkUnderscoreRecdField m
                           (None, None, [ f, None, None  ]) 
                   )
# 2445 "Parser.fsy"
                 : 'recdExpr));
# 9019 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2452 "Parser.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())      
                           let f = mkUnderscoreRecdField m
                           reportParseErrorAt (rhs2 parseState 1 2) (FSComp.SR.parsFieldBinding())
                           
                           (None, None, [f, None, None]) 
                   )
# 2452 "Parser.fsy"
                 : 'recdExpr));
# 9034 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2461 "Parser.fsy"
                           reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnderscoreInvalidFieldName())
                           let f = mkUnderscoreRecdField (rhs parseState 1)
                           let l = List.rev _4
                           let l = rebindRanges (f, Some _3) l _5
                           (None, None, l) 
                   )
# 2461 "Parser.fsy"
                 : 'recdExpr));
# 9051 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2471 "Parser.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 2471 "Parser.fsy"
                 : 'recdExpr));
# 9067 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2476 "Parser.fsy"
                            
                             (None,Some (_1, (rhs parseState 2, None)), []) 
                   )
# 2476 "Parser.fsy"
                 : 'recdExpr));
# 9080 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2480 "Parser.fsy"
                            
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 2480 "Parser.fsy"
                 : 'recdExpr));
# 9097 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2486 "Parser.fsy"
                                     Some _1 
                   )
# 2486 "Parser.fsy"
                 : 'opt_seps_recd));
# 9108 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2487 "Parser.fsy"
                           None 
                   )
# 2487 "Parser.fsy"
                 : 'opt_seps_recd));
# 9118 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2490 "Parser.fsy"
                                     (rhs parseState 1), None 
                   )
# 2490 "Parser.fsy"
                 : 'seps_recd));
# 9128 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2491 "Parser.fsy"
                                      let m = (rhs parseState 1) in (m, Some m) 
                   )
# 2491 "Parser.fsy"
                 : 'seps_recd));
# 9138 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2492 "Parser.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 1) 
                   )
# 2492 "Parser.fsy"
                 : 'seps_recd));
# 9148 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2493 "Parser.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 2) 
                   )
# 2493 "Parser.fsy"
                 : 'seps_recd));
# 9158 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2499 "Parser.fsy"
                                mkRecdField _1 
                   )
# 2499 "Parser.fsy"
                 : 'pathOrUnderscore));
# 9169 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2501 "Parser.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           mkUnderscoreRecdField m 
                   )
# 2501 "Parser.fsy"
                 : 'pathOrUnderscore));
# 9181 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2507 "Parser.fsy"
                            (_3, Some _2) :: _1 
                   )
# 2507 "Parser.fsy"
                 : 'recdExprBindings));
# 9194 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2508 "Parser.fsy"
                            [] 
                   )
# 2508 "Parser.fsy"
                 : 'recdExprBindings));
# 9204 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2512 "Parser.fsy"
                             (_1, Some _3) 
                   )
# 2512 "Parser.fsy"
                 : 'recdBinding));
# 9216 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2514 "Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2514 "Parser.fsy"
                 : 'recdBinding));
# 9230 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2519 "Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2519 "Parser.fsy"
                 : 'recdBinding));
# 9245 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2524 "Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2524 "Parser.fsy"
                 : 'recdBinding));
# 9259 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2529 "Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2529 "Parser.fsy"
                 : 'recdBinding));
# 9274 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2542 "Parser.fsy"
                                  true 
                   )
# 2542 "Parser.fsy"
                 : 'forLoopDirection));
# 9284 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2543 "Parser.fsy"
                                  false 
                   )
# 2543 "Parser.fsy"
                 : 'forLoopDirection));
# 9294 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2549 "Parser.fsy"
                                                          _1 
                   )
# 2549 "Parser.fsy"
                 : 'typeWithTypeConstraints));
# 9305 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2553 "Parser.fsy"
                            _1 
                   )
# 2553 "Parser.fsy"
                 : 'topTypeWithTypeConstraints));
# 9316 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2557 "Parser.fsy"
                            None 
                   )
# 2557 "Parser.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 9326 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2559 "Parser.fsy"
                            let ty,arity = _2 
                            let arity = (match arity with SynValInfo([],rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty,arity),rhs parseState 2)) 
                   )
# 2559 "Parser.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 9339 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2565 "Parser.fsy"
                            let dty,dmdata= _1 
                            let rty,(SynValInfo(dmdatas,rmdata)) = _3 
                            SynType.Fun(dty,rty,lhs parseState), (SynValInfo(dmdata::dmdatas, rmdata)) 
                   )
# 2565 "Parser.fsy"
                 : 'topType));
# 9353 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2569 "Parser.fsy"
                            let ty,rmdata = _1 in ty, (SynValInfo([],(match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
# 2569 "Parser.fsy"
                 : 'topType));
# 9364 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2573 "Parser.fsy"
                            let ty,mdata = _1 in let tys,mdatas = List.unzip _3 in (SynType.Tuple(List.map (fun ty -> (false,ty)) (ty ::tys), lhs parseState)),(mdata :: mdatas) 
                   )
# 2573 "Parser.fsy"
                 : 'topTupleType));
# 9376 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2575 "Parser.fsy"
                            let ty,mdata = _1 in ty,[mdata] 
                   )
# 2575 "Parser.fsy"
                 : 'topTupleType));
# 9387 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2578 "Parser.fsy"
                                                                      _1 :: _3 
                   )
# 2578 "Parser.fsy"
                 : 'topTupleTypeElements));
# 9399 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2579 "Parser.fsy"
                                                                      [_1] 
                   )
# 2579 "Parser.fsy"
                 : 'topTupleTypeElements));
# 9410 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2584 "Parser.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _3,SynArgInfo(false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 2584 "Parser.fsy"
                 : 'topAppType));
# 9424 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2588 "Parser.fsy"
                            _4,SynArgInfo(true,Some _2) 
                   )
# 2588 "Parser.fsy"
                 : 'topAppType));
# 9436 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2590 "Parser.fsy"
                            (_1,SynArgInfo(false,None)) 
                   )
# 2590 "Parser.fsy"
                 : 'topAppType));
# 9447 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2592 "Parser.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _3,SynArgInfo(false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 2592 "Parser.fsy"
                 : 'topAppType));
# 9461 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2596 "Parser.fsy"
                            _4,SynArgInfo(true,Some _2) 
                   )
# 2596 "Parser.fsy"
                 : 'topAppType));
# 9473 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2598 "Parser.fsy"
                            _1,SynArgInfo(false,None) 
                   )
# 2598 "Parser.fsy"
                 : 'topAppType));
# 9484 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2603 "Parser.fsy"
                                                 SynType.Fun(_1,_3,lhs parseState) 
                   )
# 2603 "Parser.fsy"
                 : SynType));
# 9496 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2604 "Parser.fsy"
                                                           _1 
                   )
# 2604 "Parser.fsy"
                 : SynType));
# 9507 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2608 "Parser.fsy"
                                                                SynType.Tuple((false,_1) :: _3,lhs parseState) 
                   )
# 2608 "Parser.fsy"
                 : 'tupleType));
# 9519 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2611 "Parser.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple((true, SynType.StaticConstant (SynConst.Int32 1, lhs parseState)):: _2, lhs parseState) 
                   )
# 2611 "Parser.fsy"
                 : 'tupleType));
# 9532 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2615 "Parser.fsy"
                             if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                             SynType.Tuple((true,_1) :: _3, lhs parseState) 
                   )
# 2615 "Parser.fsy"
                 : 'tupleType));
# 9546 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2617 "Parser.fsy"
                                                            _1 
                   )
# 2617 "Parser.fsy"
                 : 'tupleType));
# 9557 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2620 "Parser.fsy"
                                                                             (false,_1) :: _3 
                   )
# 2620 "Parser.fsy"
                 : 'tupleOrQuotTypeElements));
# 9569 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2622 "Parser.fsy"
                             if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                             (true,_1) :: _3 
                   )
# 2622 "Parser.fsy"
                 : 'tupleOrQuotTypeElements));
# 9583 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2624 "Parser.fsy"
                                                                [(false,_1)] 
                   )
# 2624 "Parser.fsy"
                 : 'tupleOrQuotTypeElements));
# 9594 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2627 "Parser.fsy"
                                                                       _1 :: _3 
                   )
# 2627 "Parser.fsy"
                 : 'tupleTypeElements));
# 9606 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2628 "Parser.fsy"
                                                                [_1] 
                   )
# 2628 "Parser.fsy"
                 : 'tupleTypeElements));
# 9617 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2632 "Parser.fsy"
                             SynType.LongIdent(_1) 
                   )
# 2632 "Parser.fsy"
                 : 'appTypeCon));
# 9628 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2636 "Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, -(fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState)  
                   )
# 2636 "Parser.fsy"
                 : 'appTypeConPower));
# 9643 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2640 "Parser.fsy"
                           _1 
                   )
# 2640 "Parser.fsy"
                 : 'appTypeConPower));
# 9654 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2644 "Parser.fsy"
                            
                             let Position = lhs parseState
                             SynType.App(SynType.LongIdent(LongIdentWithDots([Ident("list", Position)], [])),
                                         None, [_2], [], None, true, Position)
                           
                   )
# 2644 "Parser.fsy"
                 : 'appType));
# 9669 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2650 "Parser.fsy"
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 2650 "Parser.fsy"
                 : 'appType));
# 9681 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2652 "Parser.fsy"
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 2652 "Parser.fsy"
                 : 'appType));
# 9693 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2654 "Parser.fsy"
                             SynType.App(_2, None, [_1], [], None, true, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2654 "Parser.fsy"
                 : 'appType));
# 9705 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2656 "Parser.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2656 "Parser.fsy"
                 : 'appType));
# 9720 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2660 "Parser.fsy"
                             _1 
                   )
# 2660 "Parser.fsy"
                 : 'appType));
# 9731 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2664 "Parser.fsy"
                             1 
                   )
# 2664 "Parser.fsy"
                 : 'arrayTypeSuffix));
# 9741 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2666 "Parser.fsy"
                             2 
                   )
# 2666 "Parser.fsy"
                 : 'arrayTypeSuffix));
# 9751 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2668 "Parser.fsy"
                             3 
                   )
# 2668 "Parser.fsy"
                 : 'arrayTypeSuffix));
# 9761 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2670 "Parser.fsy"
                             4 
                   )
# 2670 "Parser.fsy"
                 : 'arrayTypeSuffix));
# 9771 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2674 "Parser.fsy"
                             let typeArgs, commas = _4 in _1 :: _3 :: List.rev typeArgs, (rhs parseState 2)::(List.rev commas) 
                   )
# 2674 "Parser.fsy"
                 : 'appTypePrefixArguments));
# 9784 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2678 "Parser.fsy"
                             let typeArgs, commas = _1
                             _3 :: typeArgs, (rhs parseState 2)::commas 
                   )
# 2678 "Parser.fsy"
                 : 'typeArgListElements));
# 9797 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2681 "Parser.fsy"
                             [], [] 
                   )
# 2681 "Parser.fsy"
                 : 'typeArgListElements));
# 9807 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2685 "Parser.fsy"
                           _1 
                   )
# 2685 "Parser.fsy"
                 : 'powerType));
# 9818 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2687 "Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState) 
                   )
# 2687 "Parser.fsy"
                 : 'powerType));
# 9833 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2691 "Parser.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            SynType.MeasurePower(_1, - (fst _4), lhs parseState) 
                   )
# 2691 "Parser.fsy"
                 : 'powerType));
# 9847 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2697 "Parser.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 2697 "Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 9860 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2700 "Parser.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 2700 "Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 9873 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2703 "Parser.fsy"
                             let mWhole = unionRanges (rhs parseState 1) _2.Range  // note: use "rhs parseState 1" to deal with parens in "(int) list"
                             deprecatedWithError (FSComp.SR.parsNonAtomicType()) mWhole;
                             SynType.App(_2, None, [_1], [], None, true, mWhole) 
                   )
# 2703 "Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 9887 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2707 "Parser.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2707 "Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 9902 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2711 "Parser.fsy"
                             _1 
                   )
# 2711 "Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 9913 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2716 "Parser.fsy"
                           _1 
                   )
# 2716 "Parser.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 9924 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2718 "Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState) 
                   )
# 2718 "Parser.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 9940 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2723 "Parser.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            SynType.MeasurePower(_1, - (fst _4), lhs parseState) 
                   )
# 2723 "Parser.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 9955 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2732 "Parser.fsy"
                            _1 
                   )
# 2732 "Parser.fsy"
                 : 'atomType));
# 9966 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2734 "Parser.fsy"
                            SynType.Anon (lhs parseState) 
                   )
# 2734 "Parser.fsy"
                 : 'atomType));
# 9976 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2736 "Parser.fsy"
                             _2 
                   )
# 2736 "Parser.fsy"
                 : 'atomType));
# 9988 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2738 "Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                            _2 
                   )
# 2738 "Parser.fsy"
                 : 'atomType));
# 10001 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2741 "Parser.fsy"
                            SynType.StaticConstant(_1, rhs parseState 1) 
                   )
# 2741 "Parser.fsy"
                 : 'atomType));
# 10012 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2743 "Parser.fsy"
                            let m = rhs parseState 1
                            SynType.StaticConstant(SynConst.String (null, m), m) 
                   )
# 2743 "Parser.fsy"
                 : 'atomType));
# 10023 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2746 "Parser.fsy"
                             SynType.StaticConstant(SynConst.Bool false,lhs parseState) 
                   )
# 2746 "Parser.fsy"
                 : 'atomType));
# 10033 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2748 "Parser.fsy"
                             SynType.StaticConstant(SynConst.Bool true,lhs parseState) 
                   )
# 2748 "Parser.fsy"
                 : 'atomType));
# 10043 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2750 "Parser.fsy"
                            (* silent recovery *) SynType.Anon (lhs parseState) 
                   )
# 2750 "Parser.fsy"
                 : 'atomType));
# 10054 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2752 "Parser.fsy"
                            let mLessThan,mGreaterThan,args,commas,mWhole = _2 in SynType.App(_1, Some(mLessThan), args, commas, mGreaterThan, false, unionRanges _1.Range mWhole) 
                   )
# 2752 "Parser.fsy"
                 : 'atomType));
# 10066 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2754 "Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            _1 
                   )
# 2754 "Parser.fsy"
                 : 'atomType));
# 10079 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * bool     * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2760 "Parser.fsy"
                            let mLessThan, mGreaterThan, parsedOk, args, commas, mAll = _1
                            if parsedOk then // if someone has "foo<bar" without a closing greater-than, then the lexfilter does not introduce a HPA, even though it is adjacent
                                warning(Error(FSComp.SR.parsNonAdjacentTyargs(),rhs parseState 1))
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 2760 "Parser.fsy"
                 : Position * Position option * SynType list * Position list * Position));
# 10093 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * bool     * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2765 "Parser.fsy"
                            let mLessThan, mGreaterThan, _, args, commas, mAll = _2
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 2765 "Parser.fsy"
                 : Position * Position option * SynType list * Position list * Position));
# 10105 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2770 "Parser.fsy"
                            let typeArgs, commas = _5
                            (rhs parseState 1), Some(rhs parseState 6), true, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), lhs parseState 
                   )
# 2770 "Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10121 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2773 "Parser.fsy"
                            if not _6 then 
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingGreaterThan())
                            let typeArgs, commas = _5
                            let nextToken = rhs parseState 6
                            let zeroWidthAtStartOfNextToken = nextToken
                            (rhs parseState 1), None, false, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 2773 "Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10143 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2783 "Parser.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 4
                            let zeroWidthAtStartOfNextToken = nextToken
                            (rhs parseState 1), None, false, [_2], [rhs parseState 3], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 2783 "Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10159 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2789 "Parser.fsy"
                            (rhs parseState 1), Some(rhs parseState 3), true, [_2], [], lhs parseState 
                   )
# 2789 "Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10172 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2791 "Parser.fsy"
                            if not _3 then 
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsMissingGreaterThan())
                            (rhs parseState 1), None, false, [_2], [], (rhs2 parseState 1 2) 
                   )
# 2791 "Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10189 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2798 "Parser.fsy"
                            (rhs parseState 1), Some(rhs parseState 2), true, [], [], lhs parseState 
                   )
# 2798 "Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10201 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2800 "Parser.fsy"
                            if not _2 then  
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsExpectedTypeAfterToken())
                            else
                                reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 2
                            let zeroWidthAtStartOfNextToken = nextToken
                            (rhs parseState 1), None, false, [], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 2800 "Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10219 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2810 "Parser.fsy"
                            _1 
                   )
# 2810 "Parser.fsy"
                 : 'typeArgActual));
# 10230 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2814 "Parser.fsy"
                            _1 
                   )
# 2814 "Parser.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 10241 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2819 "Parser.fsy"
                            _2 
                   )
# 2819 "Parser.fsy"
                 : 'measureTypeArg));
# 10254 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2821 "Parser.fsy"
                            SynMeasure.Anon (lhs parseState) 
                   )
# 2821 "Parser.fsy"
                 : 'measureTypeArg));
# 10266 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2825 "Parser.fsy"
                            SynMeasure.Named(_1.Lid, _1.Range) 
                   )
# 2825 "Parser.fsy"
                 : 'measureTypeAtom));
# 10277 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2828 "Parser.fsy"
                            _2 
                   )
# 2828 "Parser.fsy"
                 : 'measureTypeAtom));
# 10289 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2832 "Parser.fsy"
                             _1 
                   )
# 2832 "Parser.fsy"
                 : 'measureTypePower));
# 10300 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2835 "Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, - (fst _3), lhs parseState)
                            else SynMeasure.Power(_1, fst _3, lhs parseState) 
                   )
# 2835 "Parser.fsy"
                 : 'measureTypePower));
# 10315 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2840 "Parser.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Power(_1, - (fst _4), lhs parseState) 
                   )
# 2840 "Parser.fsy"
                 : 'measureTypePower));
# 10329 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2844 "Parser.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
# 2844 "Parser.fsy"
                 : 'measureTypePower));
# 10341 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2849 "Parser.fsy"
                           [_1] 
                   )
# 2849 "Parser.fsy"
                 : 'measureTypeSeq));
# 10352 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2851 "Parser.fsy"
                           _1 :: _2 
                   )
# 2851 "Parser.fsy"
                 : 'measureTypeSeq));
# 10364 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2855 "Parser.fsy"
                           SynMeasure.Seq(_1, lhs parseState) 
                   )
# 2855 "Parser.fsy"
                 : 'measureTypeExpr));
# 10375 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2857 "Parser.fsy"
                           SynMeasure.Product(_1, _3, lhs parseState) 
                   )
# 2857 "Parser.fsy"
                 : 'measureTypeExpr));
# 10387 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2859 "Parser.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs parseState)
                           else SynMeasure.Divide(_1, _3, lhs parseState) 
                   )
# 2859 "Parser.fsy"
                 : 'measureTypeExpr));
# 10402 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2863 "Parser.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs parseState) 
                   )
# 2863 "Parser.fsy"
                 : 'measureTypeExpr));
# 10415 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2868 "Parser.fsy"
                             let id = mkSynId (lhs parseState) (_2).idText
                             Typar(id ,NoStaticReq,false) 
                   )
# 2868 "Parser.fsy"
                 : SynTypar));
# 10427 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2871 "Parser.fsy"
                            _1 
                   )
# 2871 "Parser.fsy"
                 : SynTypar));
# 10438 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2875 "Parser.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            Typar(_2,HeadTypeStaticReq,false) 
                   )
# 2875 "Parser.fsy"
                 : 'staticallyKnownHeadTypar));
# 10451 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2882 "Parser.fsy"
                            ident(_1,rhs parseState 1) 
                   )
# 2882 "Parser.fsy"
                 : Ident));
# 10462 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2886 "Parser.fsy"
                             LongIdentWithDots([ident(MangledGlobalName,rhs parseState 1)],[]) 
                   )
# 2886 "Parser.fsy"
                 : LongIdentWithDots));
# 10472 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2888 "Parser.fsy"
                             LongIdentWithDots([Ident("Create", rhs parseState 1)],[]) 
                   )
# 2888 "Parser.fsy"
                 : LongIdentWithDots));
# 10482 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2890 "Parser.fsy"
                             LongIdentWithDots([_1],[]) 
                   )
# 2890 "Parser.fsy"
                 : LongIdentWithDots));
# 10493 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2892 "Parser.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid @ [_3], dotms @ [rhs parseState 2]) 
                   )
# 2892 "Parser.fsy"
                 : LongIdentWithDots));
# 10505 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2894 "Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid, dotms @ [rhs parseState 2])  
                   )
# 2894 "Parser.fsy"
                 : LongIdentWithDots));
# 10518 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2899 "Parser.fsy"
                             ident(CompileOpName _2,rhs parseState 2) 
                   )
# 2899 "Parser.fsy"
                 : 'opName));
# 10530 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2901 "Parser.fsy"
                             reportParseErrorAt (lhs parseState) (FSComp.SR.parsErrorParsingAsOperatorName()); ident(CompileOpName "****",rhs parseState 2) 
                   )
# 2901 "Parser.fsy"
                 : 'opName));
# 10541 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2903 "Parser.fsy"
                             ident(CompileOpName "*",rhs parseState 1) 
                   )
# 2903 "Parser.fsy"
                 : 'opName));
# 10551 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2907 "Parser.fsy"
                            let text = ("|"^String.concat "|" (List.rev _2) ^ "|")
                            ident(text,rhs2 parseState 2 3) 
                   )
# 2907 "Parser.fsy"
                 : 'opName));
# 10564 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2911 "Parser.fsy"
                            let text = ("|"^String.concat "|" (List.rev _2) ^ ".|" )
                            ident(text,rhs2 parseState 2 5) 
                   )
# 2911 "Parser.fsy"
                 : 'opName));
# 10577 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2916 "Parser.fsy"
                             if not (IsValidPrefixOperatorDefinitionName _1) then 
                                 reportParseErrorAt (lhs parseState) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                             _1 
                   )
# 2916 "Parser.fsy"
                 : 'operatorName));
# 10590 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2919 "Parser.fsy"
                                               _1 
                   )
# 2919 "Parser.fsy"
                 : 'operatorName));
# 10601 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2920 "Parser.fsy"
                                            _1 
                   )
# 2920 "Parser.fsy"
                 : 'operatorName));
# 10612 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2921 "Parser.fsy"
                                            _1 
                   )
# 2921 "Parser.fsy"
                 : 'operatorName));
# 10623 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2922 "Parser.fsy"
                                         _1 
                   )
# 2922 "Parser.fsy"
                 : 'operatorName));
# 10634 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2923 "Parser.fsy"
                                        _1 
                   )
# 2923 "Parser.fsy"
                 : 'operatorName));
# 10645 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2924 "Parser.fsy"
                                          _1 
                   )
# 2924 "Parser.fsy"
                 : 'operatorName));
# 10656 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2925 "Parser.fsy"
                                                 _1 
                   )
# 2925 "Parser.fsy"
                 : 'operatorName));
# 10667 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2926 "Parser.fsy"
                                  "$" 
                   )
# 2926 "Parser.fsy"
                 : 'operatorName));
# 10677 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2927 "Parser.fsy"
                                              _1 
                   )
# 2927 "Parser.fsy"
                 : 'operatorName));
# 10688 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2928 "Parser.fsy"
                                 "-" 
                   )
# 2928 "Parser.fsy"
                 : 'operatorName));
# 10698 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2929 "Parser.fsy"
                                "*" 
                   )
# 2929 "Parser.fsy"
                 : 'operatorName));
# 10708 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2930 "Parser.fsy"
                                  "=" 
                   )
# 2930 "Parser.fsy"
                 : 'operatorName));
# 10718 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2931 "Parser.fsy"
                              "or" 
                   )
# 2931 "Parser.fsy"
                 : 'operatorName));
# 10728 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2932 "Parser.fsy"
                                "<" 
                   )
# 2932 "Parser.fsy"
                 : 'operatorName));
# 10739 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2933 "Parser.fsy"
                                   ">" 
                   )
# 2933 "Parser.fsy"
                 : 'operatorName));
# 10750 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2934 "Parser.fsy"
                                 "?" 
                   )
# 2934 "Parser.fsy"
                 : 'operatorName));
# 10760 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2935 "Parser.fsy"
                               "&" 
                   )
# 2935 "Parser.fsy"
                 : 'operatorName));
# 10770 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2936 "Parser.fsy"
                                   "&&" 
                   )
# 2936 "Parser.fsy"
                 : 'operatorName));
# 10780 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2937 "Parser.fsy"
                                   "||" 
                   )
# 2937 "Parser.fsy"
                 : 'operatorName));
# 10790 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2938 "Parser.fsy"
                                        ":=" 
                   )
# 2938 "Parser.fsy"
                 : 'operatorName));
# 10800 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2940 "Parser.fsy"
                             if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                  deprecatedOperator (lhs parseState); 
                             _1 
                   )
# 2940 "Parser.fsy"
                 : 'operatorName));
# 10813 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2943 "Parser.fsy"
                                      _1 
                   )
# 2943 "Parser.fsy"
                 : 'operatorName));
# 10824 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2944 "Parser.fsy"
                                   ".." 
                   )
# 2944 "Parser.fsy"
                 : 'operatorName));
# 10834 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2945 "Parser.fsy"
                                           ".. .." 
                   )
# 2945 "Parser.fsy"
                 : 'operatorName));
# 10844 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2947 "Parser.fsy"
                             if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                             fst _1 
                   )
# 2947 "Parser.fsy"
                 : 'operatorName));
# 10857 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2952 "Parser.fsy"
                             if not (isUpper _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                             _1 
                   )
# 2952 "Parser.fsy"
                 : 'barName));
# 10869 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2957 "Parser.fsy"
                             [_2] 
                   )
# 2957 "Parser.fsy"
                 : 'barNames));
# 10880 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'barName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2959 "Parser.fsy"
                             _3 :: _1 
                   )
# 2959 "Parser.fsy"
                 : 'barNames));
# 10892 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2963 "Parser.fsy"
                            _1 
                   )
# 2963 "Parser.fsy"
                 : 'identOrOp));
# 10903 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2965 "Parser.fsy"
                            _1 
                   )
# 2965 "Parser.fsy"
                 : 'identOrOp));
# 10914 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2971 "Parser.fsy"
                             LongIdentWithDots([_1],[]) 
                   )
# 2971 "Parser.fsy"
                 : LongIdentWithDots));
# 10925 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2973 "Parser.fsy"
                             LongIdentWithDots([_1],[]) 
                   )
# 2973 "Parser.fsy"
                 : LongIdentWithDots));
# 10936 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2975 "Parser.fsy"
                             LongIdentWithDots([Ident("Create", rhs parseState 1)],[]) 
                   )
# 2975 "Parser.fsy"
                 : LongIdentWithDots));
# 10946 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2977 "Parser.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _3 
                            LongIdentWithDots(_1 :: lid, rhs parseState 2 :: dotms) 
                   )
# 2977 "Parser.fsy"
                 : LongIdentWithDots));
# 10959 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2980 "Parser.fsy"
                            (* silent recovery *) LongIdentWithDots([_1],[rhs parseState 2]) 
                   )
# 2980 "Parser.fsy"
                 : LongIdentWithDots));
# 10970 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2985 "Parser.fsy"
                                      _1 
                   )
# 2985 "Parser.fsy"
                 : 'nameop));
# 10981 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2988 "Parser.fsy"
                                     
                   )
# 2988 "Parser.fsy"
                 : 'topSeparator));
# 10991 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2989 "Parser.fsy"
                                               
                   )
# 2989 "Parser.fsy"
                 : 'topSeparator));
# 11001 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2990 "Parser.fsy"
                                     
                   )
# 2990 "Parser.fsy"
                 : 'topSeparator));
# 11011 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2993 "Parser.fsy"
                                                            
                   )
# 2993 "Parser.fsy"
                 : 'topSeparators));
# 11022 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2994 "Parser.fsy"
                                                      
                   )
# 2994 "Parser.fsy"
                 : 'topSeparators));
# 11034 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2997 "Parser.fsy"
                                     
                   )
# 2997 "Parser.fsy"
                 : 'interactiveSeparator));
# 11044 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2998 "Parser.fsy"
                                     
                   )
# 2998 "Parser.fsy"
                 : 'interactiveSeparator));
# 11054 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3001 "Parser.fsy"
                                                                    
                   )
# 3001 "Parser.fsy"
                 : 'interactiveSeparators));
# 11065 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3002 "Parser.fsy"
                                                                      
                   )
# 3002 "Parser.fsy"
                 : 'interactiveSeparators));
# 11077 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3005 "Parser.fsy"
                                                                          
                   )
# 3005 "Parser.fsy"
                 : 'opt_interactiveSeparators));
# 11089 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3006 "Parser.fsy"
                                                  
                   )
# 3006 "Parser.fsy"
                 : 'opt_interactiveSeparators));
# 11099 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3009 "Parser.fsy"
                                                          
                   )
# 3009 "Parser.fsy"
                 : 'opt_topSeparators));
# 11111 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3010 "Parser.fsy"
                                                
                   )
# 3010 "Parser.fsy"
                 : 'opt_topSeparators));
# 11121 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3013 "Parser.fsy"
                                     
                   )
# 3013 "Parser.fsy"
                 : 'seps));
# 11131 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3014 "Parser.fsy"
                                     
                   )
# 3014 "Parser.fsy"
                 : 'seps));
# 11141 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3015 "Parser.fsy"
                                               
                   )
# 3015 "Parser.fsy"
                 : 'seps));
# 11151 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3016 "Parser.fsy"
                                               
                   )
# 3016 "Parser.fsy"
                 : 'seps));
# 11161 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3021 "Parser.fsy"
                             
                   )
# 3021 "Parser.fsy"
                 : 'declEnd));
# 11171 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3023 "Parser.fsy"
                               
                   )
# 3023 "Parser.fsy"
                 : 'declEnd));
# 11181 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3025 "Parser.fsy"
                            
                   )
# 3025 "Parser.fsy"
                 : 'declEnd));
# 11191 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3030 "Parser.fsy"
                            
                   )
# 3030 "Parser.fsy"
                 : 'opt_declEnd));
# 11201 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3032 "Parser.fsy"
                             
                   )
# 3032 "Parser.fsy"
                 : 'opt_declEnd));
# 11211 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3034 "Parser.fsy"
                            
                   )
# 3034 "Parser.fsy"
                 : 'opt_declEnd));
# 11221 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3036 "Parser.fsy"
                            
                   )
# 3036 "Parser.fsy"
                 : 'opt_declEnd));
# 11231 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3039 "Parser.fsy"
                                    
                   )
# 3039 "Parser.fsy"
                 : 'opt_ODECLEND));
# 11241 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3040 "Parser.fsy"
                                    
                   )
# 3040 "Parser.fsy"
                 : 'opt_ODECLEND));
# 11251 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3043 "Parser.fsy"
                                     deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs parseState); () 
                   )
# 3043 "Parser.fsy"
                 : 'deprecated_opt_equals));
# 11261 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3044 "Parser.fsy"
                                      
                   )
# 3044 "Parser.fsy"
                 : 'deprecated_opt_equals));
# 11271 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3047 "Parser.fsy"
                                     
                   )
# 3047 "Parser.fsy"
                 : 'opt_OBLOCKSEP));
# 11281 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3048 "Parser.fsy"
                                    
                   )
# 3048 "Parser.fsy"
                 : 'opt_OBLOCKSEP));
# 11291 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3051 "Parser.fsy"
                                
                   )
# 3051 "Parser.fsy"
                 : 'opt_seps));
# 11302 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3052 "Parser.fsy"
                                
                   )
# 3052 "Parser.fsy"
                 : 'opt_seps));
# 11312 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3055 "Parser.fsy"
                               true 
                   )
# 3055 "Parser.fsy"
                 : 'opt_rec));
# 11322 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3056 "Parser.fsy"
                               false 
                   )
# 3056 "Parser.fsy"
                 : 'opt_rec));
# 11332 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3059 "Parser.fsy"
                               
                   )
# 3059 "Parser.fsy"
                 : 'opt_bar));
# 11342 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3060 "Parser.fsy"
                               
                   )
# 3060 "Parser.fsy"
                 : 'opt_bar));
# 11352 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3063 "Parser.fsy"
                                  true 
                   )
# 3063 "Parser.fsy"
                 : 'opt_inline));
# 11362 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3064 "Parser.fsy"
                                  false 
                   )
# 3064 "Parser.fsy"
                 : 'opt_inline));
# 11372 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3067 "Parser.fsy"
                                   true 
                   )
# 3067 "Parser.fsy"
                 : 'opt_mutable));
# 11382 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3068 "Parser.fsy"
                                   false 
                   )
# 3068 "Parser.fsy"
                 : 'opt_mutable));
# 11392 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3071 "Parser.fsy"
                                     true 
                   )
# 3071 "Parser.fsy"
                 : 'opt_ref));
# 11402 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3072 "Parser.fsy"
                                     false 
                   )
# 3072 "Parser.fsy"
                 : 'opt_ref));
# 11412 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3075 "Parser.fsy"
                               
                   )
# 3075 "Parser.fsy"
                 : 'doToken));
# 11422 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3076 "Parser.fsy"
                               
                   )
# 3076 "Parser.fsy"
                 : 'doToken));
# 11432 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3079 "Parser.fsy"
                                
                   )
# 3079 "Parser.fsy"
                 : 'doneDeclEnd));
# 11442 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3080 "Parser.fsy"
                                    
                   )
# 3080 "Parser.fsy"
                 : 'doneDeclEnd));
# 11452 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3083 "Parser.fsy"
                                  mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs parseState); 
                   )
# 3083 "Parser.fsy"
                 : 'structOrBegin));
# 11462 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3084 "Parser.fsy"
                                 
                   )
# 3084 "Parser.fsy"
                 : 'structOrBegin));
# 11472 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3087 "Parser.fsy"
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 3087 "Parser.fsy"
                 : 'sigOrBegin));
# 11482 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3088 "Parser.fsy"
                                 
                   )
# 3088 "Parser.fsy"
                 : 'sigOrBegin));
# 11492 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3091 "Parser.fsy"
                                 mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 3091 "Parser.fsy"
                 : 'colonOrEquals));
# 11502 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3092 "Parser.fsy"
                                  
                   )
# 3092 "Parser.fsy"
                 : 'colonOrEquals));
# 11512 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3095 "Parser.fsy"
                               
                   )
# 3095 "Parser.fsy"
                 : 'opt_HASH));
# 11522 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3098 "Parser.fsy"
                                                     
                   )
# 3098 "Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 11532 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3099 "Parser.fsy"
                                                     
                   )
# 3099 "Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 11542 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3100 "Parser.fsy"
                              
                   )
# 3100 "Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 11552 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3103 "Parser.fsy"
                                                 
                   )
# 3103 "Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 11562 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3104 "Parser.fsy"
                              
                   )
# 3104 "Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 11572 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3107 "Parser.fsy"
                                                         _2 
                   )
# 3107 "Parser.fsy"
                 : 'type_keyword));
# 11583 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3108 "Parser.fsy"
                                        false 
                   )
# 3108 "Parser.fsy"
                 : 'type_keyword));
# 11593 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3109 "Parser.fsy"
                                false 
                   )
# 3109 "Parser.fsy"
                 : 'type_keyword));
# 11603 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3110 "Parser.fsy"
                                        true 
                   )
# 3110 "Parser.fsy"
                 : 'type_keyword));
# 11613 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3111 "Parser.fsy"
                                  false 
                   )
# 3111 "Parser.fsy"
                 : 'type_keyword));
# 11623 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3114 "Parser.fsy"
                                                             
                   )
# 3114 "Parser.fsy"
                 : 'module_keyword));
# 11634 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3115 "Parser.fsy"
                                          
                   )
# 3115 "Parser.fsy"
                 : 'module_keyword));
# 11644 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3116 "Parser.fsy"
                                  
                   )
# 3116 "Parser.fsy"
                 : 'module_keyword));
# 11654 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3119 "Parser.fsy"
                                                     
                   )
# 3119 "Parser.fsy"
                 : 'rbrace));
# 11665 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3120 "Parser.fsy"
                                          
                   )
# 3120 "Parser.fsy"
                 : 'rbrace));
# 11675 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3121 "Parser.fsy"
                                  
                   )
# 3121 "Parser.fsy"
                 : 'rbrace));
# 11685 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3124 "Parser.fsy"
                                                     
                   )
# 3124 "Parser.fsy"
                 : 'rparen));
# 11696 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3125 "Parser.fsy"
                                          
                   )
# 3125 "Parser.fsy"
                 : 'rparen));
# 11706 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3126 "Parser.fsy"
                                  
                   )
# 3126 "Parser.fsy"
                 : 'rparen));
# 11716 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3129 "Parser.fsy"
                                                           
                   )
# 3129 "Parser.fsy"
                 : 'oblockend));
# 11727 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3130 "Parser.fsy"
                                             
                   )
# 3130 "Parser.fsy"
                 : 'oblockend));
# 11737 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3131 "Parser.fsy"
                                     
                   )
# 3131 "Parser.fsy"
                 : 'oblockend));
# 11747 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3134 "Parser.fsy"
                                            false 
                   )
# 3134 "Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11757 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3135 "Parser.fsy"
                                              false 
                   )
# 3135 "Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11767 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3136 "Parser.fsy"
                                              false 
                   )
# 3136 "Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11777 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3137 "Parser.fsy"
                                                 false 
                   )
# 3137 "Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11787 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3138 "Parser.fsy"
                                   _1 
                   )
# 3138 "Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11798 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3141 "Parser.fsy"
                                            false 
                   )
# 3141 "Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 11808 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3142 "Parser.fsy"
                                              false 
                   )
# 3142 "Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 11818 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3143 "Parser.fsy"
                                              false 
                   )
# 3143 "Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 11828 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3144 "Parser.fsy"
                                              false 
                   )
# 3144 "Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 11838 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3145 "Parser.fsy"
                                                 false 
                   )
# 3145 "Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 11848 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3146 "Parser.fsy"
                                   _1 
                   )
# 3146 "Parser.fsy"
                 : 'ends_coming_soon_or_recover));
|]
# 11860 "Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 222;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf : Program =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
