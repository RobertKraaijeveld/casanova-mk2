// Implementation file for parser generated by fsyacc
module CasanovaCompiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"

#nowarn "1182"  // generated code has lots of unused "parseState"   
#nowarn "62"
open Microsoft.FSharp.Text.Parsing
open System
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Compiler.ErrorLogger
open Internals.Utils
open CasanovaCompiler.ParseAST

type Position = Microsoft.FSharp.Text.Lexing.Position

let printfn (s : string) = System.Console.WriteLine(s)

#if DEBUG
let debugPrint(s) =
    //if Internal.Utilities.Text.Parsing.Flags.debug then 
        printfn s
#else
let debugPrint(s) = ignore s 
#endif


let isSome x = match x with None -> false | _ -> true
let patFromParseError (e:SynPat) = SynPat.FromParseError(e, e.Range)
let isNone x = match x with None -> true | _ -> false
let frontAndBack l = 
  let rec loop acc l = 
    match l with
    | [] -> 
      System.Diagnostics.Debug.Assert(false, "empty list")
      invalidArg "l" "empty list" 
    | [h] -> List.rev acc,h
    | h::t -> loop  (h::acc) t
  loop [] l
let isNil x = match x with [] -> true | _ -> false
let nonNil x = match x with [] -> false | _ -> true
let rec last l = match l with [] -> failwith "last" | [h] -> h | _::t -> last t
let isUpper (s:string) = 
    s.Length >= 1 && System.Char.IsUpper s.[0] && not (System.Char.IsLower s.[0])
let isNull (x : 'T) = match (x :> obj) with null -> true | _ -> false
let isNonNull (x : 'T) = match (x :> obj) with null -> false | _ -> true
let nonNull msg x = if isNonNull x then x else failwith ("null: " ^ msg) 
let mkRange f b e = b
let IsValidPrefixOperatorUse s = 
    match s with 
    | "?+" | "?-" | "+" | "-" | "+." | "-." | "%" | "%%" | "&" | "&&" -> true
    | _ -> s.[0] = '!' || (s.[0] = '~' && String.forall (fun c -> c = s.[0]) s)
    
let IsValidPrefixOperatorDefinitionName s = 
    match s with 
    | "~?+" | "~?-" | "~+" | "~-" | "~+." | "~-." | "~%" | "~%%" | "~&" | "~&&" -> true
    | _ -> (s.[0] = '!' && s <> "!=") || (s.[0] = '~' && String.forall (fun c -> c = s.[0]) s)
        
let MangledGlobalName = "`global`"

let opNameCons = CompileOpName "::"
let opNameNil = CompileOpName "[]"
let opNameEquals = CompileOpName "="
let opNameEqualsNullable = CompileOpName "=?"
let opNameNullableEquals = CompileOpName "?="
let opNameNullableEqualsNullable = CompileOpName "?=?"
let mkSynOptionalExpr m xopt = 
    match xopt with 
    | None -> mkSynLidGet m [] "None"
    | Some x  -> SynExpr.App(ExprAtomicFlag.NonAtomic, false, mkSynLidGet m [] "Some",x,m)



let mkUnderscoreRecdField m = LongIdentWithDots([ident("_", m)], []), false


let mkSynDoBinding (strict,expr,m) = 
    Binding ((if strict then SynPat.Const(SynConst.Unit,m) else SynPat.Wild m),
             expr,SynInfo.emptySynValData, m)



let rebindRanges first fields lastSep = 
    let rec run (name, value) l acc = 
        match l with
        | [] -> List.rev ((name, value, lastSep)::acc)
        | (f, m)::xs -> run f xs ((name, value, m)::acc)
    run first fields []

let reportParseErrorAt m s = errorR(Error(s,m))

let unionRangeWithPos (r:Position) p = r

let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_,_,m)                      -> reportParseErrorAt m (FSComp.SR.parsEofInHashIf())
  | LexCont.String (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInString())
  | LexCont.TripleQuoteString (_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteString())
  | LexCont.VerbatimString (_,m)                  -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())
  | LexCont.Comment (_,_,m)                       -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.SingleLineComment (_,_,m)             -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.StringInComment (_,_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())
  | LexCont.VerbatimStringInComment (_,_,m)       -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())
  | LexCont.TripleQuoteStringInComment (_,_,m)    -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteStringInComment())
  | LexCont.MLOnly (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())
  | LexCont.EndLine(LexerEndlineContinuation.Skip(_,_,m)) -> reportParseErrorAt m (FSComp.SR.parsEofInDirective())
  | LexCont.EndLine(LexerEndlineContinuation.Token(stack))
  | LexCont.Token(stack) -> 
      match stack with 
      | [] -> ()
      | (_,m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())

//                BindingSetPreAttrs(letRange, isRec, isUse, builderFunction, wholeRange,_)
//type BindingSet = BindingSetPreAttrs of Position * bool * bool *  SynBinding list * Position

let rec split pred l =
    match l with
    | [] -> [],[]
    | x :: xs ->
        let res1,res2 = split pred xs
        if pred x then
            (x :: res1),res2
        else
            res1,(x :: res2)

let mkLocalBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_,is_wait),body) = 
   let decls = declsPreAttrs
   SynExpr.LetOrBindingOrUse (isRec,isUse,is_wait,decls,body,mWhole) 

let mkDefnBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_bindingSetRange,_),attrs,vis,attrsm) = 
    []

let idOfPat m p = 
    match p with 
    | SynPat.LongIdent(LongIdentWithDots([id],_),_,_,_) -> id
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if nonNil a1 && nonNil a2 then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed());
    a1 @ a2

let unionRangeWithListBy projectRangeFromThing m listOfThing = 
    (m, listOfThing) ||> List.fold (fun m thing -> unionRanges m (projectRangeFromThing thing))

let rangeOfLongIdent(lid:LongIdent) =
    System.Diagnostics.Debug.Assert(not lid.IsEmpty, "the parser should never produce a long-id that is the empty list") 
    (lid.Head.idRange,lid) ||> unionRangeWithListBy (fun id -> id.idRange) 


# 157 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (Position * string * LexerWhitespaceContinuation)
  | HASH_ELSE of (Position * string * LexerWhitespaceContinuation)
  | HASH_ENDIF of (Position * string * LexerWhitespaceContinuation)
  | COMMENT of (LexerWhitespaceContinuation)
  | WHITESPACE of (LexerWhitespaceContinuation)
  | HASH_LINE of (LexerWhitespaceContinuation)
  | HASH_LIGHT of (LexerWhitespaceContinuation)
  | INACTIVECODE of (LexerWhitespaceContinuation)
  | LINE_COMMENT of (LexerWhitespaceContinuation)
  | STRING_TEXT of (LexerWhitespaceContinuation)
  | EOF of (LexerWhitespaceContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | OBLOCKEND_COMING_SOON
  | OBLOCKEND_IS_HERE
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OBODY_OPERATOR
  | OTHEN
  | ODO_BANG
  | ODO
  | OSELECT
  | OWHERE
  | OYIELD
  | OWHEN
  | OPARALLEL_OPERATOR
  | OWAIT
  | OBINDER of (string)
  | OLET of (bool)
  | OLET_WAIT of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | TYPE_COMING_SOON
  | TYPE_IS_HERE
  | MODULE_COMING_SOON
  | MODULE_IS_HERE
  | RULE
  | CREATE
  | WAIT
  | WAIT_UNTIL
  | YIELD
  | SELECT_OPERATOR
  | PARALLEL_OPERATOR
  | INT_SELECT_OPERATOR
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE
  | RBRACE_COMING_SOON
  | RBRACE_IS_HERE
  | MINUS
  | DOLLAR
  | LBRACE_LESS
  | BAR_RBRACK
  | GREATER_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACK_LESS
  | LBRACE
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | RPAREN_COMING_SOON
  | RPAREN_IS_HERE
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | IMPORT
  | OPEN
  | OR
  | REC
  | THEN
  | BODY_OPERATOR
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | CONST
  | WORLD_ENTITY
  | MASTER
  | SLAVE
  | CONNECT
  | DISCONNECT
  | VIRTUAL
  | ENTITY
  | LAZY
  | OLAZY
  | MATCH
  | MUTABLE
  | REFERENCE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | JOIN_IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD_BANG of (bool)
  | LET_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | NATIVEINT of (int64)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string)
  | STRING of (string)
  | BYTEARRAY of (byte[])
  | A
  | B
  | C
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_OBLOCKEND_COMING_SOON
    | TOKEN_OBLOCKEND_IS_HERE
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OBODY_OPERATOR
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OSELECT
    | TOKEN_OWHERE
    | TOKEN_OYIELD
    | TOKEN_OWHEN
    | TOKEN_OPARALLEL_OPERATOR
    | TOKEN_OWAIT
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_OLET_WAIT
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_TYPE_COMING_SOON
    | TOKEN_TYPE_IS_HERE
    | TOKEN_MODULE_COMING_SOON
    | TOKEN_MODULE_IS_HERE
    | TOKEN_RULE
    | TOKEN_CREATE
    | TOKEN_WAIT
    | TOKEN_WAIT_UNTIL
    | TOKEN_YIELD
    | TOKEN_SELECT_OPERATOR
    | TOKEN_PARALLEL_OPERATOR
    | TOKEN_INT_SELECT_OPERATOR
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE
    | TOKEN_RBRACE_COMING_SOON
    | TOKEN_RBRACE_IS_HERE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_LBRACE_LESS
    | TOKEN_BAR_RBRACK
    | TOKEN_GREATER_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_LBRACE
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_RPAREN_COMING_SOON
    | TOKEN_RPAREN_IS_HERE
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_IMPORT
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_BODY_OPERATOR
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_CONST
    | TOKEN_WORLD_ENTITY
    | TOKEN_MASTER
    | TOKEN_SLAVE
    | TOKEN_CONNECT
    | TOKEN_DISCONNECT
    | TOKEN_VIRTUAL
    | TOKEN_ENTITY
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MUTABLE
    | TOKEN_REFERENCE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_JOIN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD_BANG
    | TOKEN_LET_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_NATIVEINT
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_A
    | TOKEN_B
    | TOKEN_C
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_stringOrKeywordString
    | NONTERM_cnvModuleIntro
    | NONTERM_casanovaModuleImpl
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_moduleDefn
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_opt_signature
    | NONTERM_tyconDefnAugmentation
    | NONTERM_opt_literalValue
    | NONTERM_memberFlags
    | NONTERM_memberSpecFlags
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_cnvTyconDefnRhs
    | NONTERM_tyconDefnRhs
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMembersAtLeastOne
    | NONTERM_memberCore
    | NONTERM_createMemberCoreWithParams
    | NONTERM_createMemberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_opt_typ
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_declVisibility
    | NONTERM_opt_classDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_tyconDefnOrSpfnCnvRepr
    | NONTERM_braceFieldOrRuleDeclList
    | NONTERM_fieldOrRuleList
    | NONTERM_topReturnTypeWithTypeConstraints
    | NONTERM_cnvFieldInitCore
    | NONTERM_fieldOrRule
    | NONTERM_inherit_idents
    | NONTERM_braceFieldDeclList
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_typarAlts
    | NONTERM_unionRepr
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_importDecl
    | NONTERM_importLibrary
    | NONTERM_defnBindings
    | NONTERM_defnBindingsWait
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetWaitBindings
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_anonLambdaExpr
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_createBindingPattern
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_constrPattern
    | NONTERM_opt_explicitValTyparDecls2
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_fromAssignmentExprBlock
    | NONTERM_typedSeqExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSeqExprBlockR
    | NONTERM_typedSeqExpr
    | NONTERM_seqExpr
    | NONTERM_recover
    | NONTERM_choices
    | NONTERM_intChoices
    | NONTERM_choiceBody
    | NONTERM_parallel
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_fromExprCondition
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tuplePat
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_optRange
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_staticallyKnownHeadTyparAlts
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_monadicExprBody
    | NONTERM_listExprElements
    | NONTERM_monadicExprInitial
    | NONTERM_rangeSequenceExpr
    | NONTERM_monadicSingleLineQualifiersThenArrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_fromLoopBinder
    | NONTERM_fromTupleExpr
    | NONTERM_forLoopRange
    | NONTERM_opt_curriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_recdExpr
    | NONTERM_opt_seps_recd
    | NONTERM_seps_recd
    | NONTERM_pathOrUnderscore
    | NONTERM_recdExprBindings
    | NONTERM_recdBinding
    | NONTERM_forLoopDirection
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_tupleTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrefixArguments
    | NONTERM_typeArgListElements
    | NONTERM_powerType
    | NONTERM_appTypeNonAtomicDeprecated
    | NONTERM_powerTypeNonAtomicDeprecated
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_typeArgActual
    | NONTERM_typeArgActualOrDummyIfEmpty
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_barName
    | NONTERM_barNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_interactiveSeparators
    | NONTERM_opt_interactiveSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_opt_ref
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_opt_HASH
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP
    | NONTERM_type_keyword
    | NONTERM_module_keyword
    | NONTERM_rbrace
    | NONTERM_rparen
    | NONTERM_oblockend
    | NONTERM_ends_other_than_rparen_coming_soon_or_recover
    | NONTERM_ends_coming_soon_or_recover

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | OINTERFACE_MEMBER  -> 13 
  | OBLOCKEND  -> 14 
  | OBLOCKEND_COMING_SOON  -> 15 
  | OBLOCKEND_IS_HERE  -> 16 
  | ORIGHT_BLOCK_END  -> 17 
  | ODECLEND  -> 18 
  | OEND  -> 19 
  | OBLOCKSEP  -> 20 
  | OBLOCKBEGIN  -> 21 
  | ORESET  -> 22 
  | OFUN  -> 23 
  | OFUNCTION  -> 24 
  | OWITH  -> 25 
  | OELSE  -> 26 
  | OBODY_OPERATOR  -> 27 
  | OTHEN  -> 28 
  | ODO_BANG  -> 29 
  | ODO  -> 30 
  | OSELECT  -> 31 
  | OWHERE  -> 32 
  | OYIELD  -> 33 
  | OWHEN  -> 34 
  | OPARALLEL_OPERATOR  -> 35 
  | OWAIT  -> 36 
  | OBINDER _ -> 37 
  | OLET _ -> 38 
  | OLET_WAIT _ -> 39 
  | HIGH_PRECEDENCE_TYAPP  -> 40 
  | HIGH_PRECEDENCE_PAREN_APP  -> 41 
  | HIGH_PRECEDENCE_BRACK_APP  -> 42 
  | TYPE_COMING_SOON  -> 43 
  | TYPE_IS_HERE  -> 44 
  | MODULE_COMING_SOON  -> 45 
  | MODULE_IS_HERE  -> 46 
  | RULE  -> 47 
  | CREATE  -> 48 
  | WAIT  -> 49 
  | WAIT_UNTIL  -> 50 
  | YIELD  -> 51 
  | SELECT_OPERATOR  -> 52 
  | PARALLEL_OPERATOR  -> 53 
  | INT_SELECT_OPERATOR  -> 54 
  | EXTERN  -> 55 
  | VOID  -> 56 
  | PUBLIC  -> 57 
  | PRIVATE  -> 58 
  | INTERNAL  -> 59 
  | GLOBAL  -> 60 
  | STATIC  -> 61 
  | MEMBER  -> 62 
  | CLASS  -> 63 
  | ABSTRACT  -> 64 
  | OVERRIDE  -> 65 
  | DEFAULT  -> 66 
  | CONSTRUCTOR  -> 67 
  | INHERIT  -> 68 
  | GREATER_RBRACK  -> 69 
  | STRUCT  -> 70 
  | SIG  -> 71 
  | BAR  -> 72 
  | RBRACK  -> 73 
  | RBRACE  -> 74 
  | RBRACE_COMING_SOON  -> 75 
  | RBRACE_IS_HERE  -> 76 
  | MINUS  -> 77 
  | DOLLAR  -> 78 
  | LBRACE_LESS  -> 79 
  | BAR_RBRACK  -> 80 
  | GREATER_RBRACE  -> 81 
  | UNDERSCORE  -> 82 
  | SEMICOLON_SEMICOLON  -> 83 
  | LARROW  -> 84 
  | EQUALS  -> 85 
  | LBRACK  -> 86 
  | LBRACK_BAR  -> 87 
  | LBRACK_LESS  -> 88 
  | LBRACE  -> 89 
  | QMARK  -> 90 
  | QMARK_QMARK  -> 91 
  | DOT  -> 92 
  | COLON  -> 93 
  | COLON_COLON  -> 94 
  | COLON_GREATER  -> 95 
  | COLON_QMARK_GREATER  -> 96 
  | COLON_QMARK  -> 97 
  | COLON_EQUALS  -> 98 
  | SEMICOLON  -> 99 
  | WHEN  -> 100 
  | WHILE  -> 101 
  | WITH  -> 102 
  | HASH  -> 103 
  | AMP  -> 104 
  | AMP_AMP  -> 105 
  | QUOTE  -> 106 
  | LPAREN  -> 107 
  | RPAREN  -> 108 
  | RPAREN_COMING_SOON  -> 109 
  | RPAREN_IS_HERE  -> 110 
  | STAR  -> 111 
  | COMMA  -> 112 
  | RARROW  -> 113 
  | GREATER_BAR_RBRACK  -> 114 
  | LPAREN_STAR_RPAREN  -> 115 
  | IMPORT  -> 116 
  | OPEN  -> 117 
  | OR  -> 118 
  | REC  -> 119 
  | THEN  -> 120 
  | BODY_OPERATOR  -> 121 
  | TO  -> 122 
  | TRUE  -> 123 
  | TRY  -> 124 
  | TYPE  -> 125 
  | VAL  -> 126 
  | INLINE  -> 127 
  | INTERFACE  -> 128 
  | INSTANCE  -> 129 
  | CONST  -> 130 
  | WORLD_ENTITY  -> 131 
  | MASTER  -> 132 
  | SLAVE  -> 133 
  | CONNECT  -> 134 
  | DISCONNECT  -> 135 
  | VIRTUAL  -> 136 
  | ENTITY  -> 137 
  | LAZY  -> 138 
  | OLAZY  -> 139 
  | MATCH  -> 140 
  | MUTABLE  -> 141 
  | REFERENCE  -> 142 
  | NEW  -> 143 
  | OF  -> 144 
  | EXCEPTION  -> 145 
  | FALSE  -> 146 
  | FOR  -> 147 
  | FUN  -> 148 
  | FUNCTION  -> 149 
  | IF  -> 150 
  | IN  -> 151 
  | JOIN_IN  -> 152 
  | FINALLY  -> 153 
  | DO_BANG  -> 154 
  | AND  -> 155 
  | AS  -> 156 
  | ASSERT  -> 157 
  | OASSERT  -> 158 
  | ASR  -> 159 
  | BEGIN  -> 160 
  | DO  -> 161 
  | DONE  -> 162 
  | DOWNTO  -> 163 
  | ELSE  -> 164 
  | ELIF  -> 165 
  | END  -> 166 
  | DOT_DOT  -> 167 
  | BAR_BAR  -> 168 
  | UPCAST  -> 169 
  | DOWNCAST  -> 170 
  | NULL  -> 171 
  | RESERVED  -> 172 
  | MODULE  -> 173 
  | NAMESPACE  -> 174 
  | DELEGATE  -> 175 
  | CONSTRAINT  -> 176 
  | BASE  -> 177 
  | LQUOTE _ -> 178 
  | RQUOTE _ -> 179 
  | RQUOTE_DOT _ -> 180 
  | PERCENT_OP _ -> 181 
  | BINDER _ -> 182 
  | LESS _ -> 183 
  | GREATER _ -> 184 
  | LET _ -> 185 
  | YIELD_BANG _ -> 186 
  | LET_BANG _ -> 187 
  | BIGNUM _ -> 188 
  | DECIMAL _ -> 189 
  | CHAR _ -> 190 
  | IEEE64 _ -> 191 
  | IEEE32 _ -> 192 
  | NATIVEINT _ -> 193 
  | UNATIVEINT _ -> 194 
  | UINT64 _ -> 195 
  | UINT32 _ -> 196 
  | UINT16 _ -> 197 
  | UINT8 _ -> 198 
  | INT64 _ -> 199 
  | INT32 _ -> 200 
  | INT32_DOT_DOT _ -> 201 
  | INT16 _ -> 202 
  | INT8 _ -> 203 
  | FUNKY_OPERATOR_NAME _ -> 204 
  | ADJACENT_PREFIX_OP _ -> 205 
  | PLUS_MINUS_OP _ -> 206 
  | INFIX_AMP_OP _ -> 207 
  | INFIX_STAR_DIV_MOD_OP _ -> 208 
  | PREFIX_OP _ -> 209 
  | INFIX_BAR_OP _ -> 210 
  | INFIX_AT_HAT_OP _ -> 211 
  | INFIX_COMPARE_OP _ -> 212 
  | INFIX_STAR_STAR_OP _ -> 213 
  | IDENT _ -> 214 
  | KEYWORD_STRING _ -> 215 
  | STRING _ -> 216 
  | BYTEARRAY _ -> 217 
  | A  -> 218 
  | B  -> 219 
  | C  -> 220 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_OINTERFACE_MEMBER 
  | 14 -> TOKEN_OBLOCKEND 
  | 15 -> TOKEN_OBLOCKEND_COMING_SOON 
  | 16 -> TOKEN_OBLOCKEND_IS_HERE 
  | 17 -> TOKEN_ORIGHT_BLOCK_END 
  | 18 -> TOKEN_ODECLEND 
  | 19 -> TOKEN_OEND 
  | 20 -> TOKEN_OBLOCKSEP 
  | 21 -> TOKEN_OBLOCKBEGIN 
  | 22 -> TOKEN_ORESET 
  | 23 -> TOKEN_OFUN 
  | 24 -> TOKEN_OFUNCTION 
  | 25 -> TOKEN_OWITH 
  | 26 -> TOKEN_OELSE 
  | 27 -> TOKEN_OBODY_OPERATOR 
  | 28 -> TOKEN_OTHEN 
  | 29 -> TOKEN_ODO_BANG 
  | 30 -> TOKEN_ODO 
  | 31 -> TOKEN_OSELECT 
  | 32 -> TOKEN_OWHERE 
  | 33 -> TOKEN_OYIELD 
  | 34 -> TOKEN_OWHEN 
  | 35 -> TOKEN_OPARALLEL_OPERATOR 
  | 36 -> TOKEN_OWAIT 
  | 37 -> TOKEN_OBINDER 
  | 38 -> TOKEN_OLET 
  | 39 -> TOKEN_OLET_WAIT 
  | 40 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 41 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 42 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 43 -> TOKEN_TYPE_COMING_SOON 
  | 44 -> TOKEN_TYPE_IS_HERE 
  | 45 -> TOKEN_MODULE_COMING_SOON 
  | 46 -> TOKEN_MODULE_IS_HERE 
  | 47 -> TOKEN_RULE 
  | 48 -> TOKEN_CREATE 
  | 49 -> TOKEN_WAIT 
  | 50 -> TOKEN_WAIT_UNTIL 
  | 51 -> TOKEN_YIELD 
  | 52 -> TOKEN_SELECT_OPERATOR 
  | 53 -> TOKEN_PARALLEL_OPERATOR 
  | 54 -> TOKEN_INT_SELECT_OPERATOR 
  | 55 -> TOKEN_EXTERN 
  | 56 -> TOKEN_VOID 
  | 57 -> TOKEN_PUBLIC 
  | 58 -> TOKEN_PRIVATE 
  | 59 -> TOKEN_INTERNAL 
  | 60 -> TOKEN_GLOBAL 
  | 61 -> TOKEN_STATIC 
  | 62 -> TOKEN_MEMBER 
  | 63 -> TOKEN_CLASS 
  | 64 -> TOKEN_ABSTRACT 
  | 65 -> TOKEN_OVERRIDE 
  | 66 -> TOKEN_DEFAULT 
  | 67 -> TOKEN_CONSTRUCTOR 
  | 68 -> TOKEN_INHERIT 
  | 69 -> TOKEN_GREATER_RBRACK 
  | 70 -> TOKEN_STRUCT 
  | 71 -> TOKEN_SIG 
  | 72 -> TOKEN_BAR 
  | 73 -> TOKEN_RBRACK 
  | 74 -> TOKEN_RBRACE 
  | 75 -> TOKEN_RBRACE_COMING_SOON 
  | 76 -> TOKEN_RBRACE_IS_HERE 
  | 77 -> TOKEN_MINUS 
  | 78 -> TOKEN_DOLLAR 
  | 79 -> TOKEN_LBRACE_LESS 
  | 80 -> TOKEN_BAR_RBRACK 
  | 81 -> TOKEN_GREATER_RBRACE 
  | 82 -> TOKEN_UNDERSCORE 
  | 83 -> TOKEN_SEMICOLON_SEMICOLON 
  | 84 -> TOKEN_LARROW 
  | 85 -> TOKEN_EQUALS 
  | 86 -> TOKEN_LBRACK 
  | 87 -> TOKEN_LBRACK_BAR 
  | 88 -> TOKEN_LBRACK_LESS 
  | 89 -> TOKEN_LBRACE 
  | 90 -> TOKEN_QMARK 
  | 91 -> TOKEN_QMARK_QMARK 
  | 92 -> TOKEN_DOT 
  | 93 -> TOKEN_COLON 
  | 94 -> TOKEN_COLON_COLON 
  | 95 -> TOKEN_COLON_GREATER 
  | 96 -> TOKEN_COLON_QMARK_GREATER 
  | 97 -> TOKEN_COLON_QMARK 
  | 98 -> TOKEN_COLON_EQUALS 
  | 99 -> TOKEN_SEMICOLON 
  | 100 -> TOKEN_WHEN 
  | 101 -> TOKEN_WHILE 
  | 102 -> TOKEN_WITH 
  | 103 -> TOKEN_HASH 
  | 104 -> TOKEN_AMP 
  | 105 -> TOKEN_AMP_AMP 
  | 106 -> TOKEN_QUOTE 
  | 107 -> TOKEN_LPAREN 
  | 108 -> TOKEN_RPAREN 
  | 109 -> TOKEN_RPAREN_COMING_SOON 
  | 110 -> TOKEN_RPAREN_IS_HERE 
  | 111 -> TOKEN_STAR 
  | 112 -> TOKEN_COMMA 
  | 113 -> TOKEN_RARROW 
  | 114 -> TOKEN_GREATER_BAR_RBRACK 
  | 115 -> TOKEN_LPAREN_STAR_RPAREN 
  | 116 -> TOKEN_IMPORT 
  | 117 -> TOKEN_OPEN 
  | 118 -> TOKEN_OR 
  | 119 -> TOKEN_REC 
  | 120 -> TOKEN_THEN 
  | 121 -> TOKEN_BODY_OPERATOR 
  | 122 -> TOKEN_TO 
  | 123 -> TOKEN_TRUE 
  | 124 -> TOKEN_TRY 
  | 125 -> TOKEN_TYPE 
  | 126 -> TOKEN_VAL 
  | 127 -> TOKEN_INLINE 
  | 128 -> TOKEN_INTERFACE 
  | 129 -> TOKEN_INSTANCE 
  | 130 -> TOKEN_CONST 
  | 131 -> TOKEN_WORLD_ENTITY 
  | 132 -> TOKEN_MASTER 
  | 133 -> TOKEN_SLAVE 
  | 134 -> TOKEN_CONNECT 
  | 135 -> TOKEN_DISCONNECT 
  | 136 -> TOKEN_VIRTUAL 
  | 137 -> TOKEN_ENTITY 
  | 138 -> TOKEN_LAZY 
  | 139 -> TOKEN_OLAZY 
  | 140 -> TOKEN_MATCH 
  | 141 -> TOKEN_MUTABLE 
  | 142 -> TOKEN_REFERENCE 
  | 143 -> TOKEN_NEW 
  | 144 -> TOKEN_OF 
  | 145 -> TOKEN_EXCEPTION 
  | 146 -> TOKEN_FALSE 
  | 147 -> TOKEN_FOR 
  | 148 -> TOKEN_FUN 
  | 149 -> TOKEN_FUNCTION 
  | 150 -> TOKEN_IF 
  | 151 -> TOKEN_IN 
  | 152 -> TOKEN_JOIN_IN 
  | 153 -> TOKEN_FINALLY 
  | 154 -> TOKEN_DO_BANG 
  | 155 -> TOKEN_AND 
  | 156 -> TOKEN_AS 
  | 157 -> TOKEN_ASSERT 
  | 158 -> TOKEN_OASSERT 
  | 159 -> TOKEN_ASR 
  | 160 -> TOKEN_BEGIN 
  | 161 -> TOKEN_DO 
  | 162 -> TOKEN_DONE 
  | 163 -> TOKEN_DOWNTO 
  | 164 -> TOKEN_ELSE 
  | 165 -> TOKEN_ELIF 
  | 166 -> TOKEN_END 
  | 167 -> TOKEN_DOT_DOT 
  | 168 -> TOKEN_BAR_BAR 
  | 169 -> TOKEN_UPCAST 
  | 170 -> TOKEN_DOWNCAST 
  | 171 -> TOKEN_NULL 
  | 172 -> TOKEN_RESERVED 
  | 173 -> TOKEN_MODULE 
  | 174 -> TOKEN_NAMESPACE 
  | 175 -> TOKEN_DELEGATE 
  | 176 -> TOKEN_CONSTRAINT 
  | 177 -> TOKEN_BASE 
  | 178 -> TOKEN_LQUOTE 
  | 179 -> TOKEN_RQUOTE 
  | 180 -> TOKEN_RQUOTE_DOT 
  | 181 -> TOKEN_PERCENT_OP 
  | 182 -> TOKEN_BINDER 
  | 183 -> TOKEN_LESS 
  | 184 -> TOKEN_GREATER 
  | 185 -> TOKEN_LET 
  | 186 -> TOKEN_YIELD_BANG 
  | 187 -> TOKEN_LET_BANG 
  | 188 -> TOKEN_BIGNUM 
  | 189 -> TOKEN_DECIMAL 
  | 190 -> TOKEN_CHAR 
  | 191 -> TOKEN_IEEE64 
  | 192 -> TOKEN_IEEE32 
  | 193 -> TOKEN_NATIVEINT 
  | 194 -> TOKEN_UNATIVEINT 
  | 195 -> TOKEN_UINT64 
  | 196 -> TOKEN_UINT32 
  | 197 -> TOKEN_UINT16 
  | 198 -> TOKEN_UINT8 
  | 199 -> TOKEN_INT64 
  | 200 -> TOKEN_INT32 
  | 201 -> TOKEN_INT32_DOT_DOT 
  | 202 -> TOKEN_INT16 
  | 203 -> TOKEN_INT8 
  | 204 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 205 -> TOKEN_ADJACENT_PREFIX_OP 
  | 206 -> TOKEN_PLUS_MINUS_OP 
  | 207 -> TOKEN_INFIX_AMP_OP 
  | 208 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 209 -> TOKEN_PREFIX_OP 
  | 210 -> TOKEN_INFIX_BAR_OP 
  | 211 -> TOKEN_INFIX_AT_HAT_OP 
  | 212 -> TOKEN_INFIX_COMPARE_OP 
  | 213 -> TOKEN_INFIX_STAR_STAR_OP 
  | 214 -> TOKEN_IDENT 
  | 215 -> TOKEN_KEYWORD_STRING 
  | 216 -> TOKEN_STRING 
  | 217 -> TOKEN_BYTEARRAY 
  | 218 -> TOKEN_A 
  | 219 -> TOKEN_B 
  | 220 -> TOKEN_C 
  | 223 -> TOKEN_end_of_input
  | 221 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_stringOrKeywordString 
    | 3 -> NONTERM_stringOrKeywordString 
    | 4 -> NONTERM_cnvModuleIntro 
    | 5 -> NONTERM_casanovaModuleImpl 
    | 6 -> NONTERM_casanovaModuleImpl 
    | 7 -> NONTERM_casanovaModuleImpl 
    | 8 -> NONTERM_casanovaModuleImpl 
    | 9 -> NONTERM_casanovaModuleImpl 
    | 10 -> NONTERM_casanovaModuleImpl 
    | 11 -> NONTERM_casanovaModuleImpl 
    | 12 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 13 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 14 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 15 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 16 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 17 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 18 -> NONTERM_moduleDefnsOrExpr 
    | 19 -> NONTERM_moduleDefns 
    | 20 -> NONTERM_moduleDefns 
    | 21 -> NONTERM_moduleDefns 
    | 22 -> NONTERM_moduleDefns 
    | 23 -> NONTERM_moduleDefns 
    | 24 -> NONTERM_moduleDefns 
    | 25 -> NONTERM_moduleDefnOrDirective 
    | 26 -> NONTERM_opt_attributes 
    | 27 -> NONTERM_opt_attributes 
    | 28 -> NONTERM_attributes 
    | 29 -> NONTERM_attributes 
    | 30 -> NONTERM_attributeList 
    | 31 -> NONTERM_attributeList 
    | 32 -> NONTERM_attributeList 
    | 33 -> NONTERM_attributeList 
    | 34 -> NONTERM_attributeListElements 
    | 35 -> NONTERM_attributeListElements 
    | 36 -> NONTERM_attribute 
    | 37 -> NONTERM_attribute 
    | 38 -> NONTERM_attribute 
    | 39 -> NONTERM_attributeTarget 
    | 40 -> NONTERM_attributeTarget 
    | 41 -> NONTERM_attributeTarget 
    | 42 -> NONTERM_moduleDefn 
    | 43 -> NONTERM_moduleDefn 
    | 44 -> NONTERM_moduleDefn 
    | 45 -> NONTERM_moduleDefn 
    | 46 -> NONTERM_moduleDefn 
    | 47 -> NONTERM_moduleDefn 
    | 48 -> NONTERM_moduleDefn 
    | 49 -> NONTERM_namedModuleAbbrevBlock 
    | 50 -> NONTERM_namedModuleAbbrevBlock 
    | 51 -> NONTERM_namedModuleDefnBlock 
    | 52 -> NONTERM_namedModuleDefnBlock 
    | 53 -> NONTERM_namedModuleDefnBlock 
    | 54 -> NONTERM_namedModuleDefnBlock 
    | 55 -> NONTERM_namedModuleDefnBlock 
    | 56 -> NONTERM_namedModuleDefnBlock 
    | 57 -> NONTERM_wrappedNamedModuleDefn 
    | 58 -> NONTERM_wrappedNamedModuleDefn 
    | 59 -> NONTERM_wrappedNamedModuleDefn 
    | 60 -> NONTERM_opt_signature 
    | 61 -> NONTERM_tyconDefnAugmentation 
    | 62 -> NONTERM_opt_literalValue 
    | 63 -> NONTERM_opt_literalValue 
    | 64 -> NONTERM_opt_literalValue 
    | 65 -> NONTERM_memberFlags 
    | 66 -> NONTERM_memberFlags 
    | 67 -> NONTERM_memberFlags 
    | 68 -> NONTERM_memberSpecFlags 
    | 69 -> NONTERM_memberSpecFlags 
    | 70 -> NONTERM_memberSpecFlags 
    | 71 -> NONTERM_classMemberSpfnGetSet 
    | 72 -> NONTERM_classMemberSpfnGetSet 
    | 73 -> NONTERM_classMemberSpfnGetSet 
    | 74 -> NONTERM_classMemberSpfnGetSet 
    | 75 -> NONTERM_classMemberSpfnGetSetElements 
    | 76 -> NONTERM_classMemberSpfnGetSetElements 
    | 77 -> NONTERM_typeNameInfo 
    | 78 -> NONTERM_tyconDefnList 
    | 79 -> NONTERM_tyconDefnList 
    | 80 -> NONTERM_tyconDefn 
    | 81 -> NONTERM_tyconDefnRhsBlock 
    | 82 -> NONTERM_tyconDefnRhsBlock 
    | 83 -> NONTERM_cnvTyconDefnRhs 
    | 84 -> NONTERM_tyconDefnRhs 
    | 85 -> NONTERM_classDefnBlock 
    | 86 -> NONTERM_classDefnBlock 
    | 87 -> NONTERM_classDefnBlock 
    | 88 -> NONTERM_classDefnMembers 
    | 89 -> NONTERM_classDefnMembers 
    | 90 -> NONTERM_classDefnMembers 
    | 91 -> NONTERM_classDefnMembersAtLeastOne 
    | 92 -> NONTERM_memberCore 
    | 93 -> NONTERM_createMemberCoreWithParams 
    | 94 -> NONTERM_createMemberCore 
    | 95 -> NONTERM_abstractMemberFlags 
    | 96 -> NONTERM_abstractMemberFlags 
    | 97 -> NONTERM_classDefnMember 
    | 98 -> NONTERM_opt_typ 
    | 99 -> NONTERM_opt_typ 
    | 100 -> NONTERM_atomicPatternLongIdent 
    | 101 -> NONTERM_atomicPatternLongIdent 
    | 102 -> NONTERM_opt_declVisibility 
    | 103 -> NONTERM_opt_classDefn 
    | 104 -> NONTERM_opt_classDefn 
    | 105 -> NONTERM_optAsSpec 
    | 106 -> NONTERM_optAsSpec 
    | 107 -> NONTERM_asSpec 
    | 108 -> NONTERM_optBaseSpec 
    | 109 -> NONTERM_optBaseSpec 
    | 110 -> NONTERM_baseSpec 
    | 111 -> NONTERM_baseSpec 
    | 112 -> NONTERM_memberOrOverride 
    | 113 -> NONTERM_memberOrOverride 
    | 114 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 115 -> NONTERM_tyconDefnOrSpfnCnvRepr 
    | 116 -> NONTERM_braceFieldOrRuleDeclList 
    | 117 -> NONTERM_braceFieldOrRuleDeclList 
    | 118 -> NONTERM_fieldOrRuleList 
    | 119 -> NONTERM_fieldOrRuleList 
    | 120 -> NONTERM_topReturnTypeWithTypeConstraints 
    | 121 -> NONTERM_cnvFieldInitCore 
    | 122 -> NONTERM_fieldOrRule 
    | 123 -> NONTERM_fieldOrRule 
    | 124 -> NONTERM_fieldOrRule 
    | 125 -> NONTERM_fieldOrRule 
    | 126 -> NONTERM_fieldOrRule 
    | 127 -> NONTERM_fieldOrRule 
    | 128 -> NONTERM_inherit_idents 
    | 129 -> NONTERM_inherit_idents 
    | 130 -> NONTERM_braceFieldDeclList 
    | 131 -> NONTERM_braceFieldDeclList 
    | 132 -> NONTERM_braceFieldDeclList 
    | 133 -> NONTERM_interfaceMember 
    | 134 -> NONTERM_interfaceMember 
    | 135 -> NONTERM_tyconNameAndTyparDecls 
    | 136 -> NONTERM_typarAlts 
    | 137 -> NONTERM_typarAlts 
    | 138 -> NONTERM_unionRepr 
    | 139 -> NONTERM_unionRepr 
    | 140 -> NONTERM_unionRepr 
    | 141 -> NONTERM_attrUnionCaseDecls 
    | 142 -> NONTERM_attrUnionCaseDecls 
    | 143 -> NONTERM_attrUnionCaseDecl 
    | 144 -> NONTERM_attrUnionCaseDecl 
    | 145 -> NONTERM_attrUnionCaseDecl 
    | 146 -> NONTERM_unionCaseName 
    | 147 -> NONTERM_unionCaseName 
    | 148 -> NONTERM_unionCaseName 
    | 149 -> NONTERM_firstUnionCaseDeclOfMany 
    | 150 -> NONTERM_firstUnionCaseDeclOfMany 
    | 151 -> NONTERM_firstUnionCaseDecl 
    | 152 -> NONTERM_unionCaseRepr 
    | 153 -> NONTERM_unionCaseRepr 
    | 154 -> NONTERM_unionCaseRepr 
    | 155 -> NONTERM_recdFieldDeclList 
    | 156 -> NONTERM_recdFieldDeclList 
    | 157 -> NONTERM_recdFieldDecl 
    | 158 -> NONTERM_fieldDecl 
    | 159 -> NONTERM_importDecl 
    | 160 -> NONTERM_importLibrary 
    | 161 -> NONTERM_defnBindings 
    | 162 -> NONTERM_defnBindingsWait 
    | 163 -> NONTERM_doBinding 
    | 164 -> NONTERM_hardwhiteLetWaitBindings 
    | 165 -> NONTERM_hardwhiteLetBindings 
    | 166 -> NONTERM_hardwhiteDoBinding 
    | 167 -> NONTERM_classDefnBindings 
    | 168 -> NONTERM_classDefnBindings 
    | 169 -> NONTERM_classDefnBindings 
    | 170 -> NONTERM_classDefnBindings 
    | 171 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 172 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 173 -> NONTERM_localBindings 
    | 174 -> NONTERM_moreLocalBindings 
    | 175 -> NONTERM_moreLocalBindings 
    | 176 -> NONTERM_attr_localBinding 
    | 177 -> NONTERM_attr_localBinding 
    | 178 -> NONTERM_localBinding 
    | 179 -> NONTERM_localBinding 
    | 180 -> NONTERM_localBinding 
    | 181 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 182 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 183 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 184 -> NONTERM_typedExprWithStaticOptimizations 
    | 185 -> NONTERM_opt_staticOptimizations 
    | 186 -> NONTERM_opt_staticOptimizations 
    | 187 -> NONTERM_staticOptimization 
    | 188 -> NONTERM_staticOptimizationConditions 
    | 189 -> NONTERM_staticOptimizationConditions 
    | 190 -> NONTERM_staticOptimizationCondition 
    | 191 -> NONTERM_staticOptimizationCondition 
    | 192 -> NONTERM_rawConstant 
    | 193 -> NONTERM_rawConstant 
    | 194 -> NONTERM_rawConstant 
    | 195 -> NONTERM_rawConstant 
    | 196 -> NONTERM_rawConstant 
    | 197 -> NONTERM_rawConstant 
    | 198 -> NONTERM_anonLambdaExpr 
    | 199 -> NONTERM_anonLambdaExpr 
    | 200 -> NONTERM_anonLambdaExpr 
    | 201 -> NONTERM_anonLambdaExpr 
    | 202 -> NONTERM_anonLambdaExpr 
    | 203 -> NONTERM_anonLambdaExpr 
    | 204 -> NONTERM_anonLambdaExpr 
    | 205 -> NONTERM_anonLambdaExpr 
    | 206 -> NONTERM_constant 
    | 207 -> NONTERM_constant 
    | 208 -> NONTERM_bindingPattern 
    | 209 -> NONTERM_createBindingPattern 
    | 210 -> NONTERM_headBindingPattern 
    | 211 -> NONTERM_headBindingPattern 
    | 212 -> NONTERM_headBindingPattern 
    | 213 -> NONTERM_headBindingPattern 
    | 214 -> NONTERM_headBindingPattern 
    | 215 -> NONTERM_headBindingPattern 
    | 216 -> NONTERM_tuplePatternElements 
    | 217 -> NONTERM_tuplePatternElements 
    | 218 -> NONTERM_conjPatternElements 
    | 219 -> NONTERM_conjPatternElements 
    | 220 -> NONTERM_constrPattern 
    | 221 -> NONTERM_constrPattern 
    | 222 -> NONTERM_constrPattern 
    | 223 -> NONTERM_constrPattern 
    | 224 -> NONTERM_opt_explicitValTyparDecls2 
    | 225 -> NONTERM_atomicPatterns 
    | 226 -> NONTERM_atomicPatterns 
    | 227 -> NONTERM_atomicPatterns 
    | 228 -> NONTERM_atomicPatterns 
    | 229 -> NONTERM_atomicPattern 
    | 230 -> NONTERM_atomicPattern 
    | 231 -> NONTERM_atomicPattern 
    | 232 -> NONTERM_atomicPattern 
    | 233 -> NONTERM_atomicPattern 
    | 234 -> NONTERM_atomicPattern 
    | 235 -> NONTERM_atomicPattern 
    | 236 -> NONTERM_atomicPattern 
    | 237 -> NONTERM_atomicPattern 
    | 238 -> NONTERM_atomicPattern 
    | 239 -> NONTERM_atomicPattern 
    | 240 -> NONTERM_atomicPattern 
    | 241 -> NONTERM_atomicPattern 
    | 242 -> NONTERM_parenPatternBody 
    | 243 -> NONTERM_parenPatternBody 
    | 244 -> NONTERM_parenPattern 
    | 245 -> NONTERM_parenPattern 
    | 246 -> NONTERM_parenPattern 
    | 247 -> NONTERM_parenPattern 
    | 248 -> NONTERM_parenPattern 
    | 249 -> NONTERM_parenPattern 
    | 250 -> NONTERM_parenPattern 
    | 251 -> NONTERM_tupleParenPatternElements 
    | 252 -> NONTERM_tupleParenPatternElements 
    | 253 -> NONTERM_conjParenPatternElements 
    | 254 -> NONTERM_conjParenPatternElements 
    | 255 -> NONTERM_recordPatternElements 
    | 256 -> NONTERM_recordPatternElementsAux 
    | 257 -> NONTERM_recordPatternElementsAux 
    | 258 -> NONTERM_recordPatternElement 
    | 259 -> NONTERM_listPatternElements 
    | 260 -> NONTERM_listPatternElements 
    | 261 -> NONTERM_listPatternElements 
    | 262 -> NONTERM_fromAssignmentExprBlock 
    | 263 -> NONTERM_typedSeqExprBlock 
    | 264 -> NONTERM_typedSeqExprBlock 
    | 265 -> NONTERM_typedSeqExprBlock 
    | 266 -> NONTERM_declExprBlock 
    | 267 -> NONTERM_declExprBlock 
    | 268 -> NONTERM_typedSeqExprBlockR 
    | 269 -> NONTERM_typedSeqExprBlockR 
    | 270 -> NONTERM_typedSeqExpr 
    | 271 -> NONTERM_typedSeqExpr 
    | 272 -> NONTERM_seqExpr 
    | 273 -> NONTERM_seqExpr 
    | 274 -> NONTERM_seqExpr 
    | 275 -> NONTERM_seqExpr 
    | 276 -> NONTERM_seqExpr 
    | 277 -> NONTERM_seqExpr 
    | 278 -> NONTERM_recover 
    | 279 -> NONTERM_recover 
    | 280 -> NONTERM_choices 
    | 281 -> NONTERM_choices 
    | 282 -> NONTERM_choices 
    | 283 -> NONTERM_choices 
    | 284 -> NONTERM_intChoices 
    | 285 -> NONTERM_intChoices 
    | 286 -> NONTERM_intChoices 
    | 287 -> NONTERM_intChoices 
    | 288 -> NONTERM_choiceBody 
    | 289 -> NONTERM_choiceBody 
    | 290 -> NONTERM_choiceBody 
    | 291 -> NONTERM_parallel 
    | 292 -> NONTERM_parallel 
    | 293 -> NONTERM_declExpr 
    | 294 -> NONTERM_declExpr 
    | 295 -> NONTERM_declExpr 
    | 296 -> NONTERM_declExpr 
    | 297 -> NONTERM_declExpr 
    | 298 -> NONTERM_declExpr 
    | 299 -> NONTERM_declExpr 
    | 300 -> NONTERM_declExpr 
    | 301 -> NONTERM_declExpr 
    | 302 -> NONTERM_declExpr 
    | 303 -> NONTERM_declExpr 
    | 304 -> NONTERM_declExpr 
    | 305 -> NONTERM_declExpr 
    | 306 -> NONTERM_declExpr 
    | 307 -> NONTERM_declExpr 
    | 308 -> NONTERM_declExpr 
    | 309 -> NONTERM_declExpr 
    | 310 -> NONTERM_declExpr 
    | 311 -> NONTERM_declExpr 
    | 312 -> NONTERM_declExpr 
    | 313 -> NONTERM_declExpr 
    | 314 -> NONTERM_declExpr 
    | 315 -> NONTERM_declExpr 
    | 316 -> NONTERM_declExpr 
    | 317 -> NONTERM_declExpr 
    | 318 -> NONTERM_declExpr 
    | 319 -> NONTERM_declExpr 
    | 320 -> NONTERM_declExpr 
    | 321 -> NONTERM_declExpr 
    | 322 -> NONTERM_declExpr 
    | 323 -> NONTERM_declExpr 
    | 324 -> NONTERM_declExpr 
    | 325 -> NONTERM_declExpr 
    | 326 -> NONTERM_declExpr 
    | 327 -> NONTERM_declExpr 
    | 328 -> NONTERM_declExpr 
    | 329 -> NONTERM_declExpr 
    | 330 -> NONTERM_declExpr 
    | 331 -> NONTERM_declExpr 
    | 332 -> NONTERM_declExpr 
    | 333 -> NONTERM_declExpr 
    | 334 -> NONTERM_declExpr 
    | 335 -> NONTERM_declExpr 
    | 336 -> NONTERM_declExpr 
    | 337 -> NONTERM_declExpr 
    | 338 -> NONTERM_declExpr 
    | 339 -> NONTERM_declExpr 
    | 340 -> NONTERM_declExpr 
    | 341 -> NONTERM_declExpr 
    | 342 -> NONTERM_declExpr 
    | 343 -> NONTERM_declExpr 
    | 344 -> NONTERM_declExpr 
    | 345 -> NONTERM_declExpr 
    | 346 -> NONTERM_declExpr 
    | 347 -> NONTERM_declExpr 
    | 348 -> NONTERM_declExpr 
    | 349 -> NONTERM_declExpr 
    | 350 -> NONTERM_declExpr 
    | 351 -> NONTERM_declExpr 
    | 352 -> NONTERM_declExpr 
    | 353 -> NONTERM_declExpr 
    | 354 -> NONTERM_declExpr 
    | 355 -> NONTERM_declExpr 
    | 356 -> NONTERM_declExpr 
    | 357 -> NONTERM_declExpr 
    | 358 -> NONTERM_declExpr 
    | 359 -> NONTERM_declExpr 
    | 360 -> NONTERM_declExpr 
    | 361 -> NONTERM_declExpr 
    | 362 -> NONTERM_declExpr 
    | 363 -> NONTERM_declExpr 
    | 364 -> NONTERM_declExpr 
    | 365 -> NONTERM_declExpr 
    | 366 -> NONTERM_declExpr 
    | 367 -> NONTERM_declExpr 
    | 368 -> NONTERM_declExpr 
    | 369 -> NONTERM_declExpr 
    | 370 -> NONTERM_declExpr 
    | 371 -> NONTERM_declExpr 
    | 372 -> NONTERM_declExpr 
    | 373 -> NONTERM_declExpr 
    | 374 -> NONTERM_declExpr 
    | 375 -> NONTERM_declExpr 
    | 376 -> NONTERM_declExpr 
    | 377 -> NONTERM_declExpr 
    | 378 -> NONTERM_declExpr 
    | 379 -> NONTERM_declExpr 
    | 380 -> NONTERM_declExpr 
    | 381 -> NONTERM_declExpr 
    | 382 -> NONTERM_dynamicArg 
    | 383 -> NONTERM_dynamicArg 
    | 384 -> NONTERM_withClauses 
    | 385 -> NONTERM_withClauses 
    | 386 -> NONTERM_withClauses 
    | 387 -> NONTERM_withPatternClauses 
    | 388 -> NONTERM_withPatternClauses 
    | 389 -> NONTERM_withPatternClauses 
    | 390 -> NONTERM_withPatternClauses 
    | 391 -> NONTERM_patternAndGuard 
    | 392 -> NONTERM_patternClauses 
    | 393 -> NONTERM_patternClauses 
    | 394 -> NONTERM_patternClauses 
    | 395 -> NONTERM_patternClauses 
    | 396 -> NONTERM_patternClauses 
    | 397 -> NONTERM_patternGuard 
    | 398 -> NONTERM_patternGuard 
    | 399 -> NONTERM_patternResult 
    | 400 -> NONTERM_fromExprCondition 
    | 401 -> NONTERM_ifExprCases 
    | 402 -> NONTERM_ifExprThen 
    | 403 -> NONTERM_ifExprThen 
    | 404 -> NONTERM_ifExprThen 
    | 405 -> NONTERM_ifExprElifs 
    | 406 -> NONTERM_ifExprElifs 
    | 407 -> NONTERM_ifExprElifs 
    | 408 -> NONTERM_ifExprElifs 
    | 409 -> NONTERM_ifExprElifs 
    | 410 -> NONTERM_ifExprElifs 
    | 411 -> NONTERM_tuplePat 
    | 412 -> NONTERM_tuplePat 
    | 413 -> NONTERM_tupleExpr 
    | 414 -> NONTERM_tupleExpr 
    | 415 -> NONTERM_minusExpr 
    | 416 -> NONTERM_minusExpr 
    | 417 -> NONTERM_minusExpr 
    | 418 -> NONTERM_minusExpr 
    | 419 -> NONTERM_minusExpr 
    | 420 -> NONTERM_minusExpr 
    | 421 -> NONTERM_minusExpr 
    | 422 -> NONTERM_minusExpr 
    | 423 -> NONTERM_appExpr 
    | 424 -> NONTERM_appExpr 
    | 425 -> NONTERM_argExpr 
    | 426 -> NONTERM_argExpr 
    | 427 -> NONTERM_atomicExpr 
    | 428 -> NONTERM_atomicExpr 
    | 429 -> NONTERM_atomicExpr 
    | 430 -> NONTERM_atomicExpr 
    | 431 -> NONTERM_atomicExpr 
    | 432 -> NONTERM_atomicExpr 
    | 433 -> NONTERM_atomicExpr 
    | 434 -> NONTERM_atomicExpr 
    | 435 -> NONTERM_atomicExpr 
    | 436 -> NONTERM_atomicExpr 
    | 437 -> NONTERM_atomicExpr 
    | 438 -> NONTERM_atomicExpr 
    | 439 -> NONTERM_atomicExpr 
    | 440 -> NONTERM_atomicExpr 
    | 441 -> NONTERM_atomicExpr 
    | 442 -> NONTERM_atomicExprQualification 
    | 443 -> NONTERM_atomicExprQualification 
    | 444 -> NONTERM_atomicExprQualification 
    | 445 -> NONTERM_atomicExprQualification 
    | 446 -> NONTERM_atomicExprQualification 
    | 447 -> NONTERM_atomicExprQualification 
    | 448 -> NONTERM_atomicExprQualification 
    | 449 -> NONTERM_atomicExprQualification 
    | 450 -> NONTERM_atomicExprQualification 
    | 451 -> NONTERM_atomicExprQualification 
    | 452 -> NONTERM_optRange 
    | 453 -> NONTERM_optRange 
    | 454 -> NONTERM_optRange 
    | 455 -> NONTERM_optRange 
    | 456 -> NONTERM_atomicExprAfterType 
    | 457 -> NONTERM_atomicExprAfterType 
    | 458 -> NONTERM_atomicExprAfterType 
    | 459 -> NONTERM_atomicExprAfterType 
    | 460 -> NONTERM_atomicExprAfterType 
    | 461 -> NONTERM_atomicExprAfterType 
    | 462 -> NONTERM_atomicExprAfterType 
    | 463 -> NONTERM_atomicExprAfterType 
    | 464 -> NONTERM_beginEndExpr 
    | 465 -> NONTERM_beginEndExpr 
    | 466 -> NONTERM_beginEndExpr 
    | 467 -> NONTERM_beginEndExpr 
    | 468 -> NONTERM_arrayExpr 
    | 469 -> NONTERM_arrayExpr 
    | 470 -> NONTERM_arrayExpr 
    | 471 -> NONTERM_arrayExpr 
    | 472 -> NONTERM_parenExpr 
    | 473 -> NONTERM_parenExpr 
    | 474 -> NONTERM_parenExpr 
    | 475 -> NONTERM_parenExpr 
    | 476 -> NONTERM_parenExpr 
    | 477 -> NONTERM_parenExpr 
    | 478 -> NONTERM_parenExpr 
    | 479 -> NONTERM_parenExpr 
    | 480 -> NONTERM_parenExpr 
    | 481 -> NONTERM_parenExprBody 
    | 482 -> NONTERM_staticallyKnownHeadTypars 
    | 483 -> NONTERM_staticallyKnownHeadTypars 
    | 484 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 485 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 486 -> NONTERM_braceExpr 
    | 487 -> NONTERM_braceExpr 
    | 488 -> NONTERM_braceExpr 
    | 489 -> NONTERM_braceExpr 
    | 490 -> NONTERM_braceExpr 
    | 491 -> NONTERM_braceExprBody 
    | 492 -> NONTERM_braceExprBody 
    | 493 -> NONTERM_monadicExprBody 
    | 494 -> NONTERM_listExprElements 
    | 495 -> NONTERM_listExprElements 
    | 496 -> NONTERM_monadicExprInitial 
    | 497 -> NONTERM_monadicExprInitial 
    | 498 -> NONTERM_rangeSequenceExpr 
    | 499 -> NONTERM_rangeSequenceExpr 
    | 500 -> NONTERM_rangeSequenceExpr 
    | 501 -> NONTERM_monadicSingleLineQualifiersThenArrowThenExprR 
    | 502 -> NONTERM_forLoopBinder 
    | 503 -> NONTERM_forLoopBinder 
    | 504 -> NONTERM_forLoopBinder 
    | 505 -> NONTERM_forLoopBinder 
    | 506 -> NONTERM_fromLoopBinder 
    | 507 -> NONTERM_fromLoopBinder 
    | 508 -> NONTERM_fromLoopBinder 
    | 509 -> NONTERM_fromLoopBinder 
    | 510 -> NONTERM_fromTupleExpr 
    | 511 -> NONTERM_fromTupleExpr 
    | 512 -> NONTERM_fromTupleExpr 
    | 513 -> NONTERM_forLoopRange 
    | 514 -> NONTERM_opt_curriedArgExprs 
    | 515 -> NONTERM_opt_curriedArgExprs 
    | 516 -> NONTERM_opt_atomicExprAfterType 
    | 517 -> NONTERM_opt_atomicExprAfterType 
    | 518 -> NONTERM_recdExpr 
    | 519 -> NONTERM_recdExpr 
    | 520 -> NONTERM_recdExpr 
    | 521 -> NONTERM_recdExpr 
    | 522 -> NONTERM_recdExpr 
    | 523 -> NONTERM_recdExpr 
    | 524 -> NONTERM_recdExpr 
    | 525 -> NONTERM_recdExpr 
    | 526 -> NONTERM_opt_seps_recd 
    | 527 -> NONTERM_opt_seps_recd 
    | 528 -> NONTERM_seps_recd 
    | 529 -> NONTERM_seps_recd 
    | 530 -> NONTERM_seps_recd 
    | 531 -> NONTERM_seps_recd 
    | 532 -> NONTERM_pathOrUnderscore 
    | 533 -> NONTERM_pathOrUnderscore 
    | 534 -> NONTERM_recdExprBindings 
    | 535 -> NONTERM_recdExprBindings 
    | 536 -> NONTERM_recdBinding 
    | 537 -> NONTERM_recdBinding 
    | 538 -> NONTERM_recdBinding 
    | 539 -> NONTERM_recdBinding 
    | 540 -> NONTERM_recdBinding 
    | 541 -> NONTERM_forLoopDirection 
    | 542 -> NONTERM_forLoopDirection 
    | 543 -> NONTERM_typeWithTypeConstraints 
    | 544 -> NONTERM_topTypeWithTypeConstraints 
    | 545 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 546 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 547 -> NONTERM_topType 
    | 548 -> NONTERM_topType 
    | 549 -> NONTERM_topTupleType 
    | 550 -> NONTERM_topTupleType 
    | 551 -> NONTERM_topTupleTypeElements 
    | 552 -> NONTERM_topTupleTypeElements 
    | 553 -> NONTERM_topAppType 
    | 554 -> NONTERM_topAppType 
    | 555 -> NONTERM_topAppType 
    | 556 -> NONTERM_topAppType 
    | 557 -> NONTERM_topAppType 
    | 558 -> NONTERM_topAppType 
    | 559 -> NONTERM_typ 
    | 560 -> NONTERM_typ 
    | 561 -> NONTERM_tupleType 
    | 562 -> NONTERM_tupleType 
    | 563 -> NONTERM_tupleType 
    | 564 -> NONTERM_tupleType 
    | 565 -> NONTERM_tupleOrQuotTypeElements 
    | 566 -> NONTERM_tupleOrQuotTypeElements 
    | 567 -> NONTERM_tupleOrQuotTypeElements 
    | 568 -> NONTERM_tupleTypeElements 
    | 569 -> NONTERM_tupleTypeElements 
    | 570 -> NONTERM_appTypeCon 
    | 571 -> NONTERM_appTypeConPower 
    | 572 -> NONTERM_appTypeConPower 
    | 573 -> NONTERM_appType 
    | 574 -> NONTERM_appType 
    | 575 -> NONTERM_appType 
    | 576 -> NONTERM_appType 
    | 577 -> NONTERM_appType 
    | 578 -> NONTERM_appType 
    | 579 -> NONTERM_arrayTypeSuffix 
    | 580 -> NONTERM_arrayTypeSuffix 
    | 581 -> NONTERM_arrayTypeSuffix 
    | 582 -> NONTERM_arrayTypeSuffix 
    | 583 -> NONTERM_appTypePrefixArguments 
    | 584 -> NONTERM_typeArgListElements 
    | 585 -> NONTERM_typeArgListElements 
    | 586 -> NONTERM_powerType 
    | 587 -> NONTERM_powerType 
    | 588 -> NONTERM_powerType 
    | 589 -> NONTERM_appTypeNonAtomicDeprecated 
    | 590 -> NONTERM_appTypeNonAtomicDeprecated 
    | 591 -> NONTERM_appTypeNonAtomicDeprecated 
    | 592 -> NONTERM_appTypeNonAtomicDeprecated 
    | 593 -> NONTERM_appTypeNonAtomicDeprecated 
    | 594 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 595 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 596 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 597 -> NONTERM_atomType 
    | 598 -> NONTERM_atomType 
    | 599 -> NONTERM_atomType 
    | 600 -> NONTERM_atomType 
    | 601 -> NONTERM_atomType 
    | 602 -> NONTERM_atomType 
    | 603 -> NONTERM_atomType 
    | 604 -> NONTERM_atomType 
    | 605 -> NONTERM_atomType 
    | 606 -> NONTERM_atomType 
    | 607 -> NONTERM_atomType 
    | 608 -> NONTERM_typeArgsNoHpaDeprecated 
    | 609 -> NONTERM_typeArgsNoHpaDeprecated 
    | 610 -> NONTERM_typeArgsActual 
    | 611 -> NONTERM_typeArgsActual 
    | 612 -> NONTERM_typeArgsActual 
    | 613 -> NONTERM_typeArgsActual 
    | 614 -> NONTERM_typeArgsActual 
    | 615 -> NONTERM_typeArgsActual 
    | 616 -> NONTERM_typeArgsActual 
    | 617 -> NONTERM_typeArgActual 
    | 618 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 619 -> NONTERM_measureTypeArg 
    | 620 -> NONTERM_measureTypeArg 
    | 621 -> NONTERM_measureTypeAtom 
    | 622 -> NONTERM_measureTypeAtom 
    | 623 -> NONTERM_measureTypePower 
    | 624 -> NONTERM_measureTypePower 
    | 625 -> NONTERM_measureTypePower 
    | 626 -> NONTERM_measureTypePower 
    | 627 -> NONTERM_measureTypeSeq 
    | 628 -> NONTERM_measureTypeSeq 
    | 629 -> NONTERM_measureTypeExpr 
    | 630 -> NONTERM_measureTypeExpr 
    | 631 -> NONTERM_measureTypeExpr 
    | 632 -> NONTERM_measureTypeExpr 
    | 633 -> NONTERM_typar 
    | 634 -> NONTERM_typar 
    | 635 -> NONTERM_staticallyKnownHeadTypar 
    | 636 -> NONTERM_ident 
    | 637 -> NONTERM_path 
    | 638 -> NONTERM_path 
    | 639 -> NONTERM_path 
    | 640 -> NONTERM_path 
    | 641 -> NONTERM_path 
    | 642 -> NONTERM_opName 
    | 643 -> NONTERM_opName 
    | 644 -> NONTERM_opName 
    | 645 -> NONTERM_opName 
    | 646 -> NONTERM_opName 
    | 647 -> NONTERM_operatorName 
    | 648 -> NONTERM_operatorName 
    | 649 -> NONTERM_operatorName 
    | 650 -> NONTERM_operatorName 
    | 651 -> NONTERM_operatorName 
    | 652 -> NONTERM_operatorName 
    | 653 -> NONTERM_operatorName 
    | 654 -> NONTERM_operatorName 
    | 655 -> NONTERM_operatorName 
    | 656 -> NONTERM_operatorName 
    | 657 -> NONTERM_operatorName 
    | 658 -> NONTERM_operatorName 
    | 659 -> NONTERM_operatorName 
    | 660 -> NONTERM_operatorName 
    | 661 -> NONTERM_operatorName 
    | 662 -> NONTERM_operatorName 
    | 663 -> NONTERM_operatorName 
    | 664 -> NONTERM_operatorName 
    | 665 -> NONTERM_operatorName 
    | 666 -> NONTERM_operatorName 
    | 667 -> NONTERM_operatorName 
    | 668 -> NONTERM_operatorName 
    | 669 -> NONTERM_operatorName 
    | 670 -> NONTERM_operatorName 
    | 671 -> NONTERM_operatorName 
    | 672 -> NONTERM_operatorName 
    | 673 -> NONTERM_barName 
    | 674 -> NONTERM_barNames 
    | 675 -> NONTERM_barNames 
    | 676 -> NONTERM_identOrOp 
    | 677 -> NONTERM_identOrOp 
    | 678 -> NONTERM_pathOp 
    | 679 -> NONTERM_pathOp 
    | 680 -> NONTERM_pathOp 
    | 681 -> NONTERM_pathOp 
    | 682 -> NONTERM_pathOp 
    | 683 -> NONTERM_nameop 
    | 684 -> NONTERM_topSeparator 
    | 685 -> NONTERM_topSeparator 
    | 686 -> NONTERM_topSeparator 
    | 687 -> NONTERM_topSeparators 
    | 688 -> NONTERM_topSeparators 
    | 689 -> NONTERM_interactiveSeparator 
    | 690 -> NONTERM_interactiveSeparator 
    | 691 -> NONTERM_interactiveSeparators 
    | 692 -> NONTERM_interactiveSeparators 
    | 693 -> NONTERM_opt_interactiveSeparators 
    | 694 -> NONTERM_opt_interactiveSeparators 
    | 695 -> NONTERM_opt_topSeparators 
    | 696 -> NONTERM_opt_topSeparators 
    | 697 -> NONTERM_seps 
    | 698 -> NONTERM_seps 
    | 699 -> NONTERM_seps 
    | 700 -> NONTERM_seps 
    | 701 -> NONTERM_declEnd 
    | 702 -> NONTERM_declEnd 
    | 703 -> NONTERM_declEnd 
    | 704 -> NONTERM_opt_declEnd 
    | 705 -> NONTERM_opt_declEnd 
    | 706 -> NONTERM_opt_declEnd 
    | 707 -> NONTERM_opt_declEnd 
    | 708 -> NONTERM_opt_ODECLEND 
    | 709 -> NONTERM_opt_ODECLEND 
    | 710 -> NONTERM_deprecated_opt_equals 
    | 711 -> NONTERM_deprecated_opt_equals 
    | 712 -> NONTERM_opt_OBLOCKSEP 
    | 713 -> NONTERM_opt_OBLOCKSEP 
    | 714 -> NONTERM_opt_seps 
    | 715 -> NONTERM_opt_seps 
    | 716 -> NONTERM_opt_rec 
    | 717 -> NONTERM_opt_rec 
    | 718 -> NONTERM_opt_bar 
    | 719 -> NONTERM_opt_bar 
    | 720 -> NONTERM_opt_inline 
    | 721 -> NONTERM_opt_inline 
    | 722 -> NONTERM_opt_mutable 
    | 723 -> NONTERM_opt_mutable 
    | 724 -> NONTERM_opt_ref 
    | 725 -> NONTERM_opt_ref 
    | 726 -> NONTERM_doToken 
    | 727 -> NONTERM_doToken 
    | 728 -> NONTERM_doneDeclEnd 
    | 729 -> NONTERM_doneDeclEnd 
    | 730 -> NONTERM_structOrBegin 
    | 731 -> NONTERM_structOrBegin 
    | 732 -> NONTERM_sigOrBegin 
    | 733 -> NONTERM_sigOrBegin 
    | 734 -> NONTERM_colonOrEquals 
    | 735 -> NONTERM_colonOrEquals 
    | 736 -> NONTERM_opt_HASH 
    | 737 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 738 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 739 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 740 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 741 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 742 -> NONTERM_type_keyword 
    | 743 -> NONTERM_type_keyword 
    | 744 -> NONTERM_type_keyword 
    | 745 -> NONTERM_type_keyword 
    | 746 -> NONTERM_type_keyword 
    | 747 -> NONTERM_module_keyword 
    | 748 -> NONTERM_module_keyword 
    | 749 -> NONTERM_module_keyword 
    | 750 -> NONTERM_rbrace 
    | 751 -> NONTERM_rbrace 
    | 752 -> NONTERM_rbrace 
    | 753 -> NONTERM_rparen 
    | 754 -> NONTERM_rparen 
    | 755 -> NONTERM_rparen 
    | 756 -> NONTERM_oblockend 
    | 757 -> NONTERM_oblockend 
    | 758 -> NONTERM_oblockend 
    | 759 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 760 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 761 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 762 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 763 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 764 -> NONTERM_ends_coming_soon_or_recover 
    | 765 -> NONTERM_ends_coming_soon_or_recover 
    | 766 -> NONTERM_ends_coming_soon_or_recover 
    | 767 -> NONTERM_ends_coming_soon_or_recover 
    | 768 -> NONTERM_ends_coming_soon_or_recover 
    | 769 -> NONTERM_ends_coming_soon_or_recover 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 223 
let _fsyacc_tagOfErrorTerminal = 221

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | OBLOCKEND_COMING_SOON  -> "OBLOCKEND_COMING_SOON" 
  | OBLOCKEND_IS_HERE  -> "OBLOCKEND_IS_HERE" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OBODY_OPERATOR  -> "OBODY_OPERATOR" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OSELECT  -> "OSELECT" 
  | OWHERE  -> "OWHERE" 
  | OYIELD  -> "OYIELD" 
  | OWHEN  -> "OWHEN" 
  | OPARALLEL_OPERATOR  -> "OPARALLEL_OPERATOR" 
  | OWAIT  -> "OWAIT" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | OLET_WAIT _ -> "OLET_WAIT" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | TYPE_COMING_SOON  -> "TYPE_COMING_SOON" 
  | TYPE_IS_HERE  -> "TYPE_IS_HERE" 
  | MODULE_COMING_SOON  -> "MODULE_COMING_SOON" 
  | MODULE_IS_HERE  -> "MODULE_IS_HERE" 
  | RULE  -> "RULE" 
  | CREATE  -> "CREATE" 
  | WAIT  -> "WAIT" 
  | WAIT_UNTIL  -> "WAIT_UNTIL" 
  | YIELD  -> "YIELD" 
  | SELECT_OPERATOR  -> "SELECT_OPERATOR" 
  | PARALLEL_OPERATOR  -> "PARALLEL_OPERATOR" 
  | INT_SELECT_OPERATOR  -> "INT_SELECT_OPERATOR" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE  -> "RBRACE" 
  | RBRACE_COMING_SOON  -> "RBRACE_COMING_SOON" 
  | RBRACE_IS_HERE  -> "RBRACE_IS_HERE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | LBRACE_LESS  -> "LBRACE_LESS" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | GREATER_RBRACE  -> "GREATER_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | LBRACE  -> "LBRACE" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | RPAREN_COMING_SOON  -> "RPAREN_COMING_SOON" 
  | RPAREN_IS_HERE  -> "RPAREN_IS_HERE" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | IMPORT  -> "IMPORT" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | BODY_OPERATOR  -> "BODY_OPERATOR" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | CONST  -> "CONST" 
  | WORLD_ENTITY  -> "WORLD_ENTITY" 
  | MASTER  -> "MASTER" 
  | SLAVE  -> "SLAVE" 
  | CONNECT  -> "CONNECT" 
  | DISCONNECT  -> "DISCONNECT" 
  | VIRTUAL  -> "VIRTUAL" 
  | ENTITY  -> "ENTITY" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MUTABLE  -> "MUTABLE" 
  | REFERENCE  -> "REFERENCE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | JOIN_IN  -> "JOIN_IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | LET_BANG _ -> "LET_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | NATIVEINT _ -> "NATIVEINT" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 
  | A  -> "A" 
  | B  -> "B" 
  | C  -> "C" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | OBLOCKEND_COMING_SOON  -> (null : System.Object) 
  | OBLOCKEND_IS_HERE  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OBODY_OPERATOR  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OSELECT  -> (null : System.Object) 
  | OWHERE  -> (null : System.Object) 
  | OYIELD  -> (null : System.Object) 
  | OWHEN  -> (null : System.Object) 
  | OPARALLEL_OPERATOR  -> (null : System.Object) 
  | OWAIT  -> (null : System.Object) 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET_WAIT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | TYPE_COMING_SOON  -> (null : System.Object) 
  | TYPE_IS_HERE  -> (null : System.Object) 
  | MODULE_COMING_SOON  -> (null : System.Object) 
  | MODULE_IS_HERE  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CREATE  -> (null : System.Object) 
  | WAIT  -> (null : System.Object) 
  | WAIT_UNTIL  -> (null : System.Object) 
  | YIELD  -> (null : System.Object) 
  | SELECT_OPERATOR  -> (null : System.Object) 
  | PARALLEL_OPERATOR  -> (null : System.Object) 
  | INT_SELECT_OPERATOR  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | RBRACE_COMING_SOON  -> (null : System.Object) 
  | RBRACE_IS_HERE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | LBRACE_LESS  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | GREATER_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RPAREN_COMING_SOON  -> (null : System.Object) 
  | RPAREN_IS_HERE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | BODY_OPERATOR  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | WORLD_ENTITY  -> (null : System.Object) 
  | MASTER  -> (null : System.Object) 
  | SLAVE  -> (null : System.Object) 
  | CONNECT  -> (null : System.Object) 
  | DISCONNECT  -> (null : System.Object) 
  | VIRTUAL  -> (null : System.Object) 
  | ENTITY  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | REFERENCE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | JOIN_IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | A  -> (null : System.Object) 
  | B  -> (null : System.Object) 
  | C  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 172us; 65535us; 54us; 286us; 58us; 286us; 63us; 286us; 118us; 286us; 121us; 286us; 123us; 286us; 126us; 286us; 129us; 286us; 152us; 286us; 156us; 286us; 168us; 286us; 192us; 286us; 195us; 286us; 208us; 286us; 212us; 286us; 221us; 286us; 232us; 286us; 242us; 286us; 255us; 286us; 258us; 286us; 262us; 286us; 272us; 286us; 278us; 286us; 287us; 286us; 289us; 286us; 292us; 286us; 294us; 286us; 318us; 286us; 319us; 286us; 323us; 286us; 324us; 286us; 325us; 286us; 326us; 286us; 328us; 286us; 330us; 286us; 332us; 286us; 335us; 286us; 337us; 286us; 339us; 286us; 344us; 286us; 347us; 286us; 356us; 286us; 376us; 286us; 379us; 286us; 381us; 286us; 383us; 286us; 384us; 286us; 385us; 286us; 386us; 286us; 393us; 286us; 395us; 286us; 397us; 286us; 402us; 286us; 409us; 286us; 414us; 286us; 416us; 286us; 419us; 286us; 422us; 286us; 436us; 286us; 443us; 286us; 450us; 286us; 453us; 286us; 457us; 286us; 465us; 286us; 468us; 286us; 471us; 286us; 473us; 286us; 477us; 286us; 479us; 286us; 484us; 286us; 487us; 286us; 491us; 286us; 495us; 286us; 500us; 286us; 502us; 286us; 511us; 286us; 513us; 286us; 521us; 286us; 528us; 286us; 570us; 286us; 572us; 286us; 574us; 286us; 575us; 286us; 576us; 286us; 577us; 286us; 578us; 286us; 579us; 286us; 580us; 286us; 581us; 286us; 582us; 286us; 583us; 286us; 584us; 286us; 585us; 286us; 586us; 286us; 587us; 286us; 588us; 286us; 589us; 286us; 590us; 286us; 591us; 286us; 592us; 286us; 593us; 286us; 616us; 286us; 619us; 286us; 621us; 286us; 626us; 286us; 633us; 286us; 638us; 286us; 639us; 286us; 643us; 286us; 645us; 286us; 649us; 286us; 651us; 286us; 655us; 286us; 658us; 286us; 659us; 286us; 660us; 286us; 661us; 286us; 663us; 286us; 664us; 286us; 666us; 286us; 667us; 286us; 669us; 286us; 671us; 286us; 675us; 286us; 677us; 286us; 678us; 286us; 681us; 286us; 687us; 286us; 688us; 286us; 691us; 286us; 692us; 286us; 705us; 286us; 715us; 286us; 718us; 286us; 726us; 286us; 727us; 286us; 737us; 286us; 744us; 286us; 750us; 286us; 751us; 286us; 764us; 286us; 776us; 286us; 777us; 286us; 779us; 286us; 781us; 286us; 785us; 286us; 786us; 286us; 788us; 286us; 790us; 286us; 794us; 286us; 799us; 286us; 824us; 286us; 832us; 286us; 835us; 286us; 838us; 286us; 841us; 286us; 844us; 286us; 848us; 286us; 851us; 286us; 854us; 286us; 856us; 286us; 858us; 286us; 861us; 286us; 863us; 286us; 866us; 286us; 873us; 286us; 885us; 286us; 886us; 286us; 903us; 286us; 907us; 286us; 937us; 286us; 939us; 286us; 1us; 65535us; 0us; 7us; 1us; 65535us; 0us; 2us; 2us; 65535us; 0us; 9us; 7us; 11us; 3us; 65535us; 0us; 25us; 7us; 25us; 18us; 19us; 5us; 65535us; 0us; 26us; 7us; 26us; 18us; 26us; 30us; 31us; 34us; 35us; 9us; 65535us; 0us; 27us; 7us; 27us; 16us; 33us; 18us; 27us; 23us; 33us; 28us; 29us; 30us; 27us; 32us; 33us; 34us; 27us; 9us; 65535us; 0us; 28us; 7us; 28us; 16us; 28us; 18us; 28us; 23us; 28us; 28us; 28us; 30us; 28us; 32us; 28us; 34us; 28us; 9us; 65535us; 0us; 71us; 7us; 71us; 16us; 71us; 18us; 71us; 23us; 71us; 28us; 71us; 30us; 71us; 32us; 71us; 34us; 71us; 10us; 65535us; 0us; 37us; 7us; 37us; 16us; 37us; 18us; 37us; 23us; 37us; 28us; 37us; 30us; 37us; 32us; 37us; 34us; 37us; 38us; 39us; 10us; 65535us; 0us; 38us; 7us; 38us; 16us; 38us; 18us; 38us; 23us; 38us; 28us; 38us; 30us; 38us; 32us; 38us; 34us; 38us; 38us; 38us; 1us; 65535us; 40us; 41us; 2us; 65535us; 40us; 50us; 51us; 52us; 2us; 65535us; 40us; 56us; 51us; 56us; 9us; 65535us; 0us; 36us; 7us; 36us; 16us; 36us; 18us; 36us; 23us; 36us; 28us; 36us; 30us; 36us; 32us; 36us; 34us; 36us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 131us; 132us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 3us; 65535us; 74us; 91us; 77us; 91us; 88us; 91us; 3us; 65535us; 75us; 76us; 78us; 79us; 89us; 90us; 3us; 65535us; 74us; 75us; 77us; 78us; 88us; 89us; 1us; 65535us; 92us; 93us; 1us; 65535us; 94us; 95us; 1us; 65535us; 94us; 100us; 1us; 65535us; 139us; 140us; 4us; 65535us; 107us; 108us; 113us; 114us; 116us; 117us; 139us; 111us; 4us; 65535us; 107us; 112us; 113us; 112us; 116us; 112us; 139us; 112us; 2us; 65535us; 132us; 133us; 159us; 160us; 1us; 65535us; 162us; 163us; 1us; 65535us; 162us; 165us; 0us; 65535us; 4us; 65535us; 107us; 115us; 113us; 115us; 116us; 115us; 139us; 115us; 0us; 65535us; 34us; 65535us; 118us; 327us; 123us; 327us; 168us; 327us; 255us; 327us; 287us; 351us; 292us; 351us; 318us; 327us; 319us; 327us; 323us; 327us; 324us; 327us; 325us; 327us; 326us; 327us; 328us; 351us; 330us; 351us; 332us; 351us; 335us; 351us; 337us; 351us; 339us; 351us; 344us; 327us; 347us; 327us; 356us; 327us; 376us; 327us; 381us; 327us; 383us; 327us; 384us; 327us; 385us; 327us; 386us; 327us; 393us; 327us; 395us; 327us; 511us; 327us; 619us; 327us; 621us; 327us; 626us; 327us; 633us; 327us; 8us; 65535us; 94us; 142us; 107us; 131us; 113us; 131us; 116us; 131us; 139us; 131us; 145us; 158us; 150us; 158us; 167us; 168us; 4us; 65535us; 96us; 97us; 98us; 99us; 101us; 102us; 103us; 104us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 94us; 106us; 1us; 65535us; 94us; 105us; 1us; 65535us; 142us; 144us; 2us; 65535us; 145us; 146us; 150us; 151us; 1us; 65535us; 154us; 155us; 1us; 65535us; 168us; 169us; 2us; 65535us; 145us; 149us; 150us; 149us; 2us; 65535us; 171us; 172us; 175us; 176us; 2us; 65535us; 192us; 210us; 208us; 210us; 0us; 65535us; 3us; 65535us; 74us; 87us; 77us; 87us; 88us; 87us; 0us; 65535us; 1us; 65535us; 142us; 143us; 3us; 65535us; 142us; 184us; 185us; 186us; 188us; 189us; 3us; 65535us; 142us; 188us; 185us; 188us; 188us; 188us; 3us; 65535us; 142us; 190us; 185us; 190us; 188us; 190us; 1us; 65535us; 142us; 185us; 1us; 65535us; 142us; 187us; 2us; 65535us; 192us; 193us; 208us; 209us; 2us; 65535us; 177us; 178us; 215us; 216us; 2us; 65535us; 177us; 214us; 215us; 214us; 4us; 65535us; 145us; 173us; 150us; 173us; 177us; 218us; 215us; 218us; 9us; 65535us; 0us; 83us; 7us; 83us; 16us; 83us; 18us; 83us; 23us; 83us; 28us; 83us; 30us; 83us; 32us; 83us; 34us; 83us; 9us; 65535us; 0us; 82us; 7us; 82us; 16us; 82us; 18us; 82us; 23us; 82us; 28us; 82us; 30us; 82us; 32us; 82us; 34us; 82us; 87us; 65535us; 121us; 467us; 126us; 467us; 129us; 467us; 156us; 467us; 232us; 467us; 242us; 467us; 258us; 467us; 262us; 467us; 272us; 467us; 289us; 467us; 294us; 467us; 397us; 467us; 402us; 467us; 414us; 467us; 416us; 467us; 419us; 467us; 422us; 467us; 436us; 467us; 443us; 467us; 450us; 467us; 453us; 467us; 457us; 467us; 465us; 467us; 468us; 467us; 471us; 467us; 473us; 467us; 477us; 467us; 479us; 467us; 484us; 467us; 487us; 467us; 491us; 467us; 495us; 467us; 500us; 467us; 502us; 467us; 513us; 467us; 521us; 467us; 528us; 467us; 572us; 467us; 574us; 467us; 575us; 467us; 576us; 467us; 577us; 467us; 578us; 467us; 579us; 467us; 580us; 467us; 581us; 467us; 582us; 467us; 583us; 467us; 584us; 467us; 585us; 467us; 586us; 467us; 587us; 467us; 588us; 467us; 589us; 467us; 590us; 467us; 591us; 467us; 592us; 467us; 593us; 467us; 616us; 467us; 638us; 467us; 639us; 467us; 643us; 467us; 645us; 467us; 649us; 467us; 651us; 467us; 655us; 467us; 658us; 467us; 659us; 467us; 705us; 467us; 715us; 467us; 718us; 467us; 726us; 467us; 727us; 467us; 737us; 467us; 744us; 467us; 750us; 467us; 751us; 467us; 764us; 467us; 776us; 467us; 777us; 467us; 779us; 467us; 781us; 467us; 785us; 467us; 786us; 467us; 794us; 467us; 799us; 467us; 824us; 467us; 87us; 65535us; 121us; 464us; 126us; 464us; 129us; 464us; 156us; 464us; 232us; 464us; 242us; 464us; 258us; 464us; 262us; 464us; 272us; 464us; 289us; 464us; 294us; 464us; 397us; 464us; 402us; 464us; 414us; 464us; 416us; 464us; 419us; 464us; 422us; 464us; 436us; 464us; 443us; 464us; 450us; 464us; 453us; 464us; 457us; 464us; 465us; 464us; 468us; 464us; 471us; 464us; 473us; 464us; 477us; 464us; 479us; 464us; 484us; 464us; 487us; 464us; 491us; 464us; 495us; 464us; 500us; 464us; 502us; 464us; 513us; 464us; 521us; 464us; 528us; 464us; 572us; 464us; 574us; 464us; 575us; 464us; 576us; 464us; 577us; 464us; 578us; 464us; 579us; 464us; 580us; 464us; 581us; 464us; 582us; 464us; 583us; 464us; 584us; 464us; 585us; 464us; 586us; 464us; 587us; 464us; 588us; 464us; 589us; 464us; 590us; 464us; 591us; 464us; 592us; 464us; 593us; 464us; 616us; 464us; 638us; 464us; 639us; 464us; 643us; 464us; 645us; 464us; 649us; 464us; 651us; 464us; 655us; 464us; 658us; 464us; 659us; 464us; 705us; 464us; 715us; 464us; 718us; 464us; 726us; 464us; 727us; 464us; 737us; 464us; 744us; 464us; 750us; 464us; 751us; 464us; 764us; 464us; 776us; 464us; 777us; 464us; 779us; 464us; 781us; 464us; 785us; 464us; 786us; 464us; 794us; 464us; 799us; 464us; 824us; 464us; 1us; 65535us; 71us; 73us; 87us; 65535us; 121us; 471us; 126us; 471us; 129us; 471us; 156us; 471us; 232us; 471us; 242us; 471us; 258us; 471us; 262us; 471us; 272us; 471us; 289us; 471us; 294us; 471us; 397us; 471us; 402us; 471us; 414us; 471us; 416us; 471us; 419us; 471us; 422us; 471us; 436us; 471us; 443us; 471us; 450us; 471us; 453us; 471us; 457us; 471us; 465us; 471us; 468us; 471us; 471us; 471us; 473us; 471us; 477us; 471us; 479us; 471us; 484us; 471us; 487us; 471us; 491us; 471us; 495us; 471us; 500us; 471us; 502us; 471us; 513us; 471us; 521us; 471us; 528us; 471us; 572us; 471us; 574us; 471us; 575us; 471us; 576us; 471us; 577us; 471us; 578us; 471us; 579us; 471us; 580us; 471us; 581us; 471us; 582us; 471us; 583us; 471us; 584us; 471us; 585us; 471us; 586us; 471us; 587us; 471us; 588us; 471us; 589us; 471us; 590us; 471us; 591us; 471us; 592us; 471us; 593us; 471us; 616us; 471us; 638us; 471us; 639us; 471us; 643us; 471us; 645us; 471us; 649us; 471us; 651us; 471us; 655us; 471us; 658us; 471us; 659us; 471us; 705us; 471us; 715us; 471us; 718us; 471us; 726us; 471us; 727us; 471us; 737us; 471us; 744us; 471us; 750us; 471us; 751us; 471us; 764us; 471us; 776us; 471us; 777us; 471us; 779us; 471us; 781us; 471us; 785us; 471us; 786us; 471us; 794us; 471us; 799us; 471us; 824us; 471us; 88us; 65535us; 71us; 72us; 121us; 422us; 126us; 422us; 129us; 422us; 156us; 422us; 232us; 422us; 242us; 422us; 258us; 422us; 262us; 422us; 272us; 422us; 289us; 422us; 294us; 422us; 397us; 422us; 402us; 422us; 414us; 422us; 416us; 422us; 419us; 422us; 422us; 422us; 436us; 473us; 443us; 473us; 450us; 473us; 453us; 422us; 457us; 422us; 465us; 422us; 468us; 422us; 471us; 422us; 473us; 422us; 477us; 422us; 479us; 422us; 484us; 422us; 487us; 422us; 491us; 422us; 495us; 473us; 500us; 473us; 502us; 422us; 513us; 422us; 521us; 422us; 528us; 422us; 572us; 473us; 574us; 473us; 575us; 473us; 576us; 473us; 577us; 473us; 578us; 473us; 579us; 473us; 580us; 473us; 581us; 473us; 582us; 473us; 583us; 473us; 584us; 473us; 585us; 473us; 586us; 473us; 587us; 473us; 588us; 473us; 589us; 473us; 590us; 473us; 591us; 473us; 592us; 473us; 593us; 473us; 616us; 422us; 638us; 473us; 639us; 422us; 643us; 473us; 645us; 422us; 649us; 473us; 651us; 422us; 655us; 473us; 658us; 473us; 659us; 473us; 705us; 422us; 715us; 422us; 718us; 422us; 726us; 473us; 727us; 473us; 737us; 422us; 744us; 422us; 750us; 422us; 751us; 422us; 764us; 422us; 776us; 473us; 777us; 473us; 779us; 422us; 781us; 473us; 785us; 473us; 786us; 473us; 794us; 473us; 799us; 473us; 824us; 473us; 87us; 65535us; 121us; 483us; 126us; 483us; 129us; 483us; 156us; 483us; 232us; 483us; 242us; 483us; 258us; 483us; 262us; 483us; 272us; 483us; 289us; 483us; 294us; 483us; 397us; 483us; 402us; 483us; 414us; 483us; 416us; 483us; 419us; 483us; 422us; 483us; 436us; 483us; 443us; 483us; 450us; 483us; 453us; 483us; 457us; 483us; 465us; 483us; 468us; 483us; 471us; 483us; 473us; 483us; 477us; 483us; 479us; 483us; 484us; 483us; 487us; 483us; 491us; 483us; 495us; 483us; 500us; 483us; 502us; 483us; 513us; 483us; 521us; 483us; 528us; 483us; 572us; 483us; 574us; 483us; 575us; 483us; 576us; 483us; 577us; 483us; 578us; 483us; 579us; 483us; 580us; 483us; 581us; 483us; 582us; 483us; 583us; 483us; 584us; 483us; 585us; 483us; 586us; 483us; 587us; 483us; 588us; 483us; 589us; 483us; 590us; 483us; 591us; 483us; 592us; 483us; 593us; 483us; 616us; 483us; 638us; 483us; 639us; 483us; 643us; 483us; 645us; 483us; 649us; 483us; 651us; 483us; 655us; 483us; 658us; 483us; 659us; 483us; 705us; 483us; 715us; 483us; 718us; 483us; 726us; 483us; 727us; 483us; 737us; 483us; 744us; 483us; 750us; 483us; 751us; 483us; 764us; 483us; 776us; 483us; 777us; 483us; 779us; 483us; 781us; 483us; 785us; 483us; 786us; 483us; 794us; 483us; 799us; 483us; 824us; 483us; 0us; 65535us; 6us; 65535us; 236us; 237us; 240us; 241us; 243us; 244us; 458us; 459us; 485us; 486us; 488us; 489us; 4us; 65535us; 227us; 228us; 230us; 231us; 235us; 236us; 239us; 240us; 2us; 65535us; 247us; 248us; 250us; 251us; 5us; 65535us; 227us; 247us; 230us; 247us; 235us; 247us; 239us; 247us; 249us; 250us; 5us; 65535us; 227us; 252us; 230us; 252us; 235us; 252us; 239us; 252us; 249us; 252us; 1us; 65535us; 258us; 259us; 2us; 65535us; 258us; 266us; 262us; 263us; 1us; 65535us; 267us; 268us; 1us; 65535us; 268us; 269us; 1us; 65535us; 270us; 271us; 2us; 65535us; 270us; 276us; 274us; 275us; 172us; 65535us; 54us; 305us; 58us; 305us; 63us; 305us; 118us; 305us; 121us; 305us; 123us; 305us; 126us; 305us; 129us; 305us; 152us; 925us; 156us; 305us; 168us; 305us; 192us; 925us; 195us; 925us; 208us; 925us; 212us; 925us; 221us; 925us; 232us; 305us; 242us; 305us; 255us; 305us; 258us; 305us; 262us; 305us; 272us; 305us; 278us; 925us; 287us; 305us; 289us; 305us; 292us; 305us; 294us; 305us; 318us; 305us; 319us; 305us; 323us; 305us; 324us; 305us; 325us; 305us; 326us; 305us; 328us; 305us; 330us; 305us; 332us; 305us; 335us; 305us; 337us; 305us; 339us; 305us; 344us; 305us; 347us; 305us; 356us; 305us; 376us; 305us; 379us; 925us; 381us; 305us; 383us; 305us; 384us; 305us; 385us; 305us; 386us; 305us; 393us; 305us; 395us; 305us; 397us; 305us; 402us; 305us; 409us; 925us; 414us; 305us; 416us; 305us; 419us; 305us; 422us; 305us; 436us; 305us; 443us; 305us; 450us; 305us; 453us; 305us; 457us; 305us; 465us; 305us; 468us; 305us; 471us; 305us; 473us; 305us; 477us; 305us; 479us; 305us; 484us; 305us; 487us; 305us; 491us; 305us; 495us; 305us; 500us; 305us; 502us; 305us; 511us; 305us; 513us; 305us; 521us; 305us; 528us; 305us; 570us; 925us; 572us; 305us; 574us; 305us; 575us; 305us; 576us; 305us; 577us; 305us; 578us; 305us; 579us; 305us; 580us; 305us; 581us; 305us; 582us; 305us; 583us; 305us; 584us; 305us; 585us; 305us; 586us; 305us; 587us; 305us; 588us; 305us; 589us; 305us; 590us; 305us; 591us; 305us; 592us; 305us; 593us; 305us; 616us; 305us; 619us; 305us; 621us; 305us; 626us; 305us; 633us; 305us; 638us; 305us; 639us; 305us; 643us; 305us; 645us; 305us; 649us; 305us; 651us; 305us; 655us; 305us; 658us; 305us; 659us; 305us; 660us; 305us; 661us; 305us; 663us; 305us; 664us; 305us; 666us; 305us; 667us; 305us; 669us; 925us; 671us; 305us; 675us; 305us; 677us; 305us; 678us; 305us; 681us; 305us; 687us; 305us; 688us; 305us; 691us; 305us; 692us; 305us; 705us; 305us; 715us; 305us; 718us; 305us; 726us; 305us; 727us; 305us; 737us; 305us; 744us; 305us; 750us; 305us; 751us; 305us; 764us; 305us; 776us; 305us; 777us; 305us; 779us; 305us; 781us; 305us; 785us; 305us; 786us; 305us; 788us; 925us; 790us; 305us; 794us; 305us; 799us; 305us; 824us; 305us; 832us; 925us; 835us; 925us; 838us; 925us; 841us; 925us; 844us; 925us; 848us; 925us; 851us; 925us; 854us; 925us; 856us; 925us; 858us; 925us; 861us; 925us; 863us; 925us; 866us; 925us; 873us; 925us; 885us; 925us; 886us; 925us; 903us; 925us; 907us; 925us; 937us; 925us; 939us; 925us; 87us; 65535us; 121us; 490us; 126us; 490us; 129us; 490us; 156us; 490us; 232us; 490us; 242us; 490us; 258us; 490us; 262us; 490us; 272us; 490us; 289us; 490us; 294us; 490us; 397us; 490us; 402us; 490us; 414us; 490us; 416us; 490us; 419us; 490us; 422us; 490us; 436us; 490us; 443us; 490us; 450us; 490us; 453us; 490us; 457us; 490us; 465us; 490us; 468us; 490us; 471us; 490us; 473us; 490us; 477us; 490us; 479us; 490us; 484us; 490us; 487us; 490us; 491us; 490us; 495us; 490us; 500us; 490us; 502us; 490us; 513us; 490us; 521us; 490us; 528us; 490us; 572us; 490us; 574us; 490us; 575us; 490us; 576us; 490us; 577us; 490us; 578us; 490us; 579us; 490us; 580us; 490us; 581us; 490us; 582us; 490us; 583us; 490us; 584us; 490us; 585us; 490us; 586us; 490us; 587us; 490us; 588us; 490us; 589us; 490us; 590us; 490us; 591us; 490us; 592us; 490us; 593us; 490us; 616us; 490us; 638us; 490us; 639us; 490us; 643us; 490us; 645us; 490us; 649us; 490us; 651us; 490us; 655us; 490us; 658us; 490us; 659us; 490us; 705us; 490us; 715us; 490us; 718us; 490us; 726us; 490us; 727us; 490us; 737us; 490us; 744us; 490us; 750us; 490us; 751us; 490us; 764us; 490us; 776us; 490us; 777us; 490us; 779us; 490us; 781us; 490us; 785us; 490us; 786us; 490us; 794us; 490us; 799us; 490us; 824us; 490us; 140us; 65535us; 54us; 729us; 58us; 729us; 63us; 729us; 118us; 352us; 121us; 729us; 123us; 352us; 126us; 729us; 129us; 729us; 156us; 729us; 168us; 352us; 232us; 729us; 242us; 729us; 255us; 352us; 258us; 729us; 262us; 729us; 272us; 729us; 287us; 352us; 289us; 729us; 292us; 352us; 294us; 729us; 318us; 352us; 319us; 352us; 323us; 352us; 324us; 352us; 325us; 352us; 326us; 352us; 328us; 352us; 330us; 352us; 332us; 352us; 335us; 352us; 337us; 352us; 339us; 352us; 344us; 352us; 347us; 352us; 356us; 352us; 376us; 352us; 381us; 352us; 383us; 352us; 384us; 352us; 385us; 352us; 386us; 352us; 393us; 352us; 395us; 352us; 397us; 729us; 402us; 729us; 414us; 729us; 416us; 729us; 419us; 729us; 422us; 729us; 436us; 729us; 443us; 729us; 450us; 729us; 453us; 729us; 457us; 729us; 465us; 729us; 468us; 729us; 471us; 729us; 473us; 729us; 477us; 729us; 479us; 729us; 484us; 729us; 487us; 729us; 491us; 729us; 495us; 729us; 500us; 729us; 502us; 729us; 511us; 352us; 513us; 729us; 521us; 729us; 528us; 729us; 572us; 729us; 574us; 729us; 575us; 729us; 576us; 729us; 577us; 729us; 578us; 729us; 579us; 729us; 580us; 729us; 581us; 729us; 582us; 729us; 583us; 729us; 584us; 729us; 585us; 729us; 586us; 729us; 587us; 729us; 588us; 729us; 589us; 729us; 590us; 729us; 591us; 729us; 592us; 729us; 593us; 729us; 616us; 729us; 619us; 352us; 621us; 352us; 626us; 352us; 633us; 352us; 638us; 729us; 639us; 729us; 643us; 729us; 645us; 729us; 649us; 729us; 651us; 729us; 655us; 729us; 658us; 729us; 659us; 729us; 660us; 729us; 661us; 729us; 663us; 729us; 664us; 729us; 666us; 729us; 667us; 729us; 671us; 729us; 675us; 729us; 677us; 729us; 678us; 729us; 681us; 729us; 687us; 729us; 688us; 729us; 691us; 729us; 692us; 729us; 705us; 729us; 715us; 729us; 718us; 729us; 726us; 729us; 727us; 729us; 737us; 729us; 744us; 729us; 750us; 729us; 751us; 729us; 764us; 729us; 776us; 729us; 777us; 729us; 779us; 729us; 781us; 729us; 785us; 729us; 786us; 729us; 790us; 729us; 794us; 729us; 799us; 729us; 824us; 729us; 3us; 65535us; 118us; 119us; 168us; 154us; 255us; 256us; 1us; 65535us; 123us; 124us; 10us; 65535us; 118us; 308us; 123us; 309us; 168us; 308us; 255us; 308us; 318us; 310us; 319us; 311us; 323us; 312us; 324us; 313us; 325us; 314us; 326us; 315us; 10us; 65535us; 118us; 320us; 123us; 320us; 168us; 320us; 255us; 320us; 318us; 320us; 319us; 320us; 323us; 320us; 324us; 320us; 325us; 320us; 326us; 320us; 10us; 65535us; 118us; 321us; 123us; 321us; 168us; 321us; 255us; 321us; 318us; 321us; 319us; 321us; 323us; 321us; 324us; 321us; 325us; 321us; 326us; 321us; 26us; 65535us; 118us; 322us; 123us; 322us; 168us; 322us; 255us; 322us; 318us; 322us; 319us; 322us; 323us; 322us; 324us; 322us; 325us; 322us; 326us; 322us; 344us; 382us; 347us; 382us; 356us; 382us; 376us; 382us; 381us; 382us; 383us; 382us; 384us; 382us; 385us; 382us; 386us; 382us; 393us; 382us; 395us; 382us; 511us; 382us; 619us; 382us; 621us; 382us; 626us; 382us; 633us; 382us; 1us; 65535us; 327us; 328us; 8us; 65535us; 287us; 288us; 292us; 293us; 328us; 329us; 330us; 331us; 332us; 333us; 335us; 336us; 337us; 338us; 339us; 340us; 34us; 65535us; 118us; 334us; 123us; 334us; 168us; 334us; 255us; 334us; 287us; 335us; 292us; 335us; 318us; 334us; 319us; 334us; 323us; 334us; 324us; 334us; 325us; 334us; 326us; 334us; 328us; 335us; 330us; 335us; 332us; 335us; 335us; 335us; 337us; 335us; 339us; 335us; 344us; 334us; 347us; 334us; 356us; 334us; 376us; 334us; 381us; 334us; 383us; 334us; 384us; 334us; 385us; 334us; 386us; 334us; 393us; 334us; 395us; 334us; 511us; 334us; 619us; 334us; 621us; 334us; 626us; 334us; 633us; 334us; 1us; 65535us; 356us; 357us; 16us; 65535us; 344us; 371us; 347us; 371us; 356us; 363us; 376us; 364us; 381us; 365us; 383us; 366us; 384us; 367us; 385us; 368us; 386us; 369us; 393us; 370us; 395us; 371us; 511us; 372us; 619us; 373us; 621us; 373us; 626us; 373us; 633us; 373us; 16us; 65535us; 344us; 377us; 347us; 377us; 356us; 377us; 376us; 377us; 381us; 377us; 383us; 377us; 384us; 377us; 385us; 377us; 386us; 377us; 393us; 377us; 395us; 377us; 511us; 377us; 619us; 377us; 621us; 377us; 626us; 377us; 633us; 377us; 16us; 65535us; 344us; 378us; 347us; 378us; 356us; 378us; 376us; 378us; 381us; 378us; 383us; 378us; 384us; 378us; 385us; 378us; 386us; 378us; 393us; 378us; 395us; 378us; 511us; 378us; 619us; 378us; 621us; 378us; 626us; 378us; 633us; 378us; 1us; 65535us; 341us; 342us; 2us; 65535us; 341us; 387us; 390us; 391us; 2us; 65535us; 341us; 388us; 390us; 388us; 3us; 65535us; 344us; 345us; 347us; 348us; 395us; 396us; 0us; 65535us; 20us; 65535us; 121us; 122us; 126us; 127us; 129us; 130us; 156us; 157us; 232us; 233us; 242us; 243us; 272us; 273us; 289us; 290us; 422us; 474us; 457us; 458us; 471us; 472us; 473us; 474us; 477us; 478us; 479us; 480us; 484us; 485us; 487us; 488us; 502us; 503us; 513us; 514us; 521us; 522us; 528us; 529us; 3us; 65535us; 794us; 795us; 799us; 800us; 824us; 825us; 3us; 65535us; 294us; 295us; 639us; 640us; 779us; 780us; 40us; 65535us; 121us; 401us; 126us; 401us; 129us; 401us; 156us; 401us; 232us; 401us; 242us; 401us; 258us; 267us; 262us; 267us; 272us; 401us; 289us; 401us; 294us; 406us; 397us; 398us; 402us; 403us; 419us; 420us; 422us; 401us; 453us; 454us; 457us; 401us; 465us; 466us; 468us; 469us; 471us; 401us; 473us; 401us; 477us; 401us; 479us; 401us; 484us; 401us; 487us; 401us; 491us; 492us; 502us; 401us; 513us; 401us; 521us; 401us; 528us; 401us; 616us; 617us; 639us; 406us; 645us; 646us; 651us; 652us; 715us; 716us; 718us; 719us; 737us; 738us; 750us; 763us; 751us; 763us; 779us; 406us; 45us; 65535us; 121us; 408us; 126us; 408us; 129us; 408us; 156us; 408us; 232us; 408us; 242us; 408us; 258us; 408us; 262us; 408us; 272us; 408us; 289us; 408us; 294us; 408us; 397us; 408us; 402us; 408us; 414us; 415us; 416us; 417us; 419us; 408us; 422us; 408us; 453us; 408us; 457us; 408us; 465us; 408us; 468us; 408us; 471us; 408us; 473us; 408us; 477us; 408us; 479us; 408us; 484us; 408us; 487us; 408us; 491us; 408us; 502us; 408us; 513us; 408us; 521us; 408us; 528us; 408us; 616us; 408us; 639us; 408us; 645us; 408us; 651us; 408us; 705us; 774us; 715us; 408us; 718us; 408us; 737us; 408us; 744us; 774us; 750us; 408us; 751us; 408us; 764us; 774us; 779us; 408us; 64us; 65535us; 0us; 15us; 19us; 22us; 40us; 1098us; 42us; 1098us; 108us; 109us; 146us; 148us; 178us; 180us; 236us; 246us; 240us; 246us; 243us; 246us; 257us; 261us; 263us; 265us; 294us; 300us; 295us; 297us; 356us; 362us; 357us; 359us; 372us; 533us; 398us; 400us; 454us; 456us; 458us; 246us; 485us; 246us; 488us; 246us; 492us; 494us; 495us; 499us; 496us; 498us; 500us; 509us; 501us; 508us; 503us; 505us; 511us; 1098us; 512us; 1098us; 513us; 1098us; 514us; 1098us; 520us; 527us; 521us; 526us; 522us; 524us; 560us; 657us; 622us; 624us; 646us; 648us; 652us; 654us; 693us; 714us; 696us; 714us; 705us; 710us; 706us; 708us; 718us; 723us; 719us; 721us; 738us; 740us; 744us; 749us; 745us; 747us; 750us; 762us; 751us; 762us; 753us; 1092us; 764us; 769us; 765us; 767us; 776us; 778us; 781us; 1098us; 823us; 1098us; 824us; 1098us; 906us; 942us; 922us; 924us; 932us; 1098us; 937us; 948us; 939us; 1098us; 944us; 946us; 984us; 1098us; 91us; 65535us; 121us; 461us; 126us; 461us; 129us; 461us; 156us; 461us; 232us; 461us; 242us; 461us; 258us; 461us; 262us; 461us; 272us; 461us; 289us; 461us; 294us; 461us; 397us; 461us; 402us; 461us; 414us; 461us; 416us; 461us; 419us; 461us; 422us; 461us; 436us; 461us; 438us; 441us; 440us; 442us; 443us; 461us; 445us; 448us; 447us; 449us; 450us; 461us; 453us; 461us; 457us; 461us; 465us; 461us; 468us; 461us; 471us; 461us; 473us; 461us; 477us; 461us; 479us; 461us; 484us; 461us; 487us; 461us; 491us; 461us; 495us; 461us; 500us; 461us; 502us; 461us; 513us; 461us; 521us; 461us; 528us; 461us; 572us; 461us; 574us; 461us; 575us; 461us; 576us; 461us; 577us; 461us; 578us; 461us; 579us; 461us; 580us; 461us; 581us; 461us; 582us; 461us; 583us; 461us; 584us; 461us; 585us; 461us; 586us; 461us; 587us; 461us; 588us; 461us; 589us; 461us; 590us; 461us; 591us; 461us; 592us; 461us; 593us; 461us; 616us; 461us; 638us; 461us; 639us; 461us; 643us; 461us; 645us; 461us; 649us; 461us; 651us; 461us; 655us; 461us; 658us; 461us; 659us; 461us; 705us; 461us; 715us; 461us; 718us; 461us; 726us; 461us; 727us; 461us; 737us; 461us; 744us; 461us; 750us; 461us; 751us; 461us; 764us; 461us; 776us; 461us; 777us; 461us; 779us; 461us; 781us; 461us; 785us; 461us; 786us; 461us; 794us; 461us; 799us; 461us; 824us; 461us; 87us; 65535us; 121us; 462us; 126us; 462us; 129us; 462us; 156us; 462us; 232us; 462us; 242us; 462us; 258us; 462us; 262us; 462us; 272us; 462us; 289us; 462us; 294us; 462us; 397us; 462us; 402us; 462us; 414us; 462us; 416us; 462us; 419us; 462us; 422us; 462us; 436us; 462us; 443us; 462us; 450us; 462us; 453us; 462us; 457us; 462us; 465us; 462us; 468us; 462us; 471us; 462us; 473us; 462us; 477us; 462us; 479us; 462us; 484us; 462us; 487us; 462us; 491us; 462us; 495us; 462us; 500us; 462us; 502us; 462us; 513us; 462us; 521us; 462us; 528us; 462us; 572us; 462us; 574us; 462us; 575us; 462us; 576us; 462us; 577us; 462us; 578us; 462us; 579us; 462us; 580us; 462us; 581us; 462us; 582us; 462us; 583us; 462us; 584us; 462us; 585us; 462us; 586us; 462us; 587us; 462us; 588us; 462us; 589us; 462us; 590us; 462us; 591us; 462us; 592us; 462us; 593us; 462us; 616us; 462us; 638us; 462us; 639us; 462us; 643us; 462us; 645us; 462us; 649us; 462us; 651us; 462us; 655us; 462us; 658us; 462us; 659us; 462us; 705us; 462us; 715us; 462us; 718us; 462us; 726us; 462us; 727us; 462us; 737us; 462us; 744us; 462us; 750us; 462us; 751us; 462us; 764us; 462us; 776us; 462us; 777us; 462us; 779us; 462us; 781us; 462us; 785us; 462us; 786us; 462us; 794us; 462us; 799us; 462us; 824us; 462us; 4us; 65535us; 437us; 438us; 439us; 440us; 444us; 445us; 446us; 447us; 88us; 65535us; 121us; 463us; 126us; 463us; 129us; 463us; 156us; 463us; 232us; 463us; 242us; 463us; 258us; 463us; 262us; 463us; 272us; 463us; 289us; 463us; 294us; 463us; 397us; 463us; 402us; 463us; 414us; 463us; 416us; 463us; 419us; 463us; 422us; 463us; 436us; 463us; 443us; 463us; 450us; 463us; 453us; 463us; 457us; 463us; 459us; 460us; 465us; 463us; 468us; 463us; 471us; 463us; 473us; 463us; 477us; 463us; 479us; 463us; 484us; 463us; 487us; 463us; 491us; 463us; 495us; 463us; 500us; 463us; 502us; 463us; 513us; 463us; 521us; 463us; 528us; 463us; 572us; 463us; 574us; 463us; 575us; 463us; 576us; 463us; 577us; 463us; 578us; 463us; 579us; 463us; 580us; 463us; 581us; 463us; 582us; 463us; 583us; 463us; 584us; 463us; 585us; 463us; 586us; 463us; 587us; 463us; 588us; 463us; 589us; 463us; 590us; 463us; 591us; 463us; 592us; 463us; 593us; 463us; 616us; 463us; 638us; 463us; 639us; 463us; 643us; 463us; 645us; 463us; 649us; 463us; 651us; 463us; 655us; 463us; 658us; 463us; 659us; 463us; 705us; 463us; 715us; 463us; 718us; 463us; 726us; 463us; 727us; 463us; 737us; 463us; 744us; 463us; 750us; 463us; 751us; 463us; 764us; 463us; 776us; 463us; 777us; 463us; 779us; 463us; 781us; 463us; 785us; 463us; 786us; 463us; 794us; 463us; 799us; 463us; 824us; 463us; 87us; 65535us; 121us; 411us; 126us; 411us; 129us; 411us; 156us; 411us; 232us; 411us; 242us; 411us; 258us; 411us; 262us; 411us; 272us; 411us; 289us; 411us; 294us; 411us; 397us; 411us; 402us; 411us; 414us; 411us; 416us; 411us; 419us; 411us; 422us; 411us; 436us; 439us; 443us; 446us; 450us; 451us; 453us; 411us; 457us; 411us; 465us; 411us; 468us; 411us; 471us; 411us; 473us; 411us; 477us; 411us; 479us; 411us; 484us; 411us; 487us; 411us; 491us; 411us; 495us; 496us; 500us; 501us; 502us; 411us; 513us; 411us; 521us; 411us; 528us; 411us; 572us; 536us; 574us; 537us; 575us; 538us; 576us; 539us; 577us; 540us; 578us; 541us; 579us; 542us; 580us; 543us; 581us; 544us; 582us; 545us; 583us; 546us; 584us; 547us; 585us; 548us; 586us; 549us; 587us; 550us; 588us; 551us; 589us; 552us; 590us; 553us; 591us; 554us; 592us; 555us; 593us; 556us; 616us; 411us; 638us; 557us; 639us; 411us; 643us; 558us; 645us; 411us; 649us; 559us; 651us; 411us; 655us; 560us; 658us; 561us; 659us; 562us; 705us; 413us; 715us; 411us; 718us; 412us; 726us; 563us; 727us; 564us; 737us; 411us; 744us; 413us; 750us; 411us; 751us; 411us; 764us; 413us; 776us; 566us; 777us; 567us; 779us; 411us; 781us; 565us; 785us; 568us; 786us; 569us; 794us; 405us; 799us; 405us; 824us; 405us; 1us; 65535us; 701us; 702us; 1us; 65535us; 492us; 493us; 2us; 65535us; 619us; 620us; 621us; 622us; 4us; 65535us; 619us; 631us; 621us; 631us; 626us; 631us; 633us; 631us; 4us; 65535us; 619us; 625us; 621us; 625us; 626us; 627us; 633us; 634us; 1us; 65535us; 373us; 630us; 1us; 65535us; 631us; 632us; 0us; 65535us; 2us; 65535us; 496us; 497us; 560us; 656us; 2us; 65535us; 496us; 641us; 560us; 641us; 1us; 65535us; 641us; 642us; 0us; 65535us; 87us; 65535us; 121us; 573us; 126us; 573us; 129us; 573us; 156us; 573us; 232us; 573us; 242us; 573us; 258us; 573us; 262us; 573us; 272us; 573us; 289us; 573us; 294us; 573us; 397us; 573us; 402us; 573us; 414us; 573us; 416us; 573us; 419us; 573us; 422us; 573us; 436us; 573us; 443us; 573us; 450us; 573us; 453us; 573us; 457us; 573us; 465us; 573us; 468us; 573us; 471us; 573us; 473us; 573us; 477us; 573us; 479us; 573us; 484us; 573us; 487us; 573us; 491us; 573us; 495us; 573us; 500us; 573us; 502us; 573us; 513us; 573us; 521us; 573us; 528us; 573us; 572us; 573us; 574us; 573us; 575us; 573us; 576us; 573us; 577us; 573us; 578us; 573us; 579us; 573us; 580us; 573us; 581us; 573us; 582us; 573us; 583us; 573us; 584us; 573us; 585us; 573us; 586us; 573us; 587us; 573us; 588us; 573us; 589us; 573us; 590us; 573us; 591us; 573us; 592us; 573us; 593us; 573us; 616us; 573us; 638us; 573us; 639us; 573us; 643us; 573us; 645us; 573us; 649us; 573us; 651us; 573us; 655us; 573us; 658us; 573us; 659us; 573us; 705us; 573us; 715us; 573us; 718us; 573us; 726us; 573us; 727us; 573us; 737us; 573us; 744us; 573us; 750us; 573us; 751us; 573us; 764us; 573us; 776us; 573us; 777us; 573us; 779us; 573us; 781us; 573us; 785us; 573us; 786us; 573us; 794us; 573us; 799us; 573us; 824us; 573us; 94us; 65535us; 121us; 614us; 126us; 614us; 129us; 614us; 156us; 614us; 232us; 614us; 242us; 614us; 258us; 614us; 262us; 614us; 272us; 614us; 289us; 614us; 294us; 614us; 397us; 614us; 402us; 614us; 414us; 614us; 416us; 614us; 419us; 614us; 422us; 614us; 436us; 614us; 443us; 614us; 450us; 614us; 453us; 614us; 457us; 614us; 465us; 614us; 468us; 614us; 471us; 614us; 473us; 614us; 477us; 614us; 479us; 614us; 484us; 614us; 487us; 614us; 491us; 614us; 495us; 614us; 500us; 614us; 502us; 614us; 513us; 614us; 521us; 614us; 528us; 614us; 572us; 614us; 574us; 614us; 575us; 614us; 576us; 614us; 577us; 614us; 578us; 614us; 579us; 614us; 580us; 614us; 581us; 614us; 582us; 614us; 583us; 614us; 584us; 614us; 585us; 614us; 586us; 614us; 587us; 614us; 588us; 614us; 589us; 614us; 590us; 614us; 591us; 614us; 592us; 614us; 593us; 614us; 616us; 614us; 638us; 614us; 639us; 614us; 643us; 614us; 645us; 614us; 649us; 614us; 651us; 614us; 655us; 614us; 658us; 614us; 659us; 614us; 660us; 662us; 661us; 662us; 663us; 665us; 664us; 665us; 666us; 668us; 667us; 668us; 675us; 676us; 705us; 614us; 715us; 614us; 718us; 614us; 726us; 614us; 727us; 614us; 737us; 614us; 744us; 614us; 750us; 614us; 751us; 614us; 764us; 614us; 776us; 614us; 777us; 614us; 779us; 614us; 781us; 614us; 785us; 614us; 786us; 614us; 794us; 614us; 799us; 614us; 824us; 614us; 94us; 65535us; 121us; 677us; 126us; 677us; 129us; 677us; 156us; 677us; 232us; 677us; 242us; 677us; 258us; 677us; 262us; 677us; 272us; 677us; 289us; 677us; 294us; 677us; 397us; 677us; 402us; 677us; 414us; 677us; 416us; 677us; 419us; 677us; 422us; 677us; 436us; 677us; 443us; 677us; 450us; 677us; 453us; 677us; 457us; 677us; 465us; 677us; 468us; 677us; 471us; 677us; 473us; 677us; 477us; 677us; 479us; 677us; 484us; 677us; 487us; 677us; 491us; 677us; 495us; 677us; 500us; 677us; 502us; 677us; 513us; 677us; 521us; 677us; 528us; 677us; 572us; 677us; 574us; 677us; 575us; 677us; 576us; 677us; 577us; 677us; 578us; 677us; 579us; 677us; 580us; 677us; 581us; 677us; 582us; 677us; 583us; 677us; 584us; 677us; 585us; 677us; 586us; 677us; 587us; 677us; 588us; 677us; 589us; 677us; 590us; 677us; 591us; 677us; 592us; 677us; 593us; 677us; 616us; 677us; 638us; 677us; 639us; 677us; 643us; 677us; 645us; 677us; 649us; 677us; 651us; 677us; 655us; 677us; 658us; 677us; 659us; 677us; 660us; 677us; 661us; 677us; 663us; 677us; 664us; 677us; 666us; 677us; 667us; 677us; 675us; 677us; 705us; 677us; 715us; 677us; 718us; 677us; 726us; 677us; 727us; 677us; 737us; 677us; 744us; 677us; 750us; 677us; 751us; 677us; 764us; 678us; 776us; 677us; 777us; 677us; 779us; 677us; 781us; 677us; 785us; 677us; 786us; 677us; 794us; 677us; 799us; 677us; 824us; 677us; 2us; 65535us; 677us; 679us; 678us; 679us; 101us; 65535us; 121us; 680us; 126us; 680us; 129us; 680us; 156us; 680us; 232us; 680us; 242us; 680us; 258us; 680us; 262us; 680us; 272us; 680us; 289us; 680us; 294us; 680us; 397us; 680us; 402us; 680us; 414us; 680us; 416us; 680us; 419us; 680us; 422us; 680us; 436us; 680us; 443us; 680us; 450us; 680us; 453us; 680us; 457us; 680us; 465us; 680us; 468us; 680us; 471us; 680us; 473us; 680us; 477us; 680us; 479us; 680us; 484us; 680us; 487us; 680us; 491us; 680us; 495us; 680us; 500us; 680us; 502us; 680us; 513us; 680us; 521us; 680us; 528us; 680us; 572us; 680us; 574us; 680us; 575us; 680us; 576us; 680us; 577us; 680us; 578us; 680us; 579us; 680us; 580us; 680us; 581us; 680us; 582us; 680us; 583us; 680us; 584us; 680us; 585us; 680us; 586us; 680us; 587us; 680us; 588us; 680us; 589us; 680us; 590us; 680us; 591us; 680us; 592us; 680us; 593us; 680us; 616us; 680us; 638us; 680us; 639us; 680us; 643us; 680us; 645us; 680us; 649us; 680us; 651us; 680us; 655us; 680us; 658us; 680us; 659us; 680us; 660us; 680us; 661us; 680us; 663us; 680us; 664us; 680us; 666us; 680us; 667us; 680us; 675us; 680us; 677us; 683us; 678us; 683us; 681us; 682us; 687us; 684us; 688us; 685us; 691us; 686us; 692us; 686us; 705us; 680us; 715us; 680us; 718us; 680us; 726us; 680us; 727us; 680us; 737us; 680us; 744us; 680us; 750us; 680us; 751us; 680us; 764us; 680us; 776us; 680us; 777us; 680us; 779us; 680us; 781us; 680us; 785us; 680us; 786us; 680us; 794us; 680us; 799us; 680us; 824us; 680us; 2us; 65535us; 693us; 694us; 696us; 697us; 1us; 65535us; 718us; 724us; 106us; 65535us; 54us; 787us; 58us; 787us; 63us; 787us; 121us; 711us; 126us; 711us; 129us; 711us; 156us; 711us; 232us; 711us; 242us; 711us; 258us; 711us; 262us; 711us; 272us; 711us; 289us; 711us; 294us; 711us; 397us; 711us; 402us; 711us; 414us; 711us; 416us; 711us; 419us; 711us; 422us; 711us; 436us; 711us; 443us; 711us; 450us; 711us; 453us; 711us; 457us; 711us; 465us; 711us; 468us; 711us; 471us; 711us; 473us; 711us; 477us; 711us; 479us; 711us; 484us; 711us; 487us; 711us; 491us; 711us; 495us; 711us; 500us; 711us; 502us; 711us; 513us; 711us; 521us; 711us; 528us; 711us; 572us; 711us; 574us; 711us; 575us; 711us; 576us; 711us; 577us; 711us; 578us; 711us; 579us; 711us; 580us; 711us; 581us; 711us; 582us; 711us; 583us; 711us; 584us; 711us; 585us; 711us; 586us; 711us; 587us; 711us; 588us; 711us; 589us; 711us; 590us; 711us; 591us; 711us; 592us; 711us; 593us; 711us; 616us; 711us; 638us; 711us; 639us; 711us; 643us; 711us; 645us; 711us; 649us; 711us; 651us; 711us; 655us; 711us; 658us; 711us; 659us; 711us; 660us; 711us; 661us; 711us; 663us; 711us; 664us; 711us; 666us; 711us; 667us; 711us; 671us; 672us; 675us; 711us; 677us; 711us; 678us; 711us; 681us; 711us; 687us; 711us; 688us; 711us; 691us; 711us; 692us; 711us; 705us; 711us; 715us; 711us; 718us; 711us; 726us; 711us; 727us; 711us; 737us; 711us; 744us; 711us; 750us; 711us; 751us; 711us; 764us; 711us; 776us; 711us; 777us; 711us; 779us; 711us; 781us; 711us; 785us; 711us; 786us; 711us; 790us; 787us; 794us; 711us; 799us; 711us; 824us; 711us; 106us; 65535us; 54us; 736us; 58us; 736us; 63us; 736us; 121us; 736us; 126us; 736us; 129us; 736us; 156us; 736us; 232us; 736us; 242us; 736us; 258us; 736us; 262us; 736us; 272us; 736us; 289us; 736us; 294us; 736us; 397us; 736us; 402us; 736us; 414us; 736us; 416us; 736us; 419us; 736us; 422us; 736us; 436us; 736us; 443us; 736us; 450us; 736us; 453us; 736us; 457us; 736us; 465us; 736us; 468us; 736us; 471us; 736us; 473us; 736us; 477us; 736us; 479us; 736us; 484us; 736us; 487us; 736us; 491us; 736us; 495us; 736us; 500us; 736us; 502us; 736us; 513us; 736us; 521us; 736us; 528us; 736us; 572us; 736us; 574us; 736us; 575us; 736us; 576us; 736us; 577us; 736us; 578us; 736us; 579us; 736us; 580us; 736us; 581us; 736us; 582us; 736us; 583us; 736us; 584us; 736us; 585us; 736us; 586us; 736us; 587us; 736us; 588us; 736us; 589us; 736us; 590us; 736us; 591us; 736us; 592us; 736us; 593us; 736us; 616us; 736us; 638us; 736us; 639us; 736us; 643us; 736us; 645us; 736us; 649us; 736us; 651us; 736us; 655us; 736us; 658us; 736us; 659us; 736us; 660us; 736us; 661us; 736us; 663us; 736us; 664us; 736us; 666us; 736us; 667us; 736us; 671us; 736us; 675us; 736us; 677us; 736us; 678us; 736us; 681us; 736us; 687us; 736us; 688us; 736us; 691us; 736us; 692us; 736us; 705us; 736us; 715us; 736us; 718us; 736us; 726us; 736us; 727us; 736us; 737us; 736us; 744us; 736us; 750us; 736us; 751us; 736us; 764us; 736us; 776us; 736us; 777us; 736us; 779us; 736us; 781us; 736us; 785us; 736us; 786us; 736us; 790us; 736us; 794us; 736us; 799us; 736us; 824us; 736us; 106us; 65535us; 54us; 735us; 58us; 735us; 63us; 735us; 121us; 735us; 126us; 735us; 129us; 735us; 156us; 735us; 232us; 735us; 242us; 735us; 258us; 735us; 262us; 735us; 272us; 735us; 289us; 735us; 294us; 735us; 397us; 735us; 402us; 735us; 414us; 735us; 416us; 735us; 419us; 735us; 422us; 735us; 436us; 735us; 443us; 735us; 450us; 735us; 453us; 735us; 457us; 735us; 465us; 735us; 468us; 735us; 471us; 735us; 473us; 735us; 477us; 735us; 479us; 735us; 484us; 735us; 487us; 735us; 491us; 735us; 495us; 735us; 500us; 735us; 502us; 735us; 513us; 735us; 521us; 735us; 528us; 735us; 572us; 735us; 574us; 735us; 575us; 735us; 576us; 735us; 577us; 735us; 578us; 735us; 579us; 735us; 580us; 735us; 581us; 735us; 582us; 735us; 583us; 735us; 584us; 735us; 585us; 735us; 586us; 735us; 587us; 735us; 588us; 735us; 589us; 735us; 590us; 735us; 591us; 735us; 592us; 735us; 593us; 735us; 616us; 735us; 638us; 735us; 639us; 735us; 643us; 735us; 645us; 735us; 649us; 735us; 651us; 735us; 655us; 735us; 658us; 735us; 659us; 735us; 660us; 735us; 661us; 735us; 663us; 735us; 664us; 735us; 666us; 735us; 667us; 735us; 671us; 735us; 675us; 735us; 677us; 735us; 678us; 735us; 681us; 735us; 687us; 735us; 688us; 735us; 691us; 735us; 692us; 735us; 705us; 735us; 715us; 735us; 718us; 735us; 726us; 735us; 727us; 735us; 737us; 735us; 744us; 735us; 750us; 735us; 751us; 735us; 764us; 735us; 776us; 735us; 777us; 735us; 779us; 735us; 781us; 735us; 785us; 735us; 786us; 735us; 790us; 735us; 794us; 735us; 799us; 735us; 824us; 735us; 106us; 65535us; 54us; 730us; 58us; 730us; 63us; 730us; 121us; 730us; 126us; 730us; 129us; 730us; 156us; 730us; 232us; 730us; 242us; 730us; 258us; 730us; 262us; 730us; 272us; 730us; 289us; 730us; 294us; 730us; 397us; 730us; 402us; 730us; 414us; 730us; 416us; 730us; 419us; 730us; 422us; 730us; 436us; 730us; 443us; 730us; 450us; 730us; 453us; 730us; 457us; 730us; 465us; 730us; 468us; 730us; 471us; 730us; 473us; 730us; 477us; 730us; 479us; 730us; 484us; 730us; 487us; 730us; 491us; 730us; 495us; 730us; 500us; 730us; 502us; 730us; 513us; 730us; 521us; 730us; 528us; 730us; 572us; 730us; 574us; 730us; 575us; 730us; 576us; 730us; 577us; 730us; 578us; 730us; 579us; 730us; 580us; 730us; 581us; 730us; 582us; 730us; 583us; 730us; 584us; 730us; 585us; 730us; 586us; 730us; 587us; 730us; 588us; 730us; 589us; 730us; 590us; 730us; 591us; 730us; 592us; 730us; 593us; 730us; 616us; 730us; 638us; 730us; 639us; 730us; 643us; 730us; 645us; 730us; 649us; 730us; 651us; 730us; 655us; 730us; 658us; 730us; 659us; 730us; 660us; 730us; 661us; 730us; 663us; 730us; 664us; 730us; 666us; 730us; 667us; 730us; 671us; 730us; 675us; 730us; 677us; 730us; 678us; 730us; 681us; 730us; 687us; 730us; 688us; 730us; 691us; 730us; 692us; 730us; 705us; 730us; 715us; 730us; 718us; 730us; 726us; 730us; 727us; 730us; 737us; 730us; 744us; 730us; 750us; 730us; 751us; 730us; 764us; 730us; 776us; 730us; 777us; 730us; 779us; 730us; 781us; 730us; 785us; 730us; 786us; 730us; 790us; 730us; 794us; 730us; 799us; 730us; 824us; 730us; 2us; 65535us; 750us; 753us; 751us; 753us; 0us; 65535us; 0us; 65535us; 106us; 65535us; 54us; 731us; 58us; 731us; 63us; 731us; 121us; 731us; 126us; 731us; 129us; 731us; 156us; 731us; 232us; 731us; 242us; 731us; 258us; 731us; 262us; 731us; 272us; 731us; 289us; 731us; 294us; 731us; 397us; 731us; 402us; 731us; 414us; 731us; 416us; 731us; 419us; 731us; 422us; 731us; 436us; 731us; 443us; 731us; 450us; 731us; 453us; 731us; 457us; 731us; 465us; 731us; 468us; 731us; 471us; 731us; 473us; 731us; 477us; 731us; 479us; 731us; 484us; 731us; 487us; 731us; 491us; 731us; 495us; 731us; 500us; 731us; 502us; 731us; 513us; 731us; 521us; 731us; 528us; 731us; 572us; 731us; 574us; 731us; 575us; 731us; 576us; 731us; 577us; 731us; 578us; 731us; 579us; 731us; 580us; 731us; 581us; 731us; 582us; 731us; 583us; 731us; 584us; 731us; 585us; 731us; 586us; 731us; 587us; 731us; 588us; 731us; 589us; 731us; 590us; 731us; 591us; 731us; 592us; 731us; 593us; 731us; 616us; 731us; 638us; 731us; 639us; 731us; 643us; 731us; 645us; 731us; 649us; 731us; 651us; 731us; 655us; 731us; 658us; 731us; 659us; 731us; 660us; 731us; 661us; 731us; 663us; 731us; 664us; 731us; 666us; 731us; 667us; 731us; 671us; 731us; 675us; 731us; 677us; 731us; 678us; 731us; 681us; 731us; 687us; 731us; 688us; 731us; 691us; 731us; 692us; 731us; 705us; 731us; 715us; 731us; 718us; 731us; 726us; 731us; 727us; 731us; 737us; 731us; 744us; 731us; 750us; 731us; 751us; 731us; 764us; 731us; 776us; 731us; 777us; 731us; 779us; 731us; 781us; 731us; 785us; 731us; 786us; 731us; 790us; 731us; 794us; 731us; 799us; 731us; 824us; 731us; 1us; 65535us; 764us; 765us; 0us; 65535us; 2us; 65535us; 705us; 706us; 744us; 745us; 3us; 65535us; 705us; 773us; 744us; 773us; 764us; 772us; 4us; 65535us; 705us; 775us; 744us; 775us; 764us; 775us; 781us; 782us; 1us; 65535us; 534us; 535us; 1us; 65535us; 511us; 512us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 511us; 520us; 0us; 65535us; 4us; 65535us; 54us; 55us; 58us; 59us; 63us; 64us; 790us; 791us; 1us; 65535us; 764us; 771us; 6us; 65535us; 792us; 793us; 796us; 797us; 801us; 802us; 805us; 806us; 807us; 808us; 811us; 812us; 6us; 65535us; 792us; 815us; 796us; 815us; 801us; 815us; 805us; 815us; 807us; 814us; 811us; 815us; 3us; 65535us; 803us; 823us; 807us; 823us; 815us; 823us; 5us; 65535us; 791us; 792us; 795us; 796us; 800us; 801us; 804us; 805us; 810us; 811us; 3us; 65535us; 803us; 804us; 807us; 810us; 815us; 822us; 1us; 65535us; 568us; 786us; 2us; 65535us; 379us; 380us; 409us; 410us; 2us; 65535us; 152us; 153us; 832us; 833us; 4us; 65535us; 119us; 120us; 123us; 128us; 124us; 125us; 256us; 257us; 4us; 65535us; 152us; 831us; 195us; 196us; 832us; 831us; 835us; 836us; 4us; 65535us; 152us; 834us; 195us; 834us; 832us; 834us; 835us; 834us; 2us; 65535us; 838us; 839us; 841us; 842us; 6us; 65535us; 152us; 837us; 195us; 837us; 832us; 837us; 835us; 837us; 838us; 840us; 841us; 840us; 12us; 65535us; 221us; 222us; 278us; 279us; 379us; 830us; 409us; 830us; 570us; 571us; 851us; 852us; 885us; 922us; 886us; 922us; 903us; 949us; 907us; 949us; 937us; 949us; 939us; 949us; 12us; 65535us; 221us; 850us; 278us; 850us; 379us; 850us; 409us; 850us; 570us; 850us; 851us; 850us; 885us; 850us; 886us; 850us; 903us; 850us; 907us; 850us; 937us; 850us; 939us; 850us; 5us; 65535us; 854us; 855us; 856us; 857us; 858us; 859us; 861us; 862us; 863us; 864us; 2us; 65535us; 212us; 213us; 866us; 867us; 43us; 65535us; 152us; 870us; 192us; 870us; 195us; 870us; 208us; 870us; 211us; 869us; 212us; 870us; 221us; 870us; 278us; 870us; 379us; 870us; 409us; 870us; 570us; 870us; 669us; 870us; 788us; 870us; 832us; 870us; 835us; 870us; 838us; 870us; 841us; 870us; 843us; 869us; 844us; 870us; 845us; 869us; 848us; 870us; 849us; 869us; 851us; 870us; 853us; 869us; 854us; 870us; 856us; 870us; 858us; 870us; 860us; 869us; 861us; 870us; 863us; 870us; 865us; 869us; 866us; 870us; 873us; 870us; 874us; 869us; 876us; 869us; 885us; 870us; 886us; 870us; 889us; 869us; 890us; 869us; 903us; 870us; 907us; 870us; 937us; 870us; 939us; 870us; 43us; 65535us; 152us; 920us; 192us; 920us; 195us; 920us; 208us; 920us; 211us; 883us; 212us; 920us; 221us; 920us; 278us; 920us; 379us; 920us; 409us; 920us; 570us; 920us; 669us; 920us; 788us; 920us; 832us; 920us; 835us; 920us; 838us; 920us; 841us; 920us; 843us; 883us; 844us; 920us; 845us; 883us; 848us; 920us; 849us; 883us; 851us; 920us; 853us; 883us; 854us; 920us; 856us; 920us; 858us; 920us; 860us; 883us; 861us; 920us; 863us; 920us; 865us; 883us; 866us; 920us; 873us; 920us; 874us; 883us; 876us; 884us; 885us; 920us; 886us; 920us; 889us; 891us; 890us; 892us; 903us; 920us; 907us; 920us; 937us; 920us; 939us; 920us; 32us; 65535us; 152us; 843us; 192us; 211us; 195us; 843us; 208us; 211us; 212us; 865us; 221us; 853us; 278us; 853us; 379us; 853us; 409us; 853us; 570us; 853us; 669us; 876us; 788us; 876us; 832us; 843us; 835us; 843us; 838us; 843us; 841us; 843us; 844us; 845us; 848us; 849us; 851us; 853us; 854us; 860us; 856us; 860us; 858us; 860us; 861us; 860us; 863us; 860us; 866us; 865us; 873us; 874us; 885us; 853us; 886us; 853us; 903us; 853us; 907us; 853us; 937us; 853us; 939us; 853us; 11us; 65535us; 211us; 877us; 843us; 877us; 845us; 877us; 849us; 877us; 853us; 877us; 860us; 877us; 865us; 877us; 874us; 877us; 876us; 878us; 879us; 881us; 880us; 882us; 2us; 65535us; 885us; 888us; 886us; 887us; 2us; 65535us; 904us; 905us; 940us; 906us; 32us; 65535us; 152us; 893us; 192us; 893us; 195us; 893us; 208us; 893us; 212us; 893us; 221us; 893us; 278us; 893us; 379us; 893us; 409us; 893us; 570us; 893us; 669us; 893us; 788us; 893us; 832us; 893us; 835us; 893us; 838us; 893us; 841us; 893us; 844us; 893us; 848us; 893us; 851us; 893us; 854us; 893us; 856us; 893us; 858us; 893us; 861us; 893us; 863us; 893us; 866us; 893us; 873us; 893us; 885us; 893us; 886us; 893us; 903us; 893us; 907us; 893us; 937us; 893us; 939us; 893us; 2us; 65535us; 669us; 670us; 788us; 789us; 2us; 65535us; 669us; 919us; 788us; 919us; 32us; 65535us; 152us; 909us; 192us; 909us; 195us; 909us; 208us; 909us; 212us; 909us; 221us; 909us; 278us; 909us; 379us; 909us; 409us; 909us; 570us; 909us; 669us; 910us; 788us; 910us; 832us; 909us; 835us; 909us; 838us; 909us; 841us; 909us; 844us; 909us; 848us; 909us; 851us; 909us; 854us; 909us; 856us; 909us; 858us; 909us; 861us; 909us; 863us; 909us; 866us; 909us; 873us; 909us; 885us; 909us; 886us; 909us; 903us; 909us; 907us; 909us; 937us; 909us; 939us; 909us; 1us; 65535us; 870us; 931us; 3us; 65535us; 689us; 690us; 870us; 934us; 935us; 936us; 6us; 65535us; 885us; 902us; 886us; 902us; 903us; 904us; 907us; 908us; 937us; 944us; 939us; 950us; 2us; 65535us; 937us; 938us; 939us; 940us; 1us; 65535us; 306us; 307us; 6us; 65535us; 951us; 960us; 957us; 960us; 966us; 960us; 972us; 960us; 973us; 960us; 974us; 960us; 6us; 65535us; 951us; 966us; 957us; 966us; 966us; 966us; 972us; 966us; 973us; 966us; 974us; 966us; 6us; 65535us; 951us; 968us; 957us; 968us; 966us; 967us; 972us; 968us; 973us; 968us; 974us; 968us; 5us; 65535us; 951us; 952us; 957us; 958us; 972us; 969us; 973us; 970us; 974us; 971us; 2us; 65535us; 270us; 277us; 274us; 277us; 2us; 65535us; 270us; 977us; 274us; 977us; 214us; 65535us; 5us; 983us; 40us; 69us; 51us; 69us; 56us; 983us; 60us; 983us; 74us; 983us; 77us; 983us; 80us; 983us; 88us; 983us; 118us; 1032us; 121us; 1030us; 123us; 1032us; 126us; 1030us; 129us; 1030us; 136us; 1032us; 142us; 205us; 152us; 983us; 156us; 1030us; 168us; 1032us; 185us; 1030us; 188us; 1030us; 192us; 983us; 195us; 983us; 208us; 983us; 211us; 983us; 212us; 983us; 219us; 220us; 221us; 983us; 232us; 1030us; 242us; 1030us; 255us; 1032us; 258us; 1030us; 262us; 1030us; 272us; 1030us; 278us; 983us; 287us; 1032us; 289us; 1030us; 292us; 1032us; 294us; 1030us; 316us; 317us; 318us; 1032us; 319us; 1032us; 323us; 1032us; 324us; 1032us; 325us; 1032us; 326us; 1032us; 328us; 1032us; 330us; 1032us; 332us; 1032us; 335us; 1032us; 337us; 1032us; 339us; 1032us; 341us; 983us; 344us; 1032us; 347us; 1032us; 356us; 1032us; 374us; 375us; 376us; 1032us; 379us; 983us; 381us; 1032us; 383us; 1032us; 384us; 1032us; 385us; 1032us; 386us; 1032us; 390us; 983us; 393us; 1032us; 395us; 1032us; 397us; 1030us; 402us; 1030us; 409us; 983us; 414us; 1030us; 416us; 1030us; 419us; 1030us; 422us; 1030us; 436us; 1030us; 443us; 1030us; 450us; 1030us; 453us; 1030us; 457us; 1030us; 465us; 1030us; 468us; 1030us; 471us; 1030us; 473us; 1030us; 477us; 1030us; 479us; 1030us; 484us; 1030us; 487us; 1030us; 491us; 1030us; 495us; 1030us; 500us; 1030us; 502us; 1030us; 511us; 1032us; 513us; 1030us; 521us; 1030us; 528us; 1030us; 570us; 983us; 572us; 1030us; 574us; 1030us; 575us; 1030us; 576us; 1030us; 577us; 1030us; 578us; 1030us; 579us; 1030us; 580us; 1030us; 581us; 1030us; 582us; 1030us; 583us; 1030us; 584us; 1030us; 585us; 1030us; 586us; 1030us; 587us; 1030us; 588us; 1030us; 589us; 1030us; 590us; 1030us; 591us; 1030us; 592us; 1030us; 593us; 1030us; 616us; 1030us; 619us; 1032us; 621us; 1032us; 626us; 1032us; 633us; 1032us; 638us; 1030us; 639us; 1030us; 643us; 1030us; 645us; 1030us; 649us; 1030us; 651us; 1030us; 655us; 1030us; 658us; 1030us; 659us; 1030us; 660us; 1030us; 661us; 1030us; 663us; 1030us; 664us; 1030us; 666us; 1030us; 667us; 1030us; 669us; 983us; 675us; 1030us; 677us; 1030us; 678us; 1030us; 681us; 1030us; 687us; 1030us; 688us; 1030us; 691us; 1030us; 692us; 1030us; 693us; 1030us; 696us; 1030us; 698us; 1030us; 699us; 1030us; 705us; 1030us; 715us; 1030us; 718us; 1030us; 726us; 1030us; 727us; 1030us; 737us; 1030us; 744us; 1030us; 750us; 1030us; 751us; 1030us; 764us; 1030us; 776us; 1030us; 777us; 1030us; 779us; 1030us; 781us; 1030us; 785us; 1030us; 786us; 1030us; 788us; 983us; 794us; 1030us; 799us; 1030us; 803us; 983us; 807us; 983us; 815us; 983us; 824us; 1030us; 832us; 983us; 835us; 983us; 838us; 983us; 841us; 983us; 843us; 983us; 844us; 983us; 845us; 983us; 846us; 847us; 848us; 983us; 849us; 983us; 851us; 983us; 853us; 983us; 854us; 983us; 856us; 983us; 858us; 983us; 860us; 983us; 861us; 983us; 863us; 983us; 865us; 983us; 866us; 983us; 873us; 983us; 874us; 983us; 876us; 983us; 885us; 983us; 886us; 983us; 889us; 983us; 890us; 983us; 903us; 983us; 907us; 983us; 937us; 983us; 939us; 983us; 951us; 983us; 957us; 983us; 966us; 983us; 972us; 983us; 973us; 983us; 974us; 983us; 975us; 976us; 978us; 979us; 984us; 985us; 1035us; 1032us; 63us; 65535us; 5us; 6us; 40us; 53us; 51us; 53us; 56us; 57us; 60us; 61us; 74us; 183us; 77us; 183us; 80us; 81us; 88us; 183us; 152us; 868us; 192us; 868us; 195us; 868us; 208us; 868us; 211us; 868us; 212us; 868us; 221us; 868us; 278us; 868us; 341us; 392us; 379us; 868us; 390us; 392us; 409us; 868us; 570us; 868us; 669us; 868us; 788us; 868us; 803us; 820us; 807us; 820us; 815us; 820us; 832us; 868us; 835us; 868us; 838us; 868us; 841us; 868us; 843us; 868us; 844us; 868us; 845us; 868us; 848us; 868us; 849us; 868us; 851us; 868us; 853us; 868us; 854us; 868us; 856us; 868us; 858us; 868us; 860us; 868us; 861us; 868us; 863us; 868us; 865us; 868us; 866us; 868us; 873us; 868us; 874us; 868us; 876us; 868us; 885us; 868us; 886us; 868us; 889us; 868us; 890us; 868us; 903us; 868us; 907us; 868us; 937us; 868us; 939us; 868us; 951us; 956us; 957us; 956us; 966us; 956us; 972us; 956us; 973us; 956us; 974us; 956us; 144us; 65535us; 118us; 1033us; 121us; 1031us; 123us; 1033us; 126us; 1031us; 129us; 1031us; 136us; 1033us; 142us; 1031us; 156us; 1031us; 168us; 1033us; 185us; 1031us; 188us; 1031us; 232us; 1031us; 242us; 1031us; 255us; 1033us; 258us; 1031us; 262us; 1031us; 272us; 1031us; 287us; 1033us; 289us; 1031us; 292us; 1033us; 294us; 1031us; 318us; 1033us; 319us; 1033us; 323us; 1033us; 324us; 1033us; 325us; 1033us; 326us; 1033us; 328us; 1033us; 330us; 1033us; 332us; 1033us; 335us; 1033us; 337us; 1033us; 339us; 1033us; 344us; 1033us; 347us; 1033us; 356us; 1033us; 376us; 1033us; 381us; 1033us; 383us; 1033us; 384us; 1033us; 385us; 1033us; 386us; 1033us; 393us; 1033us; 395us; 1033us; 397us; 1031us; 402us; 1031us; 414us; 1031us; 416us; 1031us; 419us; 1031us; 422us; 1031us; 436us; 1031us; 443us; 1031us; 450us; 1031us; 453us; 1031us; 457us; 1031us; 465us; 1031us; 468us; 1031us; 471us; 1031us; 473us; 1031us; 477us; 1031us; 479us; 1031us; 484us; 1031us; 487us; 1031us; 491us; 1031us; 495us; 1031us; 500us; 1031us; 502us; 1031us; 511us; 1033us; 513us; 1031us; 521us; 1031us; 528us; 1031us; 572us; 1031us; 574us; 1031us; 575us; 1031us; 576us; 1031us; 577us; 1031us; 578us; 1031us; 579us; 1031us; 580us; 1031us; 581us; 1031us; 582us; 1031us; 583us; 1031us; 584us; 1031us; 585us; 1031us; 586us; 1031us; 587us; 1031us; 588us; 1031us; 589us; 1031us; 590us; 1031us; 591us; 1031us; 592us; 1031us; 593us; 1031us; 616us; 1031us; 619us; 1033us; 621us; 1033us; 626us; 1033us; 633us; 1033us; 638us; 1031us; 639us; 1031us; 643us; 1031us; 645us; 1031us; 649us; 1031us; 651us; 1031us; 655us; 1031us; 658us; 1031us; 659us; 1031us; 660us; 1031us; 661us; 1031us; 663us; 1031us; 664us; 1031us; 666us; 1031us; 667us; 1031us; 675us; 1031us; 677us; 1031us; 678us; 1031us; 681us; 1031us; 687us; 1031us; 688us; 1031us; 691us; 1031us; 692us; 1031us; 693us; 1031us; 696us; 1031us; 698us; 1031us; 699us; 1031us; 705us; 1031us; 715us; 1031us; 718us; 1031us; 726us; 1031us; 727us; 1031us; 737us; 1031us; 744us; 1031us; 750us; 1031us; 751us; 1031us; 764us; 1031us; 776us; 1031us; 777us; 1031us; 779us; 1031us; 781us; 1031us; 785us; 1031us; 786us; 1031us; 794us; 1031us; 799us; 1031us; 824us; 1031us; 1035us; 1033us; 5us; 65535us; 199us; 988us; 356us; 988us; 715us; 988us; 751us; 988us; 987us; 988us; 2us; 65535us; 994us; 1029us; 1027us; 1028us; 5us; 65535us; 199us; 993us; 356us; 993us; 715us; 993us; 751us; 993us; 987us; 993us; 108us; 65535us; 121us; 1038us; 126us; 1038us; 129us; 1038us; 142us; 1038us; 156us; 1038us; 185us; 1038us; 188us; 1038us; 232us; 1038us; 242us; 1038us; 258us; 1038us; 262us; 1038us; 272us; 1038us; 289us; 1038us; 294us; 1038us; 397us; 1038us; 402us; 1038us; 414us; 1038us; 416us; 1038us; 419us; 1038us; 422us; 1038us; 436us; 1038us; 443us; 1038us; 450us; 1038us; 453us; 1038us; 457us; 1038us; 465us; 1038us; 468us; 1038us; 471us; 1038us; 473us; 1038us; 477us; 1038us; 479us; 1038us; 484us; 1038us; 487us; 1038us; 491us; 1038us; 495us; 1038us; 500us; 1038us; 502us; 1038us; 513us; 1038us; 521us; 1038us; 528us; 1038us; 572us; 1038us; 574us; 1038us; 575us; 1038us; 576us; 1038us; 577us; 1038us; 578us; 1038us; 579us; 1038us; 580us; 1038us; 581us; 1038us; 582us; 1038us; 583us; 1038us; 584us; 1038us; 585us; 1038us; 586us; 1038us; 587us; 1038us; 588us; 1038us; 589us; 1038us; 590us; 1038us; 591us; 1038us; 592us; 1038us; 593us; 1038us; 616us; 1038us; 638us; 1038us; 639us; 1038us; 643us; 1038us; 645us; 1038us; 649us; 1038us; 651us; 1038us; 655us; 1038us; 658us; 1038us; 659us; 1038us; 660us; 1038us; 661us; 1038us; 663us; 1038us; 664us; 1038us; 666us; 1038us; 667us; 1038us; 675us; 1038us; 677us; 1038us; 678us; 1038us; 681us; 1038us; 687us; 1038us; 688us; 1038us; 691us; 1038us; 692us; 1038us; 693us; 712us; 696us; 712us; 698us; 1038us; 699us; 1038us; 705us; 1038us; 715us; 1038us; 718us; 1038us; 726us; 1038us; 727us; 1038us; 737us; 1038us; 744us; 1038us; 750us; 1038us; 751us; 1038us; 764us; 1038us; 776us; 1038us; 777us; 1038us; 779us; 1038us; 781us; 1038us; 785us; 1038us; 786us; 1038us; 794us; 1038us; 799us; 1038us; 824us; 1038us; 36us; 65535us; 118us; 138us; 123us; 138us; 136us; 137us; 168us; 138us; 255us; 138us; 287us; 138us; 292us; 138us; 318us; 138us; 319us; 138us; 323us; 138us; 324us; 138us; 325us; 138us; 326us; 138us; 328us; 138us; 330us; 138us; 332us; 138us; 335us; 138us; 337us; 138us; 339us; 138us; 344us; 138us; 347us; 138us; 356us; 138us; 376us; 138us; 381us; 138us; 383us; 138us; 384us; 138us; 385us; 138us; 386us; 138us; 393us; 138us; 395us; 138us; 511us; 138us; 619us; 138us; 621us; 138us; 626us; 138us; 633us; 138us; 1035us; 1036us; 106us; 65535us; 121us; 704us; 126us; 704us; 129us; 704us; 142us; 198us; 156us; 704us; 185us; 198us; 188us; 198us; 232us; 704us; 242us; 704us; 258us; 704us; 262us; 704us; 272us; 704us; 289us; 704us; 294us; 704us; 397us; 704us; 402us; 704us; 414us; 704us; 416us; 704us; 419us; 704us; 422us; 704us; 436us; 704us; 443us; 704us; 450us; 704us; 453us; 704us; 457us; 704us; 465us; 704us; 468us; 704us; 471us; 704us; 473us; 704us; 477us; 704us; 479us; 704us; 484us; 704us; 487us; 704us; 491us; 704us; 495us; 704us; 500us; 704us; 502us; 704us; 513us; 704us; 521us; 704us; 528us; 704us; 572us; 704us; 574us; 704us; 575us; 704us; 576us; 704us; 577us; 704us; 578us; 704us; 579us; 704us; 580us; 704us; 581us; 704us; 582us; 704us; 583us; 704us; 584us; 704us; 585us; 704us; 586us; 704us; 587us; 704us; 588us; 704us; 589us; 704us; 590us; 704us; 591us; 704us; 592us; 704us; 593us; 704us; 616us; 704us; 638us; 704us; 639us; 704us; 643us; 704us; 645us; 704us; 649us; 704us; 651us; 704us; 655us; 704us; 658us; 704us; 659us; 704us; 660us; 704us; 661us; 704us; 663us; 704us; 664us; 704us; 666us; 704us; 667us; 704us; 675us; 704us; 677us; 704us; 678us; 704us; 681us; 704us; 687us; 704us; 688us; 704us; 691us; 704us; 692us; 704us; 698us; 700us; 699us; 700us; 705us; 704us; 715us; 704us; 718us; 704us; 726us; 704us; 727us; 704us; 737us; 704us; 744us; 704us; 750us; 704us; 751us; 704us; 764us; 704us; 776us; 704us; 777us; 704us; 779us; 704us; 781us; 704us; 785us; 704us; 786us; 704us; 794us; 704us; 799us; 704us; 824us; 704us; 5us; 65535us; 16us; 1042us; 23us; 1042us; 28us; 1042us; 32us; 1042us; 1042us; 1042us; 5us; 65535us; 16us; 34us; 23us; 34us; 28us; 30us; 32us; 34us; 1042us; 1043us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 8us; 65535us; 41us; 51us; 115us; 1053us; 214us; 215us; 371us; 395us; 388us; 390us; 411us; 414us; 412us; 414us; 413us; 414us; 1us; 65535us; 140us; 141us; 0us; 65535us; 5us; 65535us; 133us; 134us; 160us; 161us; 163us; 164us; 165us; 166us; 169us; 170us; 0us; 65535us; 12us; 65535us; 20us; 21us; 43us; 44us; 46us; 47us; 95us; 96us; 100us; 101us; 149us; 150us; 187us; 207us; 190us; 191us; 193us; 194us; 196us; 197us; 205us; 206us; 512us; 534us; 5us; 65535us; 41us; 42us; 115us; 116us; 214us; 217us; 371us; 394us; 388us; 389us; 4us; 65535us; 226us; 227us; 229us; 230us; 234us; 235us; 238us; 239us; 0us; 65535us; 8us; 65535us; 132us; 118us; 159us; 118us; 162us; 123us; 227us; 254us; 230us; 254us; 235us; 254us; 239us; 254us; 249us; 254us; 1us; 65535us; 254us; 255us; 4us; 65535us; 145us; 219us; 150us; 219us; 177us; 219us; 215us; 219us; 4us; 65535us; 427us; 528us; 501us; 502us; 512us; 513us; 520us; 521us; 9us; 65535us; 424us; 510us; 425us; 517us; 426us; 525us; 428us; 532us; 503us; 504us; 506us; 507us; 514us; 515us; 522us; 523us; 529us; 530us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 5us; 65535us; 53us; 54us; 57us; 58us; 62us; 63us; 670us; 671us; 789us; 790us; 0us; 65535us; 13us; 65535us; 0us; 77us; 7us; 77us; 16us; 77us; 18us; 77us; 23us; 77us; 28us; 77us; 30us; 77us; 32us; 77us; 34us; 77us; 40us; 67us; 51us; 67us; 1064us; 1066us; 1065us; 1066us; 5us; 65535us; 0us; 5us; 40us; 65us; 51us; 65us; 1071us; 1073us; 1072us; 1073us; 8us; 65535us; 146us; 147us; 178us; 179us; 181us; 182us; 342us; 343us; 434us; 768us; 764us; 770us; 765us; 766us; 1076us; 1077us; 21us; 65535us; 200us; 201us; 203us; 204us; 357us; 358us; 360us; 361us; 432us; 756us; 433us; 757us; 617us; 618us; 716us; 717us; 750us; 752us; 751us; 752us; 753us; 754us; 887us; 889us; 888us; 890us; 922us; 923us; 929us; 930us; 958us; 959us; 988us; 989us; 990us; 991us; 994us; 995us; 997us; 998us; 1080us; 1081us; 14us; 65535us; 19us; 20us; 23us; 24us; 61us; 62us; 97us; 98us; 102us; 103us; 108us; 110us; 263us; 264us; 398us; 399us; 403us; 404us; 420us; 421us; 454us; 455us; 646us; 647us; 652us; 653us; 1084us; 1085us; 1us; 65535us; 753us; 755us; 13us; 65535us; 40us; 49us; 42us; 48us; 372us; 784us; 511us; 531us; 512us; 519us; 513us; 518us; 514us; 516us; 781us; 783us; 823us; 827us; 824us; 826us; 932us; 933us; 939us; 943us; 984us; 986us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 176us; 178us; 180us; 183us; 187us; 193us; 203us; 213us; 223us; 234us; 245us; 247us; 250us; 253us; 263us; 264us; 265us; 266us; 267us; 268us; 269us; 271us; 272us; 273us; 274us; 278us; 282us; 286us; 288us; 290us; 292us; 294us; 299us; 304us; 307us; 309us; 311us; 312us; 317us; 318us; 353us; 362us; 367us; 368us; 369us; 370us; 371us; 372us; 374us; 376us; 378us; 381us; 383us; 385us; 388us; 391us; 394us; 395us; 399us; 400us; 402us; 406us; 410us; 414us; 416us; 418us; 421us; 424us; 427us; 432us; 442us; 452us; 540us; 628us; 630us; 718us; 807us; 895us; 896us; 903us; 908us; 911us; 917us; 923us; 925us; 928us; 930us; 932us; 934us; 937us; 1110us; 1198us; 1339us; 1343us; 1345us; 1356us; 1367us; 1378us; 1405us; 1407us; 1416us; 1451us; 1453us; 1470us; 1487us; 1504us; 1506us; 1509us; 1512us; 1516us; 1517us; 1538us; 1542us; 1546us; 1587us; 1633us; 1698us; 1790us; 1878us; 1883us; 1972us; 2060us; 2062us; 2064us; 2067us; 2072us; 2077us; 2079us; 2081us; 2082us; 2085us; 2088us; 2090us; 2091us; 2179us; 2274us; 2369us; 2372us; 2474us; 2477us; 2479us; 2586us; 2693us; 2800us; 2907us; 2910us; 2911us; 2912us; 3019us; 3021us; 3022us; 3025us; 3029us; 3034us; 3036us; 3038us; 3039us; 3040us; 3042us; 3043us; 3048us; 3050us; 3057us; 3064us; 3068us; 3074us; 3078us; 3080us; 3083us; 3086us; 3091us; 3096us; 3101us; 3104us; 3111us; 3124us; 3137us; 3143us; 3146us; 3190us; 3234us; 3267us; 3279us; 3282us; 3285us; 3318us; 3321us; 3324us; 3357us; 3359us; 3363us; 3370us; 3373us; 3375us; 3382us; 3389us; 3396us; 3402us; 3405us; 3408us; 3623us; 3687us; 3832us; 3838us; 3841us; 3847us; 3956us; 3993us; 4100us; 4106us; 4112us; 4113us; 4114us; 4115us; 4116us; 4125us; 4127us; 4128us; 4134us; 4135us; 4148us; 4154us; 4159us; 4160us; 4169us; 4171us; 4176us; 4181us; 4191us; 4192us; 4193us; 4194us; 4195us; 4201us; 4202us; 4216us; 4222us; 4231us; 4253us; 4268us; 4270us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 3us; 4us; 640us; 641us; 4us; 5us; 7us; 8us; 9us; 1us; 5us; 1us; 6us; 1us; 6us; 3us; 7us; 8us; 9us; 1us; 7us; 2us; 8us; 9us; 2us; 8us; 9us; 1us; 10us; 4us; 11us; 21us; 24us; 278us; 1us; 11us; 3us; 12us; 13us; 14us; 2us; 12us; 13us; 1us; 12us; 1us; 12us; 1us; 13us; 3us; 14us; 21us; 24us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 18us; 4us; 19us; 20us; 22us; 23us; 1us; 19us; 2us; 20us; 23us; 1us; 20us; 2us; 21us; 24us; 1us; 21us; 1us; 24us; 1us; 24us; 1us; 25us; 1us; 26us; 2us; 28us; 29us; 1us; 29us; 4us; 30us; 31us; 32us; 33us; 3us; 30us; 32us; 35us; 2us; 30us; 32us; 1us; 30us; 1us; 30us; 2us; 31us; 278us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 2us; 35us; 714us; 1us; 35us; 3us; 36us; 640us; 641us; 1us; 36us; 1us; 36us; 2us; 37us; 38us; 3us; 37us; 640us; 641us; 1us; 37us; 1us; 37us; 1us; 38us; 3us; 38us; 640us; 641us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 39us; 1us; 39us; 1us; 40us; 1us; 40us; 2us; 41us; 639us; 1us; 41us; 2us; 42us; 43us; 1us; 42us; 1us; 43us; 2us; 44us; 745us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 45us; 2us; 46us; 160us; 3us; 46us; 640us; 641us; 1us; 47us; 1us; 48us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 77us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 80us; 1us; 80us; 1us; 80us; 2us; 81us; 82us; 1us; 81us; 1us; 81us; 1us; 81us; 1us; 81us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 84us; 2us; 85us; 86us; 2us; 85us; 86us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 89us; 1us; 91us; 1us; 91us; 1us; 91us; 1us; 92us; 1us; 92us; 1us; 92us; 1us; 92us; 1us; 92us; 2us; 93us; 94us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 94us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 100us; 1us; 100us; 1us; 100us; 1us; 101us; 1us; 103us; 1us; 103us; 1us; 103us; 2us; 114us; 115us; 1us; 114us; 1us; 115us; 2us; 116us; 117us; 2us; 116us; 117us; 1us; 116us; 1us; 117us; 2us; 118us; 119us; 1us; 119us; 1us; 119us; 1us; 120us; 1us; 120us; 1us; 121us; 1us; 121us; 1us; 121us; 1us; 121us; 3us; 122us; 123us; 124us; 1us; 122us; 1us; 122us; 1us; 122us; 2us; 123us; 124us; 1us; 123us; 1us; 123us; 1us; 124us; 1us; 124us; 1us; 125us; 1us; 125us; 1us; 125us; 1us; 125us; 1us; 126us; 1us; 126us; 1us; 127us; 2us; 128us; 129us; 1us; 129us; 1us; 129us; 3us; 130us; 131us; 132us; 2us; 130us; 131us; 1us; 130us; 1us; 131us; 1us; 132us; 1us; 132us; 3us; 135us; 640us; 641us; 1us; 138us; 1us; 139us; 1us; 139us; 2us; 140us; 150us; 2us; 141us; 142us; 1us; 141us; 3us; 143us; 144us; 145us; 1us; 143us; 1us; 144us; 1us; 144us; 1us; 144us; 1us; 145us; 1us; 145us; 1us; 145us; 1us; 146us; 6us; 147us; 148us; 642us; 643us; 645us; 646us; 1us; 147us; 1us; 147us; 1us; 148us; 1us; 148us; 1us; 148us; 3us; 149us; 151us; 676us; 1us; 149us; 1us; 150us; 1us; 151us; 1us; 151us; 1us; 152us; 5us; 153us; 154us; 574us; 575us; 576us; 1us; 153us; 1us; 153us; 2us; 155us; 156us; 2us; 155us; 714us; 1us; 155us; 1us; 156us; 1us; 157us; 1us; 158us; 1us; 158us; 1us; 158us; 1us; 158us; 1us; 159us; 1us; 159us; 1us; 160us; 1us; 161us; 1us; 161us; 1us; 161us; 1us; 162us; 1us; 162us; 1us; 162us; 1us; 163us; 1us; 163us; 1us; 164us; 1us; 164us; 1us; 164us; 1us; 164us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 166us; 1us; 166us; 1us; 166us; 1us; 171us; 1us; 172us; 1us; 173us; 1us; 173us; 1us; 174us; 1us; 174us; 1us; 174us; 1us; 176us; 1us; 177us; 3us; 178us; 179us; 180us; 3us; 178us; 179us; 180us; 3us; 178us; 179us; 180us; 3us; 178us; 179us; 180us; 2us; 178us; 179us; 1us; 178us; 1us; 179us; 1us; 180us; 2us; 181us; 182us; 2us; 181us; 182us; 1us; 181us; 1us; 182us; 1us; 183us; 1us; 184us; 2us; 184us; 185us; 1us; 185us; 1us; 187us; 2us; 187us; 188us; 1us; 187us; 1us; 187us; 1us; 188us; 1us; 188us; 1us; 189us; 2us; 190us; 191us; 1us; 190us; 1us; 190us; 1us; 191us; 1us; 192us; 1us; 193us; 1us; 194us; 1us; 195us; 1us; 196us; 1us; 197us; 2us; 198us; 199us; 2us; 198us; 199us; 2us; 198us; 199us; 1us; 198us; 1us; 199us; 6us; 200us; 201us; 202us; 203us; 204us; 205us; 5us; 200us; 201us; 202us; 203us; 204us; 4us; 200us; 201us; 202us; 203us; 2us; 200us; 201us; 1us; 200us; 1us; 201us; 1us; 202us; 1us; 202us; 1us; 203us; 1us; 204us; 1us; 204us; 1us; 205us; 1us; 205us; 2us; 206us; 207us; 1us; 207us; 1us; 207us; 6us; 208us; 210us; 211us; 212us; 217us; 219us; 6us; 209us; 210us; 211us; 212us; 217us; 219us; 6us; 210us; 211us; 211us; 212us; 217us; 219us; 6us; 210us; 211us; 212us; 212us; 217us; 219us; 6us; 210us; 211us; 212us; 216us; 217us; 219us; 6us; 210us; 211us; 212us; 217us; 217us; 219us; 6us; 210us; 211us; 212us; 217us; 218us; 219us; 6us; 210us; 211us; 212us; 217us; 219us; 219us; 1us; 210us; 1us; 210us; 1us; 211us; 1us; 212us; 2us; 213us; 216us; 2us; 214us; 218us; 1us; 215us; 1us; 216us; 1us; 217us; 1us; 218us; 1us; 219us; 4us; 220us; 221us; 222us; 233us; 3us; 220us; 221us; 222us; 1us; 220us; 1us; 221us; 1us; 221us; 1us; 222us; 1us; 222us; 1us; 223us; 4us; 225us; 226us; 227us; 228us; 1us; 225us; 1us; 226us; 1us; 226us; 1us; 227us; 1us; 227us; 1us; 229us; 1us; 229us; 1us; 229us; 1us; 230us; 1us; 230us; 1us; 230us; 1us; 231us; 1us; 231us; 1us; 231us; 1us; 232us; 1us; 233us; 1us; 234us; 1us; 235us; 1us; 236us; 1us; 237us; 8us; 238us; 239us; 240us; 241us; 642us; 643us; 645us; 646us; 2us; 238us; 239us; 1us; 238us; 1us; 239us; 3us; 240us; 278us; 643us; 2us; 240us; 643us; 1us; 241us; 7us; 242us; 244us; 245us; 248us; 249us; 252us; 254us; 7us; 244us; 245us; 245us; 248us; 249us; 252us; 254us; 7us; 244us; 245us; 248us; 249us; 249us; 252us; 254us; 7us; 244us; 245us; 248us; 249us; 251us; 252us; 254us; 7us; 244us; 245us; 248us; 249us; 252us; 252us; 254us; 7us; 244us; 245us; 248us; 249us; 252us; 253us; 254us; 7us; 244us; 245us; 248us; 249us; 252us; 254us; 254us; 7us; 244us; 245us; 248us; 249us; 252us; 254us; 258us; 8us; 244us; 245us; 248us; 249us; 252us; 254us; 260us; 261us; 13us; 244us; 245us; 248us; 249us; 252us; 254us; 335us; 336us; 502us; 503us; 504us; 505us; 513us; 7us; 244us; 245us; 248us; 249us; 252us; 254us; 391us; 1us; 244us; 1us; 244us; 1us; 245us; 2us; 246us; 251us; 2us; 247us; 253us; 1us; 248us; 1us; 248us; 1us; 249us; 1us; 250us; 1us; 251us; 1us; 252us; 1us; 253us; 1us; 254us; 1us; 255us; 2us; 256us; 257us; 1us; 256us; 2us; 257us; 714us; 1us; 257us; 3us; 258us; 640us; 641us; 1us; 258us; 1us; 260us; 2us; 261us; 714us; 1us; 261us; 2us; 263us; 264us; 2us; 263us; 264us; 1us; 263us; 1us; 264us; 1us; 265us; 1us; 266us; 1us; 266us; 1us; 266us; 44us; 267us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 2us; 268us; 269us; 1us; 268us; 2us; 270us; 271us; 1us; 270us; 1us; 270us; 48us; 272us; 273us; 274us; 275us; 276us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 50us; 272us; 273us; 274us; 275us; 276us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 452us; 453us; 51us; 272us; 273us; 274us; 275us; 276us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 498us; 499us; 500us; 2us; 272us; 273us; 1us; 272us; 1us; 275us; 1us; 275us; 1us; 276us; 1us; 276us; 1us; 276us; 1us; 276us; 5us; 277us; 300us; 302us; 304us; 306us; 1us; 278us; 2us; 278us; 322us; 2us; 278us; 325us; 2us; 278us; 330us; 2us; 278us; 333us; 2us; 278us; 335us; 2us; 278us; 439us; 2us; 278us; 449us; 2us; 278us; 470us; 2us; 278us; 475us; 3us; 278us; 475us; 643us; 2us; 278us; 488us; 1us; 279us; 4us; 280us; 281us; 282us; 283us; 2us; 280us; 282us; 2us; 280us; 282us; 45us; 281us; 283us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 2us; 281us; 283us; 1us; 282us; 1us; 283us; 4us; 284us; 285us; 286us; 287us; 2us; 284us; 286us; 2us; 284us; 286us; 45us; 285us; 287us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 2us; 285us; 287us; 1us; 286us; 1us; 287us; 1us; 288us; 44us; 288us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 2us; 289us; 290us; 2us; 289us; 290us; 2us; 289us; 290us; 1us; 289us; 1us; 290us; 2us; 291us; 292us; 2us; 291us; 292us; 2us; 291us; 292us; 1us; 292us; 1us; 293us; 1us; 294us; 1us; 295us; 1us; 296us; 1us; 296us; 1us; 296us; 2us; 297us; 298us; 2us; 297us; 298us; 1us; 297us; 1us; 298us; 4us; 299us; 301us; 303us; 305us; 1us; 299us; 4us; 300us; 302us; 304us; 306us; 1us; 300us; 1us; 301us; 1us; 302us; 2us; 303us; 305us; 1us; 303us; 2us; 304us; 306us; 1us; 304us; 1us; 305us; 1us; 306us; 1us; 307us; 1us; 308us; 1us; 308us; 1us; 308us; 1us; 309us; 1us; 309us; 1us; 309us; 1us; 310us; 2us; 311us; 312us; 2us; 311us; 312us; 1us; 311us; 1us; 312us; 4us; 313us; 314us; 315us; 316us; 46us; 313us; 314us; 315us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 2us; 313us; 314us; 1us; 315us; 1us; 316us; 6us; 317us; 318us; 319us; 320us; 321us; 322us; 47us; 317us; 318us; 319us; 320us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 3us; 317us; 318us; 319us; 2us; 317us; 318us; 1us; 317us; 1us; 318us; 1us; 319us; 1us; 319us; 1us; 320us; 1us; 321us; 1us; 322us; 15us; 323us; 324us; 325us; 326us; 327us; 328us; 329us; 330us; 331us; 332us; 333us; 334us; 335us; 336us; 337us; 6us; 323us; 324us; 325us; 326us; 327us; 337us; 4us; 323us; 324us; 325us; 326us; 2us; 323us; 324us; 1us; 323us; 1us; 324us; 1us; 325us; 1us; 326us; 1us; 327us; 5us; 328us; 329us; 330us; 331us; 332us; 4us; 328us; 329us; 330us; 331us; 2us; 328us; 329us; 1us; 328us; 1us; 329us; 1us; 330us; 1us; 331us; 1us; 332us; 1us; 333us; 1us; 333us; 1us; 333us; 1us; 334us; 1us; 335us; 2us; 336us; 769us; 1us; 337us; 1us; 337us; 44us; 338us; 339us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 397us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 402us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 406us; 414us; 45us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 409us; 410us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 413us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 452us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 454us; 47us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 498us; 499us; 500us; 502us; 45us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 498us; 499us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 499us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 513us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 513us; 1us; 338us; 1us; 338us; 1us; 339us; 2us; 340us; 413us; 2us; 341us; 361us; 2us; 342us; 362us; 2us; 343us; 363us; 2us; 344us; 364us; 2us; 345us; 365us; 2us; 346us; 366us; 2us; 347us; 367us; 2us; 348us; 368us; 2us; 349us; 369us; 2us; 350us; 370us; 2us; 351us; 371us; 2us; 352us; 372us; 2us; 353us; 373us; 2us; 354us; 374us; 2us; 355us; 375us; 2us; 356us; 376us; 2us; 357us; 377us; 2us; 358us; 378us; 2us; 359us; 379us; 2us; 360us; 380us; 1us; 361us; 1us; 362us; 1us; 363us; 1us; 364us; 1us; 365us; 1us; 366us; 1us; 367us; 1us; 368us; 1us; 369us; 1us; 370us; 1us; 371us; 1us; 372us; 1us; 373us; 1us; 374us; 1us; 375us; 1us; 376us; 1us; 377us; 1us; 378us; 1us; 379us; 1us; 380us; 1us; 381us; 1us; 382us; 1us; 383us; 1us; 383us; 1us; 383us; 1us; 384us; 1us; 384us; 2us; 385us; 386us; 2us; 385us; 386us; 1us; 385us; 1us; 386us; 1us; 387us; 2us; 388us; 389us; 1us; 388us; 1us; 389us; 1us; 390us; 1us; 391us; 5us; 392us; 393us; 394us; 395us; 396us; 4us; 392us; 393us; 394us; 395us; 2us; 393us; 394us; 1us; 393us; 1us; 394us; 1us; 395us; 1us; 396us; 1us; 397us; 1us; 399us; 1us; 399us; 1us; 401us; 1us; 401us; 1us; 402us; 2us; 403us; 404us; 2us; 403us; 404us; 2us; 403us; 404us; 1us; 403us; 1us; 404us; 1us; 406us; 2us; 407us; 408us; 2us; 407us; 408us; 2us; 407us; 408us; 1us; 407us; 1us; 408us; 2us; 409us; 410us; 1us; 409us; 1us; 410us; 1us; 413us; 1us; 414us; 1us; 415us; 2us; 415us; 657us; 1us; 415us; 1us; 416us; 2us; 416us; 653us; 1us; 416us; 1us; 417us; 2us; 417us; 669us; 1us; 417us; 3us; 418us; 419us; 420us; 2us; 418us; 419us; 2us; 418us; 419us; 1us; 418us; 1us; 419us; 1us; 420us; 1us; 421us; 1us; 421us; 2us; 422us; 423us; 6us; 422us; 423us; 519us; 523us; 524us; 525us; 1us; 423us; 6us; 424us; 427us; 428us; 429us; 431us; 434us; 1us; 425us; 6us; 425us; 427us; 428us; 429us; 431us; 434us; 6us; 426us; 427us; 428us; 429us; 431us; 434us; 6us; 427us; 427us; 428us; 429us; 431us; 434us; 6us; 427us; 428us; 428us; 429us; 431us; 434us; 6us; 427us; 428us; 429us; 430us; 431us; 434us; 1us; 427us; 1us; 428us; 1us; 429us; 1us; 429us; 1us; 430us; 2us; 430us; 647us; 1us; 431us; 1us; 431us; 1us; 432us; 1us; 432us; 1us; 432us; 1us; 433us; 2us; 433us; 663us; 1us; 433us; 1us; 434us; 1us; 434us; 1us; 435us; 1us; 436us; 4us; 437us; 438us; 439us; 440us; 2us; 437us; 438us; 1us; 437us; 1us; 438us; 1us; 439us; 1us; 440us; 1us; 441us; 1us; 442us; 1us; 443us; 1us; 445us; 5us; 446us; 642us; 643us; 645us; 646us; 1us; 446us; 1us; 446us; 5us; 447us; 448us; 449us; 450us; 451us; 2us; 447us; 448us; 1us; 447us; 1us; 448us; 1us; 449us; 1us; 450us; 1us; 451us; 1us; 451us; 2us; 452us; 453us; 1us; 454us; 1us; 455us; 1us; 456us; 1us; 457us; 1us; 458us; 1us; 459us; 1us; 460us; 1us; 461us; 1us; 462us; 1us; 463us; 4us; 464us; 465us; 466us; 467us; 2us; 464us; 465us; 1us; 464us; 1us; 465us; 1us; 466us; 1us; 466us; 1us; 467us; 4us; 468us; 469us; 470us; 471us; 2us; 468us; 469us; 1us; 468us; 1us; 469us; 1us; 470us; 1us; 471us; 9us; 472us; 473us; 474us; 475us; 476us; 477us; 478us; 479us; 480us; 13us; 472us; 473us; 474us; 475us; 476us; 477us; 478us; 479us; 480us; 642us; 643us; 645us; 646us; 1us; 472us; 2us; 473us; 474us; 1us; 473us; 1us; 474us; 1us; 475us; 2us; 475us; 643us; 1us; 476us; 1us; 477us; 1us; 478us; 1us; 479us; 1us; 480us; 1us; 481us; 5us; 486us; 487us; 488us; 489us; 490us; 2us; 486us; 487us; 1us; 486us; 1us; 487us; 1us; 488us; 1us; 489us; 1us; 490us; 1us; 491us; 1us; 492us; 1us; 494us; 1us; 496us; 1us; 497us; 3us; 498us; 499us; 500us; 1us; 499us; 1us; 500us; 1us; 501us; 1us; 501us; 3us; 502us; 503us; 504us; 1us; 503us; 1us; 504us; 1us; 505us; 1us; 513us; 1us; 513us; 1us; 517us; 1us; 518us; 1us; 518us; 1us; 518us; 1us; 518us; 2us; 518us; 534us; 1us; 518us; 1us; 519us; 1us; 519us; 2us; 519us; 534us; 1us; 519us; 3us; 520us; 521us; 522us; 2us; 521us; 522us; 1us; 522us; 2us; 522us; 534us; 1us; 522us; 1us; 523us; 1us; 523us; 2us; 523us; 534us; 1us; 523us; 2us; 524us; 525us; 1us; 524us; 1us; 524us; 1us; 525us; 2us; 525us; 534us; 1us; 525us; 1us; 525us; 1us; 526us; 2us; 526us; 534us; 2us; 528us; 531us; 2us; 529us; 530us; 1us; 530us; 1us; 531us; 3us; 532us; 640us; 641us; 1us; 533us; 1us; 534us; 5us; 536us; 537us; 538us; 539us; 540us; 3us; 536us; 537us; 538us; 1us; 536us; 1us; 538us; 1us; 540us; 1us; 541us; 1us; 542us; 1us; 543us; 1us; 544us; 1us; 546us; 1us; 546us; 2us; 547us; 548us; 1us; 547us; 1us; 547us; 2us; 549us; 550us; 1us; 549us; 1us; 549us; 2us; 551us; 552us; 1us; 551us; 1us; 551us; 7us; 553us; 555us; 556us; 558us; 574us; 575us; 576us; 2us; 553us; 556us; 5us; 553us; 556us; 574us; 575us; 576us; 2us; 554us; 557us; 2us; 554us; 557us; 2us; 554us; 557us; 5us; 554us; 557us; 574us; 575us; 576us; 2us; 559us; 560us; 1us; 559us; 1us; 559us; 6us; 561us; 563us; 564us; 574us; 575us; 576us; 1us; 561us; 1us; 561us; 1us; 562us; 1us; 562us; 1us; 563us; 1us; 563us; 6us; 565us; 566us; 567us; 574us; 575us; 576us; 1us; 565us; 1us; 565us; 1us; 566us; 1us; 566us; 5us; 568us; 569us; 574us; 575us; 576us; 1us; 568us; 1us; 568us; 3us; 570us; 640us; 641us; 2us; 571us; 572us; 4us; 571us; 572us; 606us; 607us; 1us; 571us; 1us; 571us; 1us; 573us; 4us; 573us; 574us; 575us; 576us; 1us; 573us; 6us; 574us; 575us; 576us; 589us; 590us; 591us; 1us; 574us; 2us; 574us; 589us; 1us; 575us; 2us; 575us; 590us; 1us; 575us; 2us; 575us; 590us; 1us; 576us; 2us; 576us; 591us; 5us; 577us; 592us; 599us; 600us; 605us; 4us; 577us; 599us; 600us; 605us; 1us; 577us; 2us; 577us; 592us; 1us; 577us; 2us; 577us; 592us; 1us; 577us; 2us; 577us; 592us; 1us; 578us; 4us; 579us; 580us; 581us; 582us; 1us; 579us; 3us; 580us; 581us; 582us; 1us; 580us; 2us; 581us; 582us; 1us; 581us; 1us; 582us; 1us; 582us; 1us; 583us; 1us; 583us; 1us; 583us; 2us; 583us; 584us; 3us; 584us; 610us; 611us; 1us; 584us; 1us; 584us; 3us; 586us; 587us; 588us; 6us; 586us; 587us; 588us; 594us; 595us; 596us; 2us; 587us; 588us; 4us; 587us; 588us; 595us; 596us; 1us; 587us; 2us; 587us; 595us; 1us; 588us; 2us; 588us; 596us; 1us; 588us; 2us; 588us; 596us; 1us; 593us; 1us; 597us; 1us; 598us; 3us; 599us; 600us; 617us; 1us; 599us; 1us; 600us; 1us; 601us; 1us; 602us; 1us; 603us; 1us; 604us; 1us; 605us; 1us; 605us; 1us; 606us; 1us; 607us; 1us; 607us; 1us; 608us; 1us; 609us; 1us; 609us; 7us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 3us; 610us; 611us; 612us; 3us; 610us; 611us; 612us; 2us; 610us; 611us; 1us; 610us; 1us; 611us; 1us; 612us; 3us; 613us; 614us; 618us; 1us; 613us; 1us; 614us; 1us; 615us; 1us; 616us; 1us; 617us; 1us; 618us; 2us; 619us; 620us; 3us; 619us; 630us; 631us; 1us; 619us; 1us; 620us; 1us; 620us; 3us; 621us; 640us; 641us; 1us; 622us; 3us; 622us; 630us; 631us; 1us; 622us; 3us; 623us; 624us; 625us; 2us; 624us; 625us; 1us; 624us; 1us; 625us; 1us; 625us; 1us; 626us; 2us; 627us; 628us; 1us; 628us; 1us; 629us; 3us; 630us; 630us; 631us; 3us; 630us; 631us; 631us; 3us; 630us; 631us; 632us; 1us; 630us; 1us; 631us; 1us; 632us; 1us; 633us; 1us; 633us; 1us; 634us; 1us; 635us; 1us; 635us; 1us; 636us; 1us; 637us; 1us; 638us; 1us; 639us; 2us; 640us; 641us; 1us; 640us; 1us; 641us; 4us; 642us; 643us; 645us; 646us; 1us; 642us; 1us; 642us; 1us; 643us; 1us; 643us; 1us; 644us; 3us; 645us; 646us; 675us; 3us; 645us; 646us; 675us; 1us; 645us; 1us; 646us; 1us; 646us; 1us; 646us; 1us; 647us; 1us; 648us; 1us; 649us; 1us; 650us; 1us; 651us; 1us; 652us; 1us; 653us; 1us; 654us; 1us; 655us; 1us; 656us; 1us; 657us; 1us; 658us; 1us; 659us; 1us; 660us; 1us; 661us; 1us; 662us; 1us; 663us; 1us; 664us; 1us; 665us; 1us; 666us; 1us; 667us; 1us; 668us; 1us; 669us; 2us; 670us; 671us; 1us; 671us; 1us; 672us; 1us; 672us; 1us; 673us; 1us; 674us; 1us; 674us; 1us; 675us; 1us; 676us; 1us; 677us; 3us; 678us; 681us; 682us; 1us; 679us; 1us; 680us; 2us; 681us; 682us; 1us; 681us; 1us; 682us; 1us; 683us; 1us; 684us; 1us; 685us; 1us; 686us; 2us; 687us; 688us; 1us; 688us; 2us; 697us; 699us; 2us; 698us; 700us; 1us; 699us; 1us; 700us; 1us; 701us; 1us; 702us; 1us; 703us; 1us; 708us; 1us; 712us; 1us; 714us; 1us; 716us; 1us; 720us; 1us; 722us; 1us; 724us; 1us; 726us; 1us; 727us; 1us; 728us; 1us; 729us; 1us; 737us; 1us; 738us; 1us; 742us; 2us; 742us; 764us; 1us; 742us; 1us; 743us; 1us; 744us; 1us; 745us; 1us; 746us; 1us; 747us; 2us; 747us; 765us; 1us; 747us; 1us; 748us; 1us; 749us; 1us; 750us; 1us; 750us; 1us; 751us; 1us; 752us; 1us; 753us; 1us; 753us; 1us; 754us; 1us; 755us; 1us; 756us; 1us; 756us; 1us; 757us; 1us; 758us; 1us; 759us; 1us; 760us; 1us; 761us; 1us; 762us; 1us; 763us; 1us; 764us; 1us; 765us; 1us; 766us; 1us; 767us; 1us; 768us; 1us; 769us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 16us; 21us; 23us; 25us; 27us; 31us; 33us; 36us; 39us; 41us; 46us; 48us; 52us; 55us; 57us; 59us; 61us; 65us; 67us; 69us; 71us; 73us; 78us; 80us; 83us; 85us; 88us; 90us; 92us; 94us; 96us; 98us; 101us; 103us; 108us; 112us; 115us; 117us; 119us; 122us; 124us; 126us; 128us; 130us; 132us; 135us; 137us; 141us; 143us; 145us; 148us; 152us; 154us; 156us; 158us; 162us; 164us; 166us; 168us; 170us; 172us; 174us; 176us; 179us; 181us; 184us; 186us; 188us; 191us; 193us; 195us; 197us; 199us; 201us; 204us; 208us; 210us; 212us; 214us; 216us; 218us; 220us; 222us; 224us; 226us; 228us; 230us; 232us; 235us; 237us; 239us; 241us; 243us; 245us; 247us; 249us; 251us; 253us; 255us; 257us; 259us; 262us; 265us; 267us; 269us; 271us; 273us; 275us; 277us; 279us; 281us; 283us; 285us; 287us; 289us; 291us; 293us; 296us; 298us; 300us; 302us; 304us; 306us; 308us; 310us; 312us; 314us; 316us; 318us; 320us; 322us; 324us; 326us; 328us; 330us; 332us; 335us; 337us; 339us; 342us; 345us; 347us; 349us; 352us; 354us; 356us; 358us; 360us; 362us; 364us; 366us; 368us; 372us; 374us; 376us; 378us; 381us; 383us; 385us; 387us; 389us; 391us; 393us; 395us; 397us; 399us; 401us; 403us; 406us; 408us; 410us; 414us; 417us; 419us; 421us; 423us; 425us; 429us; 431us; 433us; 435us; 438us; 441us; 443us; 447us; 449us; 451us; 453us; 455us; 457us; 459us; 461us; 463us; 470us; 472us; 474us; 476us; 478us; 480us; 484us; 486us; 488us; 490us; 492us; 494us; 500us; 502us; 504us; 507us; 510us; 512us; 514us; 516us; 518us; 520us; 522us; 524us; 526us; 528us; 530us; 532us; 534us; 536us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 552us; 554us; 556us; 558us; 560us; 562us; 564us; 566us; 568us; 570us; 572us; 574us; 576us; 578us; 580us; 582us; 584us; 586us; 590us; 594us; 598us; 602us; 605us; 607us; 609us; 611us; 614us; 617us; 619us; 621us; 623us; 625us; 628us; 630us; 632us; 635us; 637us; 639us; 641us; 643us; 645us; 648us; 650us; 652us; 654us; 656us; 658us; 660us; 662us; 664us; 666us; 669us; 672us; 675us; 677us; 679us; 686us; 692us; 697us; 700us; 702us; 704us; 706us; 708us; 710us; 712us; 714us; 716us; 718us; 721us; 723us; 725us; 732us; 739us; 746us; 753us; 760us; 767us; 774us; 781us; 783us; 785us; 787us; 789us; 792us; 795us; 797us; 799us; 801us; 803us; 805us; 810us; 814us; 816us; 818us; 820us; 822us; 824us; 826us; 831us; 833us; 835us; 837us; 839us; 841us; 843us; 845us; 847us; 849us; 851us; 853us; 855us; 857us; 859us; 861us; 863us; 865us; 867us; 869us; 871us; 880us; 883us; 885us; 887us; 891us; 894us; 896us; 904us; 912us; 920us; 928us; 936us; 944us; 952us; 960us; 969us; 983us; 991us; 993us; 995us; 997us; 1000us; 1003us; 1005us; 1007us; 1009us; 1011us; 1013us; 1015us; 1017us; 1019us; 1021us; 1024us; 1026us; 1029us; 1031us; 1035us; 1037us; 1039us; 1042us; 1044us; 1047us; 1050us; 1052us; 1054us; 1056us; 1058us; 1060us; 1062us; 1107us; 1110us; 1112us; 1115us; 1117us; 1119us; 1168us; 1219us; 1271us; 1274us; 1276us; 1278us; 1280us; 1282us; 1284us; 1286us; 1288us; 1294us; 1296us; 1299us; 1302us; 1305us; 1308us; 1311us; 1314us; 1317us; 1320us; 1323us; 1327us; 1330us; 1332us; 1337us; 1340us; 1343us; 1389us; 1392us; 1394us; 1396us; 1401us; 1404us; 1407us; 1453us; 1456us; 1458us; 1460us; 1462us; 1507us; 1510us; 1513us; 1516us; 1518us; 1520us; 1523us; 1526us; 1529us; 1531us; 1533us; 1535us; 1537us; 1539us; 1541us; 1543us; 1546us; 1549us; 1551us; 1553us; 1558us; 1560us; 1565us; 1567us; 1569us; 1571us; 1574us; 1576us; 1579us; 1581us; 1583us; 1585us; 1587us; 1589us; 1591us; 1593us; 1595us; 1597us; 1599us; 1601us; 1604us; 1607us; 1609us; 1611us; 1616us; 1663us; 1666us; 1668us; 1670us; 1677us; 1725us; 1729us; 1732us; 1734us; 1736us; 1738us; 1740us; 1742us; 1744us; 1746us; 1762us; 1769us; 1774us; 1777us; 1779us; 1781us; 1783us; 1785us; 1787us; 1793us; 1798us; 1801us; 1803us; 1805us; 1807us; 1809us; 1811us; 1813us; 1815us; 1817us; 1819us; 1821us; 1824us; 1826us; 1828us; 1873us; 1918us; 1963us; 2008us; 2053us; 2098us; 2143us; 2188us; 2233us; 2278us; 2323us; 2368us; 2413us; 2458us; 2503us; 2548us; 2593us; 2638us; 2683us; 2728us; 2773us; 2818us; 2863us; 2908us; 2954us; 2999us; 3044us; 3089us; 3134us; 3182us; 3228us; 3273us; 3318us; 3363us; 3365us; 3367us; 3369us; 3372us; 3375us; 3378us; 3381us; 3384us; 3387us; 3390us; 3393us; 3396us; 3399us; 3402us; 3405us; 3408us; 3411us; 3414us; 3417us; 3420us; 3423us; 3426us; 3429us; 3432us; 3434us; 3436us; 3438us; 3440us; 3442us; 3444us; 3446us; 3448us; 3450us; 3452us; 3454us; 3456us; 3458us; 3460us; 3462us; 3464us; 3466us; 3468us; 3470us; 3472us; 3474us; 3476us; 3478us; 3480us; 3482us; 3484us; 3486us; 3489us; 3492us; 3494us; 3496us; 3498us; 3501us; 3503us; 3505us; 3507us; 3509us; 3515us; 3520us; 3523us; 3525us; 3527us; 3529us; 3531us; 3533us; 3535us; 3537us; 3539us; 3541us; 3543us; 3546us; 3549us; 3552us; 3554us; 3556us; 3558us; 3561us; 3564us; 3567us; 3569us; 3571us; 3574us; 3576us; 3578us; 3580us; 3582us; 3584us; 3587us; 3589us; 3591us; 3594us; 3596us; 3598us; 3601us; 3603us; 3607us; 3610us; 3613us; 3615us; 3617us; 3619us; 3621us; 3623us; 3626us; 3633us; 3635us; 3642us; 3644us; 3651us; 3658us; 3665us; 3672us; 3679us; 3681us; 3683us; 3685us; 3687us; 3689us; 3692us; 3694us; 3696us; 3698us; 3700us; 3702us; 3704us; 3707us; 3709us; 3711us; 3713us; 3715us; 3717us; 3722us; 3725us; 3727us; 3729us; 3731us; 3733us; 3735us; 3737us; 3739us; 3741us; 3747us; 3749us; 3751us; 3757us; 3760us; 3762us; 3764us; 3766us; 3768us; 3770us; 3772us; 3775us; 3777us; 3779us; 3781us; 3783us; 3785us; 3787us; 3789us; 3791us; 3793us; 3795us; 3800us; 3803us; 3805us; 3807us; 3809us; 3811us; 3813us; 3818us; 3821us; 3823us; 3825us; 3827us; 3829us; 3839us; 3853us; 3855us; 3858us; 3860us; 3862us; 3864us; 3867us; 3869us; 3871us; 3873us; 3875us; 3877us; 3879us; 3885us; 3888us; 3890us; 3892us; 3894us; 3896us; 3898us; 3900us; 3902us; 3904us; 3906us; 3908us; 3912us; 3914us; 3916us; 3918us; 3920us; 3924us; 3926us; 3928us; 3930us; 3932us; 3934us; 3936us; 3938us; 3940us; 3942us; 3944us; 3947us; 3949us; 3951us; 3953us; 3956us; 3958us; 3962us; 3965us; 3967us; 3970us; 3972us; 3974us; 3976us; 3979us; 3981us; 3984us; 3986us; 3988us; 3990us; 3993us; 3995us; 3997us; 3999us; 4002us; 4005us; 4008us; 4010us; 4012us; 4016us; 4018us; 4020us; 4026us; 4030us; 4032us; 4034us; 4036us; 4038us; 4040us; 4042us; 4044us; 4046us; 4048us; 4051us; 4053us; 4055us; 4058us; 4060us; 4062us; 4065us; 4067us; 4069us; 4077us; 4080us; 4086us; 4089us; 4092us; 4095us; 4101us; 4104us; 4106us; 4108us; 4115us; 4117us; 4119us; 4121us; 4123us; 4125us; 4127us; 4134us; 4136us; 4138us; 4140us; 4142us; 4148us; 4150us; 4152us; 4156us; 4159us; 4164us; 4166us; 4168us; 4170us; 4175us; 4177us; 4184us; 4186us; 4189us; 4191us; 4194us; 4196us; 4199us; 4201us; 4204us; 4210us; 4215us; 4217us; 4220us; 4222us; 4225us; 4227us; 4230us; 4232us; 4237us; 4239us; 4243us; 4245us; 4248us; 4250us; 4252us; 4254us; 4256us; 4258us; 4260us; 4263us; 4267us; 4269us; 4271us; 4275us; 4282us; 4285us; 4290us; 4292us; 4295us; 4297us; 4300us; 4302us; 4305us; 4307us; 4309us; 4311us; 4315us; 4317us; 4319us; 4321us; 4323us; 4325us; 4327us; 4329us; 4331us; 4333us; 4335us; 4337us; 4339us; 4341us; 4343us; 4351us; 4355us; 4359us; 4362us; 4364us; 4366us; 4368us; 4372us; 4374us; 4376us; 4378us; 4380us; 4382us; 4384us; 4387us; 4391us; 4393us; 4395us; 4397us; 4401us; 4403us; 4407us; 4409us; 4413us; 4416us; 4418us; 4420us; 4422us; 4424us; 4427us; 4429us; 4431us; 4435us; 4439us; 4443us; 4445us; 4447us; 4449us; 4451us; 4453us; 4455us; 4457us; 4459us; 4461us; 4463us; 4465us; 4467us; 4470us; 4472us; 4474us; 4479us; 4481us; 4483us; 4485us; 4487us; 4489us; 4493us; 4497us; 4499us; 4501us; 4503us; 4505us; 4507us; 4509us; 4511us; 4513us; 4515us; 4517us; 4519us; 4521us; 4523us; 4525us; 4527us; 4529us; 4531us; 4533us; 4535us; 4537us; 4539us; 4541us; 4543us; 4545us; 4547us; 4549us; 4551us; 4554us; 4556us; 4558us; 4560us; 4562us; 4564us; 4566us; 4568us; 4570us; 4572us; 4576us; 4578us; 4580us; 4583us; 4585us; 4587us; 4589us; 4591us; 4593us; 4595us; 4598us; 4600us; 4603us; 4606us; 4608us; 4610us; 4612us; 4614us; 4616us; 4618us; 4620us; 4622us; 4624us; 4626us; 4628us; 4630us; 4632us; 4634us; 4636us; 4638us; 4640us; 4642us; 4644us; 4647us; 4649us; 4651us; 4653us; 4655us; 4657us; 4659us; 4662us; 4664us; 4666us; 4668us; 4670us; 4672us; 4674us; 4676us; 4678us; 4680us; 4682us; 4684us; 4686us; 4688us; 4690us; 4692us; 4694us; 4696us; 4698us; 4700us; 4702us; 4704us; 4706us; 4708us; 4710us; 4712us; |]
let _fsyacc_action_rows = 1099
let _fsyacc_actionTableElements = [|16us; 16401us; 10us; 435us; 21us; 18us; 38us; 16411us; 43us; 1064us; 44us; 1067us; 45us; 1071us; 46us; 1074us; 88us; 40us; 116us; 223us; 117us; 80us; 125us; 1068us; 131us; 74us; 137us; 1070us; 161us; 16411us; 173us; 1075us; 221us; 16us; 0us; 49152us; 0us; 16385us; 0us; 16386us; 0us; 16387us; 3us; 32768us; 48us; 982us; 60us; 981us; 214us; 980us; 1us; 16388us; 92us; 984us; 13us; 16401us; 10us; 8us; 21us; 18us; 38us; 16411us; 43us; 1064us; 44us; 1067us; 88us; 40us; 116us; 223us; 117us; 80us; 125us; 1068us; 131us; 74us; 137us; 1070us; 161us; 16411us; 221us; 32us; 0us; 16389us; 1us; 32768us; 10us; 10us; 0us; 16390us; 2us; 32768us; 10us; 12us; 221us; 13us; 0us; 16391us; 1us; 32768us; 10us; 14us; 0us; 16392us; 0us; 16394us; 14us; 16411us; 10us; 17us; 20us; 1041us; 43us; 1064us; 44us; 1067us; 83us; 1040us; 88us; 40us; 99us; 1039us; 116us; 223us; 117us; 80us; 125us; 1068us; 131us; 74us; 137us; 1070us; 221us; 32us; 223us; 16662us; 0us; 16395us; 11us; 16401us; 38us; 16411us; 43us; 1064us; 44us; 1067us; 88us; 40us; 116us; 223us; 117us; 80us; 125us; 1068us; 131us; 74us; 137us; 1070us; 161us; 16411us; 221us; 23us; 5us; 32768us; 10us; 435us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 221us; 423us; 1us; 17097us; 20us; 1052us; 0us; 16396us; 0us; 16397us; 15us; 16411us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 20us; 1041us; 43us; 1064us; 44us; 1067us; 83us; 1040us; 88us; 40us; 99us; 1039us; 116us; 223us; 117us; 80us; 125us; 1068us; 131us; 74us; 137us; 1070us; 221us; 32us; 0us; 16398us; 0us; 16399us; 0us; 16400us; 0us; 16402us; 14us; 16406us; 20us; 1041us; 38us; 16411us; 43us; 1064us; 44us; 1067us; 83us; 1040us; 88us; 40us; 99us; 1039us; 116us; 223us; 117us; 80us; 125us; 1068us; 131us; 74us; 137us; 1070us; 161us; 16411us; 221us; 32us; 0us; 16403us; 11us; 16407us; 38us; 16411us; 43us; 1064us; 44us; 1067us; 88us; 40us; 116us; 223us; 117us; 80us; 125us; 1068us; 131us; 74us; 137us; 1070us; 161us; 16411us; 221us; 32us; 0us; 16404us; 12us; 16411us; 20us; 1041us; 43us; 1064us; 44us; 1067us; 83us; 1040us; 88us; 40us; 99us; 1039us; 116us; 223us; 117us; 80us; 125us; 1068us; 131us; 74us; 137us; 1070us; 221us; 32us; 0us; 16405us; 9us; 16411us; 43us; 1064us; 44us; 1067us; 88us; 40us; 116us; 223us; 117us; 80us; 125us; 1068us; 131us; 74us; 137us; 1070us; 221us; 32us; 0us; 16408us; 0us; 16409us; 0us; 16410us; 1us; 16412us; 88us; 40us; 0us; 16413us; 16us; 32768us; 10us; 435us; 15us; 1097us; 43us; 1065us; 44us; 1067us; 45us; 1072us; 46us; 1074us; 48us; 982us; 60us; 981us; 75us; 1095us; 109us; 1096us; 125us; 1068us; 131us; 1069us; 137us; 1070us; 173us; 1075us; 214us; 980us; 221us; 45us; 2us; 17099us; 20us; 1044us; 99us; 1045us; 8us; 32768us; 10us; 435us; 15us; 1097us; 43us; 1093us; 45us; 1094us; 69us; 43us; 75us; 1095us; 109us; 1096us; 221us; 423us; 1us; 17097us; 20us; 1052us; 0us; 16414us; 1us; 16662us; 69us; 46us; 1us; 17097us; 20us; 1052us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 11us; 17098us; 43us; 1064us; 44us; 1067us; 45us; 1071us; 46us; 1074us; 48us; 982us; 60us; 981us; 125us; 1068us; 131us; 1069us; 137us; 1070us; 173us; 1075us; 214us; 980us; 0us; 16419us; 3us; 17123us; 41us; 1063us; 42us; 1062us; 92us; 984us; 14us; 16900us; 87us; 744us; 89us; 764us; 107us; 750us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 215us; 4us; 216us; 3us; 0us; 16420us; 4us; 32768us; 21us; 60us; 48us; 982us; 60us; 981us; 214us; 980us; 3us; 17123us; 41us; 1063us; 42us; 1062us; 92us; 984us; 14us; 16900us; 87us; 744us; 89us; 764us; 107us; 750us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 215us; 4us; 216us; 3us; 0us; 16421us; 3us; 32768us; 48us; 982us; 60us; 981us; 214us; 980us; 4us; 32768us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 92us; 984us; 2us; 17123us; 41us; 1063us; 42us; 1062us; 14us; 16900us; 87us; 744us; 89us; 764us; 107us; 750us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 215us; 4us; 216us; 3us; 0us; 16422us; 1us; 32768us; 93us; 66us; 0us; 16423us; 1us; 32768us; 93us; 68us; 0us; 16424us; 1us; 17023us; 93us; 70us; 0us; 16425us; 2us; 32768us; 38us; 238us; 161us; 232us; 0us; 16426us; 0us; 16427us; 3us; 17129us; 48us; 982us; 60us; 981us; 214us; 980us; 1us; 16463us; 155us; 88us; 0us; 16428us; 3us; 32768us; 48us; 982us; 60us; 981us; 214us; 980us; 1us; 16463us; 155us; 88us; 0us; 16429us; 4us; 32768us; 48us; 982us; 60us; 981us; 214us; 980us; 216us; 225us; 1us; 16430us; 92us; 984us; 0us; 16431us; 0us; 16432us; 0us; 16449us; 0us; 16450us; 0us; 16451us; 0us; 16461us; 3us; 32768us; 48us; 982us; 60us; 981us; 214us; 980us; 1us; 16463us; 155us; 88us; 0us; 16462us; 1us; 32768us; 85us; 92us; 1us; 32768us; 21us; 94us; 0us; 16464us; 0us; 16486us; 1us; 17097us; 20us; 1052us; 1us; 16488us; 102us; 139us; 3us; 32768us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 1us; 16488us; 102us; 139us; 0us; 16465us; 1us; 17097us; 20us; 1052us; 1us; 16488us; 102us; 139us; 3us; 32768us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 1us; 16488us; 102us; 139us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 4us; 16474us; 47us; 16486us; 48us; 16486us; 62us; 16486us; 221us; 113us; 5us; 32768us; 10us; 435us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 221us; 423us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 4us; 16474us; 47us; 16486us; 48us; 16486us; 62us; 16486us; 221us; 113us; 0us; 16473us; 2us; 17099us; 20us; 1044us; 99us; 1045us; 4us; 16474us; 47us; 16486us; 48us; 16486us; 62us; 16486us; 221us; 113us; 0us; 16475us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 16929us; 93us; 832us; 1us; 32768us; 85us; 121us; 43us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16476us; 20us; 16929us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 93us; 832us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 16929us; 93us; 832us; 1us; 32768us; 85us; 126us; 43us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16477us; 1us; 32768us; 85us; 129us; 43us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16478us; 3us; 32768us; 47us; 85us; 48us; 86us; 62us; 84us; 1us; 17105us; 127us; 1055us; 1us; 17093us; 18us; 1051us; 0us; 16481us; 1us; 32768us; 92us; 136us; 4us; 32768us; 48us; 1034us; 107us; 987us; 115us; 992us; 214us; 980us; 0us; 16484us; 0us; 16485us; 5us; 16474us; 21us; 107us; 47us; 16486us; 48us; 16486us; 62us; 16486us; 221us; 113us; 3us; 32768us; 18us; 1048us; 19us; 1049us; 166us; 1050us; 0us; 16487us; 4us; 32768us; 89us; 145us; 107us; 199us; 115us; 992us; 214us; 980us; 0us; 16498us; 0us; 16499us; 4us; 16486us; 38us; 167us; 68us; 171us; 142us; 1057us; 214us; 17109us; 5us; 32768us; 10us; 435us; 74us; 1079us; 75us; 1076us; 76us; 1078us; 221us; 423us; 0us; 16500us; 0us; 16501us; 7us; 16502us; 20us; 1052us; 38us; 17097us; 47us; 17097us; 48us; 17097us; 68us; 17097us; 142us; 17097us; 214us; 17097us; 4us; 16486us; 38us; 167us; 68us; 171us; 142us; 1057us; 214us; 17109us; 0us; 16503us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 90us; 846us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16504us; 1us; 32768us; 93us; 152us; 1us; 32768us; 85us; 156us; 43us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16505us; 2us; 32768us; 47us; 159us; 48us; 162us; 1us; 17105us; 127us; 1055us; 1us; 17093us; 18us; 1051us; 0us; 16506us; 1us; 17105us; 127us; 1055us; 1us; 17093us; 18us; 1051us; 0us; 16507us; 1us; 17093us; 18us; 1051us; 0us; 16508us; 0us; 16486us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 17093us; 18us; 1051us; 0us; 16509us; 1us; 32768us; 214us; 174us; 0us; 16510us; 0us; 16511us; 1us; 16512us; 112us; 175us; 1us; 32768us; 214us; 174us; 0us; 16513us; 2us; 17109us; 142us; 1057us; 221us; 181us; 5us; 32768us; 10us; 435us; 74us; 1079us; 75us; 1076us; 76us; 1078us; 221us; 423us; 0us; 16514us; 0us; 16515us; 3us; 32768us; 74us; 1079us; 75us; 1076us; 76us; 1078us; 0us; 16516us; 1us; 16519us; 92us; 984us; 0us; 16522us; 3us; 32768us; 107us; 199us; 115us; 992us; 214us; 980us; 0us; 16523us; 4us; 16524us; 20us; 1052us; 107us; 17097us; 115us; 17097us; 214us; 17097us; 3us; 16526us; 107us; 199us; 115us; 992us; 214us; 980us; 0us; 16525us; 3us; 17097us; 20us; 1052us; 93us; 195us; 144us; 192us; 0us; 16527us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 89us; 177us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 17097us; 20us; 1052us; 0us; 16528us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 90us; 846us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 17097us; 20us; 1052us; 0us; 16529us; 0us; 16530us; 29us; 32768us; 72us; 1027us; 77us; 1009us; 78us; 1007us; 85us; 1011us; 86us; 202us; 90us; 1015us; 94us; 200us; 98us; 1019us; 104us; 1016us; 105us; 1017us; 111us; 1010us; 118us; 1012us; 167us; 1022us; 168us; 1018us; 178us; 1024us; 181us; 1021us; 183us; 1013us; 184us; 1014us; 204us; 1020us; 205us; 1008us; 206us; 1005us; 207us; 1004us; 208us; 1006us; 209us; 999us; 210us; 1003us; 211us; 1002us; 212us; 1001us; 213us; 1000us; 221us; 990us; 3us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 0us; 16531us; 1us; 32768us; 73us; 203us; 3us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 0us; 16532us; 2us; 17060us; 20us; 1052us; 144us; 208us; 0us; 16533us; 0us; 16534us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 89us; 177us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16535us; 0us; 16536us; 6us; 16538us; 42us; 879us; 48us; 982us; 60us; 981us; 86us; 894us; 111us; 212us; 214us; 980us; 16us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16537us; 2us; 17099us; 20us; 1044us; 99us; 1045us; 2us; 17098us; 142us; 1057us; 214us; 17109us; 0us; 16539us; 0us; 16540us; 0us; 16541us; 1us; 32768us; 214us; 980us; 1us; 32768us; 93us; 221us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16542us; 1us; 32768us; 216us; 224us; 0us; 16543us; 0us; 16544us; 1us; 17101us; 119us; 1054us; 2us; 17105us; 127us; 1055us; 221us; 253us; 0us; 16545us; 1us; 17101us; 119us; 1054us; 2us; 17105us; 127us; 1055us; 221us; 253us; 0us; 16546us; 43us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16547us; 1us; 17101us; 119us; 1054us; 2us; 17105us; 127us; 1055us; 221us; 253us; 3us; 32768us; 10us; 435us; 18us; 245us; 221us; 423us; 0us; 16548us; 1us; 17101us; 119us; 1054us; 2us; 17105us; 127us; 1055us; 221us; 253us; 3us; 32768us; 10us; 435us; 18us; 245us; 221us; 423us; 0us; 16549us; 43us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 3us; 32768us; 10us; 435us; 18us; 245us; 221us; 423us; 0us; 16550us; 0us; 16555us; 0us; 16556us; 1us; 16559us; 155us; 249us; 0us; 16557us; 2us; 17105us; 127us; 1055us; 221us; 253us; 1us; 16559us; 155us; 249us; 0us; 16558us; 0us; 16560us; 0us; 16561us; 1us; 17107us; 141us; 1056us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 16929us; 93us; 832us; 3us; 32768us; 10us; 435us; 85us; 258us; 221us; 423us; 44us; 32768us; 21us; 262us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 260us; 0us; 16562us; 0us; 16563us; 0us; 16564us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 5us; 32768us; 10us; 435us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 221us; 423us; 0us; 16565us; 0us; 16566us; 0us; 16567us; 0us; 16570us; 1us; 16568us; 100us; 270us; 0us; 16569us; 2us; 32768us; 106us; 975us; 211us; 978us; 2us; 32768us; 85us; 272us; 155us; 274us; 43us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16571us; 2us; 32768us; 106us; 975us; 211us; 978us; 0us; 16572us; 0us; 16573us; 2us; 32768us; 70us; 280us; 93us; 278us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16574us; 0us; 16575us; 0us; 16576us; 0us; 16577us; 0us; 16578us; 0us; 16579us; 0us; 16580us; 0us; 16581us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 32768us; 113us; 289us; 44us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 291us; 0us; 16582us; 0us; 16583us; 20us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 303us; 2us; 32768us; 113us; 294us; 221us; 301us; 45us; 32768us; 10us; 435us; 17us; 298us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 423us; 3us; 32768us; 10us; 435us; 19us; 296us; 221us; 423us; 0us; 16584us; 0us; 16585us; 1us; 32768us; 19us; 299us; 0us; 16586us; 0us; 16587us; 1us; 32768us; 19us; 302us; 0us; 16588us; 1us; 32768us; 19us; 304us; 0us; 16589us; 1us; 16590us; 40us; 306us; 1us; 32768us; 183us; 951us; 0us; 16591us; 5us; 16592us; 72us; 318us; 94us; 319us; 104us; 326us; 112us; 324us; 156us; 316us; 5us; 16593us; 72us; 318us; 94us; 319us; 104us; 326us; 112us; 324us; 156us; 316us; 3us; 16595us; 94us; 319us; 104us; 326us; 112us; 324us; 1us; 16596us; 94us; 319us; 2us; 16600us; 94us; 319us; 104us; 326us; 2us; 16601us; 94us; 319us; 104us; 326us; 1us; 16602us; 94us; 319us; 1us; 16603us; 94us; 319us; 1us; 32768us; 214us; 980us; 0us; 16594us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 16597us; 112us; 323us; 0us; 16598us; 0us; 16599us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 25us; 16608us; 10us; 16617us; 15us; 16617us; 20us; 16617us; 43us; 16617us; 45us; 16617us; 72us; 16617us; 73us; 16617us; 74us; 16617us; 75us; 16617us; 76us; 16617us; 80us; 16617us; 85us; 16617us; 93us; 16617us; 94us; 16617us; 99us; 16617us; 100us; 16617us; 104us; 16617us; 108us; 16617us; 109us; 16617us; 110us; 16617us; 112us; 16617us; 113us; 16617us; 151us; 16617us; 156us; 16617us; 221us; 16617us; 21us; 32768us; 41us; 330us; 42us; 332us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16604us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16605us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16606us; 0us; 16607us; 21us; 16612us; 41us; 339us; 42us; 337us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16609us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16610us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16611us; 3us; 32768us; 48us; 982us; 60us; 981us; 214us; 980us; 3us; 32768us; 74us; 1079us; 75us; 1076us; 76us; 1078us; 0us; 16613us; 19us; 16643us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 32768us; 73us; 346us; 0us; 16614us; 19us; 16643us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 32768us; 80us; 349us; 0us; 16615us; 0us; 16616us; 0us; 16617us; 0us; 16618us; 0us; 16619us; 0us; 16620us; 0us; 16621us; 47us; 16627us; 10us; 435us; 48us; 1034us; 60us; 135us; 72us; 1027us; 77us; 1009us; 78us; 1007us; 82us; 350us; 85us; 1011us; 86us; 344us; 87us; 347us; 89us; 341us; 90us; 1015us; 98us; 1019us; 104us; 1016us; 105us; 1017us; 107us; 356us; 111us; 1010us; 115us; 992us; 118us; 1012us; 123us; 354us; 146us; 353us; 167us; 1022us; 168us; 1018us; 171us; 355us; 178us; 1024us; 181us; 1021us; 183us; 1013us; 184us; 1014us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 204us; 1020us; 205us; 1008us; 206us; 1005us; 207us; 1004us; 208us; 1006us; 209us; 999us; 210us; 1003us; 211us; 1002us; 212us; 1001us; 213us; 1000us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 360us; 5us; 32768us; 10us; 435us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 221us; 423us; 0us; 16622us; 0us; 16623us; 3us; 16662us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 0us; 16624us; 0us; 16625us; 6us; 16626us; 72us; 376us; 93us; 379us; 94us; 381us; 104us; 386us; 112us; 384us; 156us; 374us; 4us; 16629us; 93us; 379us; 94us; 381us; 104us; 386us; 112us; 384us; 2us; 16633us; 93us; 379us; 94us; 381us; 3us; 16635us; 93us; 379us; 94us; 381us; 104us; 386us; 3us; 16636us; 93us; 379us; 94us; 381us; 104us; 386us; 2us; 16637us; 93us; 379us; 94us; 381us; 2us; 16638us; 93us; 379us; 94us; 381us; 6us; 16642us; 72us; 376us; 93us; 379us; 94us; 381us; 104us; 386us; 112us; 384us; 156us; 374us; 8us; 17099us; 20us; 1044us; 72us; 376us; 93us; 379us; 94us; 381us; 99us; 1045us; 104us; 386us; 112us; 384us; 156us; 374us; 15us; 32768us; 10us; 435us; 15us; 1097us; 43us; 1093us; 45us; 1094us; 72us; 376us; 75us; 1095us; 85us; 785us; 93us; 379us; 94us; 381us; 104us; 386us; 109us; 1096us; 112us; 384us; 151us; 781us; 156us; 374us; 221us; 428us; 7us; 16782us; 72us; 376us; 93us; 379us; 94us; 381us; 100us; 638us; 104us; 386us; 112us; 384us; 156us; 374us; 1us; 32768us; 214us; 980us; 0us; 16628us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 16630us; 112us; 383us; 1us; 16631us; 104us; 385us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16632us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16634us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16639us; 2us; 17099us; 20us; 1044us; 99us; 1045us; 0us; 16640us; 3us; 17098us; 48us; 982us; 60us; 981us; 214us; 980us; 0us; 16641us; 2us; 32768us; 85us; 393us; 92us; 984us; 19us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16644us; 19us; 16643us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16645us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 5us; 32768us; 10us; 435us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 221us; 423us; 0us; 16647us; 0us; 16648us; 0us; 16649us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 3us; 32768us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 0us; 16650us; 23us; 16651us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 1us; 16653us; 17us; 407us; 0us; 16652us; 1us; 16655us; 93us; 409us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16654us; 27us; 16658us; 20us; 1044us; 28us; 418us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 99us; 1045us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 120us; 416us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 28us; 16658us; 20us; 1044us; 28us; 418us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 99us; 1045us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 120us; 416us; 152us; 574us; 167us; 726us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 28us; 16658us; 20us; 1044us; 28us; 418us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 99us; 1045us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 120us; 416us; 152us; 574us; 167us; 776us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 42us; 16657us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16656us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16659us; 1us; 32768us; 21us; 419us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 3us; 32768us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 0us; 16660us; 45us; 16661us; 20us; 479us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 476us; 0us; 16662us; 2us; 16662us; 18us; 1061us; 162us; 1060us; 2us; 16662us; 18us; 1061us; 162us; 1060us; 2us; 16662us; 18us; 1061us; 162us; 1060us; 2us; 16662us; 30us; 1059us; 161us; 1058us; 2us; 16662us; 18us; 1061us; 162us; 1060us; 1us; 16662us; 73us; 709us; 1us; 16662us; 73us; 722us; 1us; 16662us; 80us; 748us; 3us; 16662us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 3us; 16662us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 3us; 16662us; 74us; 1079us; 75us; 1076us; 76us; 1078us; 0us; 16663us; 43us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 82us; 437us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 2us; 32768us; 27us; 452us; 121us; 450us; 1us; 16664us; 52us; 436us; 25us; 32768us; 27us; 452us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 121us; 450us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 1us; 16665us; 52us; 436us; 0us; 16666us; 0us; 16667us; 43us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 82us; 444us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 2us; 32768us; 27us; 452us; 121us; 450us; 1us; 16668us; 52us; 436us; 25us; 32768us; 27us; 452us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 121us; 450us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 1us; 16669us; 52us; 436us; 0us; 16670us; 0us; 16671us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 23us; 16672us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 1us; 32768us; 21us; 453us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 5us; 32768us; 10us; 435us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 221us; 423us; 0us; 16673us; 0us; 16674us; 43us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 3us; 32768us; 10us; 435us; 18us; 245us; 221us; 423us; 1us; 16675us; 35us; 457us; 0us; 16676us; 0us; 16677us; 0us; 16678us; 0us; 16679us; 1us; 32768us; 151us; 465us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16680us; 1us; 32768us; 151us; 468us; 43us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 470us; 0us; 16681us; 0us; 16682us; 45us; 32768us; 20us; 477us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 475us; 0us; 16683us; 45us; 32768us; 20us; 479us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 476us; 0us; 16684us; 0us; 16685us; 0us; 16686us; 44us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 481us; 0us; 16687us; 44us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 482us; 0us; 16688us; 0us; 16689us; 0us; 16690us; 0us; 16691us; 43us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 3us; 32768us; 10us; 435us; 18us; 245us; 221us; 423us; 0us; 16692us; 43us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 3us; 32768us; 10us; 435us; 18us; 245us; 221us; 423us; 0us; 16693us; 0us; 16694us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 4us; 32768us; 10us; 435us; 25us; 621us; 102us; 619us; 221us; 423us; 0us; 16695us; 0us; 16696us; 44us; 32768us; 10us; 435us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 423us; 27us; 32768us; 10us; 435us; 28us; 644us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 120us; 643us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 221us; 423us; 0us; 16697us; 0us; 16699us; 0us; 16700us; 44us; 32768us; 10us; 435us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 424us; 27us; 32768us; 10us; 435us; 30us; 1059us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 161us; 1058us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 221us; 423us; 44us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 506us; 4us; 32768us; 10us; 435us; 18us; 1061us; 162us; 1060us; 221us; 423us; 0us; 16701us; 0us; 16702us; 2us; 32768us; 18us; 1061us; 162us; 1060us; 0us; 16703us; 0us; 16704us; 0us; 16705us; 0us; 16706us; 26us; 32768us; 10us; 435us; 15us; 1097us; 43us; 1093us; 45us; 1094us; 48us; 1034us; 60us; 135us; 75us; 1095us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 109us; 1096us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 427us; 10us; 17097us; 10us; 435us; 15us; 1097us; 20us; 1052us; 30us; 1059us; 43us; 1093us; 45us; 1094us; 75us; 1095us; 109us; 1096us; 161us; 1058us; 221us; 423us; 50us; 32768us; 10us; 435us; 15us; 1097us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 43us; 1093us; 45us; 1094us; 52us; 436us; 54us; 443us; 60us; 703us; 75us; 1095us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 109us; 1096us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 425us; 9us; 32768us; 10us; 435us; 15us; 1097us; 18us; 1061us; 43us; 1093us; 45us; 1094us; 75us; 1095us; 109us; 1096us; 162us; 1060us; 221us; 423us; 0us; 16707us; 0us; 16708us; 0us; 16709us; 0us; 16710us; 0us; 16711us; 4us; 32768us; 10us; 435us; 30us; 1059us; 161us; 1058us; 221us; 423us; 45us; 32768us; 10us; 435us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 426us; 4us; 32768us; 10us; 435us; 18us; 1061us; 162us; 1060us; 221us; 423us; 0us; 16712us; 0us; 16713us; 0us; 16714us; 0us; 16715us; 0us; 16716us; 43us; 32768us; 21us; 397us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 2us; 32768us; 18us; 1061us; 162us; 1060us; 0us; 16717us; 0us; 16718us; 0us; 16719us; 0us; 16720us; 1us; 32768us; 113us; 779us; 0us; 16721us; 23us; 16723us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 18us; 16725us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 104us; 578us; 105us; 579us; 111us; 591us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 18us; 16726us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 104us; 578us; 105us; 579us; 111us; 591us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 8us; 16727us; 77us; 590us; 94us; 588us; 111us; 591us; 181us; 587us; 206us; 589us; 208us; 592us; 211us; 586us; 213us; 593us; 18us; 16728us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 104us; 578us; 105us; 579us; 111us; 591us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 16us; 16729us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 111us; 591us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 16us; 16730us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 111us; 591us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 8us; 16731us; 77us; 590us; 94us; 588us; 111us; 591us; 181us; 587us; 206us; 589us; 208us; 592us; 211us; 586us; 213us; 593us; 8us; 16732us; 77us; 590us; 94us; 588us; 111us; 591us; 181us; 587us; 206us; 589us; 208us; 592us; 211us; 586us; 213us; 593us; 8us; 16733us; 77us; 590us; 94us; 588us; 111us; 591us; 181us; 587us; 206us; 589us; 208us; 592us; 211us; 586us; 213us; 593us; 8us; 16734us; 77us; 590us; 94us; 588us; 111us; 591us; 181us; 587us; 206us; 589us; 208us; 592us; 211us; 586us; 213us; 593us; 8us; 16735us; 77us; 590us; 94us; 588us; 111us; 591us; 181us; 587us; 206us; 589us; 208us; 592us; 211us; 586us; 213us; 593us; 8us; 16736us; 77us; 590us; 94us; 588us; 111us; 591us; 181us; 587us; 206us; 589us; 208us; 592us; 211us; 586us; 213us; 593us; 8us; 16737us; 77us; 590us; 94us; 588us; 111us; 591us; 181us; 587us; 206us; 589us; 208us; 592us; 211us; 586us; 213us; 593us; 1us; 16738us; 213us; 593us; 7us; 16739us; 77us; 590us; 94us; 588us; 111us; 591us; 181us; 587us; 206us; 589us; 208us; 592us; 213us; 593us; 4us; 16740us; 111us; 591us; 181us; 587us; 208us; 592us; 213us; 593us; 4us; 16741us; 111us; 591us; 181us; 587us; 208us; 592us; 213us; 593us; 1us; 16742us; 213us; 593us; 1us; 16743us; 213us; 593us; 1us; 16744us; 213us; 593us; 23us; 16781us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 23us; 16786us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 23us; 16790us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 27us; 32768us; 10us; 435us; 28us; 644us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 120us; 643us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 221us; 423us; 21us; 16797us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 104us; 578us; 105us; 579us; 111us; 591us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 21us; 16798us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 104us; 578us; 105us; 579us; 111us; 591us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 23us; 16836us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 23us; 16838us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 24us; 16886us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 167us; 776us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 24us; 16882us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 167us; 777us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 23us; 16883us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 25us; 32768us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 122us; 828us; 152us; 574us; 163us; 829us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 23us; 16897us; 77us; 590us; 78us; 583us; 85us; 581us; 94us; 588us; 95us; 570us; 98us; 572us; 104us; 578us; 105us; 579us; 111us; 591us; 112us; 659us; 118us; 577us; 152us; 574us; 168us; 575us; 181us; 587us; 183us; 584us; 184us; 585us; 206us; 589us; 207us; 580us; 208us; 592us; 210us; 576us; 211us; 586us; 212us; 582us; 213us; 593us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16722us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 16724us; 112us; 658us; 43us; 32768us; 15us; 594us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 595us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 596us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 597us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 598us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 599us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 600us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 601us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 602us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 603us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 604us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 605us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 606us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 607us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 608us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 609us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 610us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 611us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 612us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 43us; 32768us; 15us; 613us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16745us; 0us; 16746us; 0us; 16747us; 0us; 16748us; 0us; 16749us; 0us; 16750us; 0us; 16751us; 0us; 16752us; 0us; 16753us; 0us; 16754us; 0us; 16755us; 0us; 16756us; 0us; 16757us; 0us; 16758us; 0us; 16759us; 0us; 16760us; 0us; 16761us; 0us; 16762us; 0us; 16763us; 0us; 16764us; 0us; 16765us; 0us; 16766us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 3us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 0us; 16767us; 21us; 32768us; 48us; 1034us; 60us; 135us; 72us; 626us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 629us; 0us; 16768us; 21us; 32768us; 48us; 1034us; 60us; 135us; 72us; 626us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 629us; 3us; 32768us; 10us; 435us; 19us; 623us; 221us; 423us; 0us; 16769us; 0us; 16770us; 0us; 16771us; 20us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 628us; 0us; 16772us; 0us; 16773us; 0us; 16774us; 0us; 16775us; 2us; 32768us; 113us; 639us; 221us; 637us; 2us; 16776us; 72us; 633us; 221us; 636us; 20us; 32768us; 48us; 1034us; 60us; 135us; 82us; 350us; 86us; 344us; 87us; 347us; 89us; 341us; 107us; 356us; 115us; 992us; 123us; 354us; 146us; 353us; 171us; 355us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 635us; 0us; 16777us; 0us; 16778us; 0us; 16779us; 0us; 16780us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16783us; 3us; 16789us; 26us; 650us; 164us; 649us; 165us; 655us; 0us; 16785us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 32768us; 21us; 645us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 5us; 32768us; 10us; 435us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 221us; 423us; 0us; 16787us; 0us; 16788us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 32768us; 21us; 651us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 5us; 32768us; 10us; 435us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 221us; 423us; 0us; 16791us; 0us; 16792us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16793us; 0us; 16794us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 26us; 32768us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 143us; 669us; 146us; 733us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 26us; 17041us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 143us; 669us; 146us; 733us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16799us; 26us; 32768us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 143us; 669us; 146us; 733us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 26us; 17037us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 143us; 669us; 146us; 733us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16800us; 26us; 32768us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 143us; 669us; 146us; 733us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 26us; 17053us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 143us; 669us; 146us; 733us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16801us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 885us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 674us; 2us; 17123us; 41us; 1063us; 42us; 1062us; 15us; 32768us; 87us; 744us; 89us; 764us; 107us; 750us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 215us; 4us; 216us; 3us; 221us; 673us; 0us; 16802us; 0us; 16803us; 0us; 16804us; 26us; 32768us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 143us; 669us; 146us; 733us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16805us; 22us; 16806us; 60us; 703us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 177us; 695us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 205us; 681us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 25us; 16806us; 25us; 807us; 60us; 703us; 85us; 794us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 102us; 803us; 107us; 751us; 115us; 992us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 177us; 695us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 205us; 681us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16807us; 5us; 16808us; 40us; 689us; 41us; 688us; 42us; 687us; 90us; 701us; 92us; 693us; 21us; 32768us; 60us; 703us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 177us; 695us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 5us; 16809us; 40us; 689us; 41us; 688us; 42us; 687us; 90us; 701us; 92us; 693us; 5us; 16810us; 40us; 689us; 41us; 688us; 42us; 687us; 90us; 701us; 92us; 693us; 2us; 16811us; 40us; 689us; 41us; 688us; 1us; 16812us; 40us; 689us; 5us; 16814us; 40us; 689us; 41us; 688us; 42us; 687us; 90us; 701us; 92us; 693us; 21us; 32768us; 60us; 703us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 177us; 695us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 21us; 32768us; 60us; 703us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 177us; 695us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 1us; 32768us; 183us; 937us; 0us; 16813us; 21us; 32768us; 60us; 703us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 177us; 695us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 21us; 17031us; 60us; 703us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 107us; 751us; 115us; 992us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 177us; 695us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 7us; 16828us; 10us; 435us; 48us; 713us; 86us; 718us; 107us; 715us; 115us; 992us; 214us; 980us; 221us; 423us; 0us; 16815us; 1us; 32768us; 92us; 696us; 7us; 16828us; 10us; 435us; 48us; 713us; 86us; 718us; 107us; 715us; 115us; 992us; 214us; 980us; 221us; 423us; 0us; 16816us; 3us; 32768us; 107us; 987us; 115us; 992us; 214us; 980us; 3us; 17047us; 107us; 987us; 115us; 992us; 214us; 980us; 0us; 16817us; 2us; 32768us; 107us; 616us; 214us; 615us; 0us; 16818us; 0us; 16819us; 0us; 16820us; 44us; 16879us; 10us; 435us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 429us; 3us; 32768us; 10us; 435us; 73us; 707us; 221us; 423us; 0us; 16821us; 0us; 16822us; 0us; 16823us; 0us; 16824us; 0us; 16825us; 0us; 16826us; 0us; 16827us; 0us; 16829us; 64us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 72us; 1027us; 77us; 661us; 78us; 1007us; 85us; 1011us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 699us; 98us; 1019us; 101us; 500us; 104us; 1016us; 105us; 1017us; 107us; 751us; 111us; 1010us; 115us; 992us; 118us; 1012us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 167us; 1022us; 168us; 1018us; 169us; 675us; 171us; 732us; 177us; 695us; 178us; 1024us; 181us; 667us; 183us; 1013us; 184us; 1014us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 204us; 1020us; 205us; 1008us; 206us; 664us; 207us; 1004us; 208us; 1006us; 209us; 692us; 210us; 1003us; 211us; 1002us; 212us; 1001us; 213us; 1000us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 990us; 3us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 0us; 16830us; 46us; 32768us; 10us; 435us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 111us; 728us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 167us; 727us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 430us; 3us; 32768us; 10us; 435us; 73us; 720us; 221us; 423us; 0us; 16831us; 0us; 16832us; 0us; 16833us; 0us; 16834us; 1us; 32768us; 73us; 725us; 0us; 16835us; 42us; 16837us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16839us; 0us; 16840us; 0us; 16841us; 0us; 16842us; 0us; 16843us; 0us; 16844us; 0us; 16845us; 0us; 16846us; 0us; 16847us; 44us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 166us; 743us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 741us; 3us; 32768us; 10us; 435us; 166us; 739us; 221us; 423us; 0us; 16848us; 0us; 16849us; 1us; 32768us; 166us; 742us; 0us; 16850us; 0us; 16851us; 44us; 16879us; 10us; 435us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 431us; 3us; 32768us; 10us; 435us; 80us; 746us; 221us; 423us; 0us; 16852us; 0us; 16853us; 0us; 16854us; 0us; 16855us; 51us; 32768us; 10us; 435us; 15us; 761us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 43us; 758us; 45us; 759us; 52us; 436us; 54us; 443us; 60us; 703us; 75us; 760us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 432us; 72us; 32768us; 10us; 435us; 15us; 761us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 43us; 758us; 45us; 759us; 52us; 436us; 54us; 443us; 60us; 703us; 72us; 1027us; 75us; 760us; 77us; 661us; 78us; 1007us; 85us; 1011us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 699us; 98us; 1019us; 101us; 500us; 104us; 1016us; 105us; 1017us; 107us; 751us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 111us; 1010us; 115us; 992us; 118us; 1012us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 167us; 1022us; 168us; 1018us; 169us; 675us; 171us; 732us; 177us; 695us; 178us; 1024us; 181us; 667us; 183us; 1013us; 184us; 1014us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 204us; 1020us; 205us; 1008us; 206us; 664us; 207us; 1004us; 208us; 1006us; 209us; 692us; 210us; 1003us; 211us; 1002us; 212us; 1001us; 213us; 1000us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 433us; 0us; 16856us; 9us; 32768us; 10us; 435us; 15us; 1091us; 43us; 1088us; 45us; 1089us; 75us; 1090us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 221us; 423us; 0us; 16857us; 0us; 16858us; 0us; 16859us; 0us; 16859us; 0us; 16860us; 0us; 16861us; 0us; 16862us; 0us; 16863us; 0us; 16864us; 0us; 16865us; 49us; 32768us; 10us; 435us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 68us; 788us; 74us; 1079us; 75us; 1076us; 76us; 1078us; 77us; 660us; 82us; 798us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 434us; 5us; 32768us; 10us; 435us; 74us; 1079us; 75us; 1076us; 76us; 1078us; 221us; 423us; 0us; 16870us; 0us; 16871us; 0us; 16872us; 0us; 16873us; 0us; 16874us; 0us; 16875us; 0us; 16876us; 0us; 16878us; 0us; 16880us; 0us; 16881us; 44us; 32768us; 10us; 435us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 423us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16884us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16885us; 49us; 32768us; 10us; 435us; 15us; 1097us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 43us; 1093us; 45us; 1094us; 52us; 436us; 54us; 443us; 60us; 703us; 75us; 1095us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 109us; 1096us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 423us; 0us; 16887us; 0us; 16888us; 0us; 16889us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 42us; 32768us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16901us; 16us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 885us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 2us; 17123us; 41us; 1063us; 42us; 1062us; 14us; 16900us; 87us; 744us; 89us; 764us; 107us; 750us; 123us; 734us; 146us; 733us; 160us; 737us; 171us; 732us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 215us; 4us; 216us; 3us; 0us; 16919us; 2us; 16911us; 20us; 816us; 99us; 817us; 0us; 16902us; 43us; 32768us; 21us; 402us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16919us; 2us; 16911us; 20us; 816us; 99us; 817us; 0us; 16903us; 1us; 16904us; 85us; 799us; 43us; 16905us; 21us; 402us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 52us; 436us; 54us; 443us; 60us; 703us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16919us; 2us; 16911us; 20us; 816us; 99us; 817us; 0us; 16906us; 4us; 32768us; 48us; 982us; 60us; 981us; 82us; 821us; 214us; 980us; 0us; 16919us; 2us; 16911us; 20us; 816us; 99us; 817us; 0us; 16907us; 6us; 16911us; 20us; 816us; 48us; 982us; 60us; 981us; 82us; 821us; 99us; 817us; 214us; 980us; 1us; 32768us; 19us; 809us; 0us; 16908us; 0us; 16919us; 2us; 16911us; 20us; 816us; 99us; 817us; 1us; 32768us; 19us; 813us; 0us; 16909us; 0us; 16910us; 4us; 16910us; 48us; 982us; 60us; 981us; 82us; 821us; 214us; 980us; 1us; 16912us; 99us; 819us; 1us; 16913us; 20us; 818us; 0us; 16914us; 0us; 16915us; 1us; 16916us; 92us; 984us; 0us; 16917us; 0us; 16918us; 8us; 16923us; 10us; 435us; 15us; 1097us; 43us; 1093us; 45us; 1094us; 75us; 1095us; 85us; 824us; 109us; 1096us; 221us; 423us; 50us; 16921us; 10us; 435us; 15us; 1097us; 21us; 402us; 23us; 292us; 30us; 242us; 33us; 487us; 35us; 457us; 36us; 484us; 38us; 238us; 39us; 234us; 43us; 1093us; 45us; 1094us; 52us; 436us; 54us; 443us; 60us; 703us; 75us; 1095us; 77us; 660us; 86us; 705us; 87us; 744us; 89us; 764us; 90us; 698us; 101us; 500us; 107us; 751us; 109us; 1096us; 115us; 992us; 123us; 734us; 140us; 491us; 143us; 669us; 146us; 733us; 147us; 511us; 148us; 287us; 150us; 495us; 160us; 737us; 169us; 675us; 171us; 732us; 177us; 695us; 181us; 666us; 185us; 226us; 187us; 229us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 206us; 663us; 209us; 691us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 423us; 0us; 16920us; 0us; 16922us; 0us; 16924us; 0us; 16925us; 0us; 16926us; 0us; 16927us; 0us; 16928us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 90us; 846us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16930us; 1us; 16932us; 113us; 835us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 90us; 846us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16931us; 1us; 16934us; 111us; 838us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 90us; 846us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16933us; 1us; 16936us; 111us; 841us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 90us; 846us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16935us; 6us; 16939us; 42us; 879us; 48us; 982us; 60us; 981us; 86us; 894us; 93us; 844us; 214us; 980us; 16us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 5us; 16937us; 42us; 879us; 48us; 982us; 60us; 981us; 86us; 894us; 214us; 980us; 1us; 32768us; 214us; 980us; 1us; 32768us; 93us; 848us; 16us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 5us; 16938us; 42us; 879us; 48us; 982us; 60us; 981us; 86us; 894us; 214us; 980us; 1us; 16944us; 113us; 851us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16943us; 7us; 16948us; 42us; 879us; 48us; 982us; 60us; 981us; 86us; 894us; 111us; 854us; 208us; 858us; 214us; 980us; 16us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16945us; 16us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16946us; 16us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16947us; 7us; 16951us; 42us; 879us; 48us; 982us; 60us; 981us; 86us; 894us; 111us; 861us; 208us; 863us; 214us; 980us; 16us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16949us; 16us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16950us; 6us; 16953us; 42us; 879us; 48us; 982us; 60us; 981us; 86us; 894us; 111us; 866us; 214us; 980us; 16us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16952us; 1us; 16954us; 92us; 984us; 1us; 16956us; 211us; 871us; 4us; 16956us; 40us; 935us; 92us; 932us; 183us; 937us; 211us; 871us; 1us; 32768us; 200us; 872us; 0us; 16955us; 16us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 214us; 980us; 215us; 4us; 216us; 3us; 6us; 32768us; 42us; 879us; 48us; 982us; 60us; 981us; 73us; 875us; 86us; 894us; 214us; 980us; 0us; 16957us; 5us; 32768us; 42us; 880us; 48us; 982us; 60us; 981us; 86us; 894us; 214us; 980us; 0us; 16958us; 22us; 16958us; 10us; 16973us; 20us; 16973us; 41us; 16973us; 74us; 16973us; 75us; 16973us; 76us; 16973us; 87us; 16973us; 89us; 16973us; 99us; 16973us; 107us; 16973us; 123us; 16973us; 146us; 16973us; 160us; 16973us; 171us; 16973us; 190us; 16973us; 191us; 16973us; 192us; 16973us; 198us; 16973us; 200us; 16973us; 215us; 16973us; 216us; 16973us; 221us; 16973us; 1us; 32768us; 86us; 894us; 1us; 32768us; 86us; 894us; 0us; 16959us; 22us; 16959us; 10us; 16974us; 20us; 16974us; 41us; 16974us; 74us; 16974us; 75us; 16974us; 76us; 16974us; 87us; 16974us; 89us; 16974us; 99us; 16974us; 107us; 16974us; 123us; 16974us; 146us; 16974us; 160us; 16974us; 171us; 16974us; 190us; 16974us; 191us; 16974us; 192us; 16974us; 198us; 16974us; 200us; 16974us; 215us; 16974us; 216us; 16974us; 221us; 16974us; 0us; 16960us; 22us; 16960us; 10us; 16975us; 20us; 16975us; 41us; 16975us; 74us; 16975us; 75us; 16975us; 76us; 16975us; 87us; 16975us; 89us; 16975us; 99us; 16975us; 107us; 16975us; 123us; 16975us; 146us; 16975us; 160us; 16975us; 171us; 16975us; 190us; 16975us; 191us; 16975us; 192us; 16975us; 198us; 16975us; 200us; 16975us; 215us; 16975us; 216us; 16975us; 221us; 16975us; 18us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 929us; 18us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 929us; 3us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 3us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 3us; 32768us; 48us; 982us; 60us; 981us; 214us; 980us; 3us; 32768us; 48us; 982us; 60us; 981us; 214us; 980us; 0us; 16961us; 22us; 16961us; 10us; 16976us; 20us; 16976us; 41us; 16976us; 74us; 16976us; 75us; 16976us; 76us; 16976us; 87us; 16976us; 89us; 16976us; 99us; 16976us; 107us; 16976us; 123us; 16976us; 146us; 16976us; 160us; 16976us; 171us; 16976us; 190us; 16976us; 191us; 16976us; 192us; 16976us; 198us; 16976us; 200us; 16976us; 215us; 16976us; 216us; 16976us; 221us; 16976us; 0us; 16962us; 2us; 32768us; 73us; 895us; 112us; 896us; 0us; 16963us; 2us; 32768us; 73us; 897us; 112us; 898us; 0us; 16964us; 2us; 32768us; 73us; 899us; 112us; 900us; 0us; 16965us; 1us; 32768us; 73us; 901us; 0us; 16966us; 1us; 32768us; 112us; 903us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16969us; 1us; 16967us; 112us; 907us; 4us; 32768us; 10us; 435us; 112us; 907us; 184us; 941us; 221us; 423us; 17us; 32768us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 0us; 16968us; 1us; 16970us; 211us; 911us; 23us; 16970us; 10us; 16978us; 20us; 16978us; 41us; 16978us; 74us; 16978us; 75us; 16978us; 76us; 16978us; 87us; 16978us; 89us; 16978us; 99us; 16978us; 107us; 16978us; 123us; 16978us; 146us; 16978us; 160us; 16978us; 171us; 16978us; 190us; 16978us; 191us; 16978us; 192us; 16978us; 198us; 16978us; 200us; 16978us; 211us; 912us; 215us; 16978us; 216us; 16978us; 221us; 16978us; 2us; 32768us; 77us; 915us; 200us; 913us; 2us; 32768us; 77us; 916us; 200us; 914us; 0us; 16971us; 22us; 16971us; 10us; 16979us; 20us; 16979us; 41us; 16979us; 74us; 16979us; 75us; 16979us; 76us; 16979us; 87us; 16979us; 89us; 16979us; 99us; 16979us; 107us; 16979us; 123us; 16979us; 146us; 16979us; 160us; 16979us; 171us; 16979us; 190us; 16979us; 191us; 16979us; 192us; 16979us; 198us; 16979us; 200us; 16979us; 215us; 16979us; 216us; 16979us; 221us; 16979us; 1us; 32768us; 200us; 917us; 1us; 32768us; 200us; 918us; 0us; 16972us; 22us; 16972us; 10us; 16980us; 20us; 16980us; 41us; 16980us; 74us; 16980us; 75us; 16980us; 76us; 16980us; 87us; 16980us; 89us; 16980us; 99us; 16980us; 107us; 16980us; 123us; 16980us; 146us; 16980us; 160us; 16980us; 171us; 16980us; 190us; 16980us; 191us; 16980us; 192us; 16980us; 198us; 16980us; 200us; 16980us; 215us; 16980us; 216us; 16980us; 221us; 16980us; 0us; 16977us; 0us; 16981us; 0us; 16982us; 5us; 17001us; 10us; 435us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 221us; 423us; 0us; 16983us; 0us; 16984us; 0us; 16985us; 0us; 16986us; 0us; 16987us; 0us; 16988us; 3us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 0us; 16989us; 0us; 16990us; 7us; 32768us; 10us; 435us; 15us; 1097us; 43us; 1093us; 45us; 1094us; 75us; 1095us; 109us; 1096us; 221us; 423us; 0us; 16991us; 0us; 16992us; 1us; 32768us; 183us; 937us; 0us; 16993us; 20us; 32768us; 10us; 435us; 48us; 982us; 60us; 981us; 82us; 921us; 86us; 873us; 107us; 886us; 123us; 928us; 146us; 927us; 171us; 926us; 184us; 947us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 423us; 1us; 32768us; 112us; 939us; 24us; 32768us; 10us; 435us; 15us; 1097us; 43us; 1093us; 45us; 1094us; 48us; 982us; 60us; 981us; 75us; 1095us; 82us; 921us; 86us; 873us; 107us; 886us; 109us; 1096us; 123us; 928us; 146us; 927us; 171us; 926us; 190us; 285us; 191us; 284us; 192us; 283us; 198us; 281us; 200us; 282us; 208us; 856us; 214us; 980us; 215us; 4us; 216us; 3us; 221us; 423us; 0us; 16969us; 0us; 16994us; 0us; 16995us; 0us; 16996us; 3us; 17002us; 10us; 435us; 184us; 945us; 221us; 423us; 0us; 16997us; 0us; 16998us; 0us; 16999us; 0us; 17000us; 0us; 17001us; 0us; 17002us; 7us; 32768us; 48us; 982us; 60us; 981us; 82us; 954us; 107us; 957us; 200us; 965us; 208us; 974us; 214us; 980us; 3us; 32768us; 111us; 972us; 184us; 953us; 208us; 973us; 0us; 17003us; 1us; 32768us; 184us; 955us; 0us; 17004us; 1us; 17005us; 92us; 984us; 6us; 32768us; 48us; 982us; 60us; 981us; 107us; 957us; 200us; 965us; 208us; 974us; 214us; 980us; 5us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 111us; 972us; 208us; 973us; 0us; 17006us; 1us; 17007us; 211us; 961us; 2us; 32768us; 77us; 963us; 200us; 962us; 0us; 17008us; 1us; 32768us; 200us; 964us; 0us; 17009us; 0us; 17010us; 5us; 17011us; 48us; 982us; 60us; 981us; 107us; 957us; 200us; 965us; 214us; 980us; 0us; 17012us; 0us; 17013us; 0us; 17014us; 0us; 17015us; 0us; 17016us; 6us; 32768us; 48us; 982us; 60us; 981us; 107us; 957us; 200us; 965us; 208us; 974us; 214us; 980us; 6us; 32768us; 48us; 982us; 60us; 981us; 107us; 957us; 200us; 965us; 208us; 974us; 214us; 980us; 6us; 32768us; 48us; 982us; 60us; 981us; 107us; 957us; 200us; 965us; 208us; 974us; 214us; 980us; 1us; 32768us; 214us; 980us; 0us; 17017us; 0us; 17018us; 1us; 32768us; 214us; 980us; 0us; 17019us; 0us; 17020us; 0us; 17021us; 0us; 17022us; 0us; 17023us; 8us; 32768us; 10us; 435us; 15us; 1097us; 43us; 1093us; 45us; 1094us; 75us; 1095us; 109us; 1096us; 214us; 980us; 221us; 423us; 0us; 17024us; 0us; 17025us; 27us; 32768us; 72us; 1027us; 77us; 1009us; 78us; 1007us; 85us; 1011us; 90us; 1015us; 98us; 1019us; 104us; 1016us; 105us; 1017us; 111us; 1010us; 118us; 1012us; 167us; 1022us; 168us; 1018us; 178us; 1024us; 181us; 1021us; 183us; 1013us; 184us; 1014us; 204us; 1020us; 205us; 1008us; 206us; 1005us; 207us; 1004us; 208us; 1006us; 209us; 999us; 210us; 1003us; 211us; 1002us; 212us; 1001us; 213us; 1000us; 221us; 990us; 3us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 0us; 17026us; 3us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 0us; 17027us; 0us; 17028us; 1us; 32768us; 72us; 994us; 5us; 32768us; 82us; 996us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 214us; 1026us; 0us; 17029us; 1us; 32768us; 72us; 997us; 3us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 0us; 17030us; 0us; 17031us; 0us; 17032us; 0us; 17033us; 0us; 17034us; 0us; 17035us; 0us; 17036us; 0us; 17037us; 0us; 17038us; 0us; 17039us; 0us; 17040us; 0us; 17041us; 0us; 17042us; 0us; 17043us; 0us; 17044us; 0us; 17045us; 0us; 17046us; 0us; 17047us; 0us; 17048us; 0us; 17049us; 0us; 17050us; 0us; 17051us; 0us; 17052us; 0us; 17053us; 1us; 17054us; 167us; 1023us; 0us; 17055us; 1us; 32768us; 179us; 1025us; 0us; 17056us; 0us; 17057us; 1us; 32768us; 214us; 1026us; 0us; 17058us; 0us; 17059us; 0us; 17060us; 0us; 17061us; 1us; 17062us; 92us; 1035us; 0us; 17063us; 0us; 17064us; 5us; 32768us; 48us; 1034us; 107us; 987us; 115us; 992us; 214us; 980us; 221us; 1037us; 0us; 17065us; 0us; 17066us; 0us; 17067us; 0us; 17068us; 0us; 17069us; 0us; 17070us; 3us; 17071us; 20us; 1041us; 83us; 1040us; 99us; 1039us; 0us; 17072us; 1us; 17081us; 99us; 1046us; 1us; 17082us; 20us; 1047us; 0us; 17083us; 0us; 17084us; 0us; 17085us; 0us; 17086us; 0us; 17087us; 0us; 17092us; 0us; 17096us; 0us; 17098us; 0us; 17100us; 0us; 17104us; 0us; 17106us; 0us; 17108us; 0us; 17110us; 0us; 17111us; 0us; 17112us; 0us; 17113us; 0us; 17121us; 0us; 17122us; 5us; 32768us; 43us; 1064us; 44us; 1067us; 125us; 1068us; 131us; 1069us; 137us; 1070us; 5us; 17148us; 43us; 1064us; 44us; 1067us; 125us; 1068us; 131us; 1069us; 137us; 1070us; 0us; 17126us; 0us; 17127us; 0us; 17128us; 0us; 17129us; 0us; 17130us; 3us; 32768us; 45us; 1071us; 46us; 1074us; 173us; 1075us; 3us; 17149us; 45us; 1071us; 46us; 1074us; 173us; 1075us; 0us; 17131us; 0us; 17132us; 0us; 17133us; 3us; 32768us; 74us; 1079us; 75us; 1076us; 76us; 1078us; 0us; 17134us; 0us; 17135us; 0us; 17136us; 3us; 32768us; 108us; 1083us; 109us; 1080us; 110us; 1082us; 0us; 17137us; 0us; 17138us; 0us; 17139us; 3us; 32768us; 14us; 1087us; 15us; 1084us; 16us; 1086us; 0us; 17140us; 0us; 17141us; 0us; 17142us; 0us; 17143us; 0us; 17144us; 0us; 17145us; 0us; 17146us; 0us; 17147us; 0us; 17148us; 0us; 17149us; 0us; 17150us; 0us; 17151us; 0us; 17152us; 0us; 17153us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 17us; 18us; 19us; 20us; 21us; 25us; 27us; 41us; 42us; 44us; 45us; 48us; 49us; 51us; 52us; 53us; 68us; 69us; 81us; 87us; 89us; 90us; 91us; 107us; 108us; 109us; 110us; 111us; 126us; 127us; 139us; 140us; 153us; 154us; 164us; 165us; 166us; 167us; 169us; 170us; 187us; 190us; 199us; 201us; 202us; 204us; 206us; 207us; 208us; 209us; 210us; 222us; 223us; 227us; 242us; 243us; 248us; 252us; 267us; 268us; 272us; 277us; 280us; 295us; 296us; 298us; 299us; 301us; 302us; 304us; 305us; 308us; 309us; 310us; 314us; 316us; 317us; 321us; 323us; 324us; 329us; 331us; 332us; 333us; 334us; 335us; 336us; 337us; 341us; 343us; 344us; 346us; 348us; 349us; 350us; 352us; 354us; 358us; 360us; 361us; 363us; 365us; 369us; 371us; 372us; 373us; 374us; 379us; 385us; 386us; 387us; 388us; 389us; 394us; 395us; 398us; 403us; 404us; 424us; 426us; 428us; 472us; 473us; 494us; 496us; 498us; 542us; 543us; 545us; 589us; 590us; 594us; 596us; 598us; 599us; 601us; 606us; 607us; 608us; 614us; 618us; 619us; 624us; 625us; 626us; 631us; 637us; 638us; 639us; 647us; 652us; 653us; 671us; 672us; 674us; 676us; 720us; 721us; 724us; 726us; 728us; 729us; 731us; 733us; 734us; 736us; 737us; 738us; 758us; 760us; 761us; 763us; 764us; 765us; 767us; 769us; 770us; 773us; 779us; 780us; 781us; 785us; 786us; 788us; 789us; 793us; 794us; 799us; 803us; 804us; 808us; 809us; 827us; 829us; 830us; 848us; 850us; 851us; 852us; 882us; 886us; 887us; 889us; 893us; 894us; 897us; 898us; 899us; 917us; 918us; 919us; 926us; 943us; 944us; 947us; 950us; 951us; 952us; 953us; 955us; 957us; 975us; 976us; 978us; 979us; 980us; 982us; 985us; 986us; 988us; 991us; 992us; 1036us; 1037us; 1039us; 1042us; 1046us; 1047us; 1049us; 1052us; 1056us; 1057us; 1101us; 1105us; 1106us; 1107us; 1108us; 1110us; 1111us; 1114us; 1116us; 1117us; 1118us; 1119us; 1121us; 1141us; 1143us; 1147us; 1192us; 1193us; 1194us; 1195us; 1238us; 1244us; 1245us; 1246us; 1247us; 1248us; 1250us; 1251us; 1254us; 1257us; 1301us; 1302us; 1305us; 1306us; 1307us; 1310us; 1328us; 1329us; 1330us; 1331us; 1332us; 1333us; 1334us; 1335us; 1336us; 1356us; 1358us; 1403us; 1404us; 1405us; 1426us; 1429us; 1475us; 1479us; 1480us; 1481us; 1483us; 1484us; 1485us; 1487us; 1488us; 1490us; 1491us; 1493us; 1495us; 1496us; 1502us; 1508us; 1512us; 1514us; 1517us; 1520us; 1522us; 1524us; 1526us; 1527us; 1547us; 1567us; 1569us; 1570us; 1571us; 1591us; 1611us; 1631us; 1651us; 1677us; 1699us; 1700us; 1720us; 1721us; 1741us; 1742us; 1743us; 1765us; 1766us; 1786us; 1787us; 1807us; 1808us; 1812us; 1816us; 1817us; 1837us; 1839us; 1840us; 1860us; 1862us; 1863us; 1864us; 1865us; 1866us; 1867us; 1868us; 1869us; 1917us; 1923us; 1924us; 1925us; 1929us; 1930us; 1931us; 1938us; 1943us; 1946us; 1950us; 1954us; 1957us; 1960us; 1967us; 1976us; 1992us; 2000us; 2002us; 2003us; 2023us; 2025us; 2027us; 2045us; 2046us; 2066us; 2067us; 2087us; 2107us; 2127us; 2147us; 2148us; 2151us; 2152us; 2156us; 2157us; 2160us; 2180us; 2181us; 2201us; 2202us; 2245us; 2251us; 2252us; 2253us; 2254us; 2297us; 2301us; 2302us; 2326us; 2328us; 2329us; 2331us; 2349us; 2350us; 2378us; 2407us; 2436us; 2479us; 2480us; 2523us; 2524us; 2526us; 2569us; 2573us; 2574us; 2620us; 2621us; 2624us; 2627us; 2630us; 2633us; 2636us; 2638us; 2640us; 2642us; 2646us; 2650us; 2654us; 2655us; 2699us; 2702us; 2704us; 2730us; 2732us; 2733us; 2734us; 2778us; 2781us; 2783us; 2809us; 2811us; 2812us; 2813us; 2856us; 2880us; 2882us; 2925us; 2931us; 2932us; 2933us; 2977us; 2981us; 2983us; 2984us; 2985us; 2986us; 2987us; 2989us; 3032us; 3033us; 3035us; 3079us; 3080us; 3081us; 3127us; 3128us; 3174us; 3175us; 3176us; 3177us; 3222us; 3223us; 3268us; 3269us; 3270us; 3271us; 3272us; 3316us; 3320us; 3321us; 3365us; 3369us; 3370us; 3371us; 3414us; 3419us; 3420us; 3421us; 3466us; 3494us; 3495us; 3496us; 3497us; 3542us; 3570us; 3615us; 3620us; 3621us; 3622us; 3625us; 3626us; 3627us; 3628us; 3629us; 3656us; 3667us; 3718us; 3728us; 3729us; 3730us; 3731us; 3732us; 3733us; 3738us; 3784us; 3789us; 3790us; 3791us; 3792us; 3793us; 3794us; 3838us; 3841us; 3842us; 3843us; 3844us; 3845us; 3847us; 3848us; 3872us; 3891us; 3910us; 3919us; 3938us; 3955us; 3972us; 3981us; 3990us; 3999us; 4008us; 4017us; 4026us; 4035us; 4037us; 4045us; 4050us; 4055us; 4057us; 4059us; 4061us; 4085us; 4109us; 4133us; 4161us; 4183us; 4205us; 4229us; 4253us; 4278us; 4303us; 4327us; 4353us; 4377us; 4395us; 4396us; 4439us; 4441us; 4485us; 4529us; 4573us; 4617us; 4661us; 4705us; 4749us; 4793us; 4837us; 4881us; 4925us; 4969us; 5013us; 5057us; 5101us; 5145us; 5189us; 5233us; 5277us; 5321us; 5322us; 5323us; 5324us; 5325us; 5326us; 5327us; 5328us; 5329us; 5330us; 5331us; 5332us; 5333us; 5334us; 5335us; 5336us; 5337us; 5338us; 5339us; 5340us; 5341us; 5342us; 5343us; 5386us; 5390us; 5391us; 5413us; 5414us; 5436us; 5440us; 5441us; 5442us; 5443us; 5464us; 5465us; 5466us; 5467us; 5468us; 5471us; 5474us; 5495us; 5496us; 5497us; 5498us; 5499us; 5542us; 5585us; 5586us; 5590us; 5591us; 5634us; 5636us; 5679us; 5685us; 5686us; 5687us; 5730us; 5732us; 5775us; 5781us; 5782us; 5783us; 5826us; 5827us; 5828us; 5871us; 5914us; 5941us; 5968us; 5969us; 5996us; 6023us; 6024us; 6051us; 6078us; 6079us; 6097us; 6100us; 6116us; 6117us; 6118us; 6119us; 6146us; 6147us; 6170us; 6196us; 6197us; 6203us; 6225us; 6231us; 6237us; 6240us; 6242us; 6248us; 6270us; 6292us; 6294us; 6295us; 6317us; 6339us; 6347us; 6348us; 6350us; 6358us; 6359us; 6363us; 6367us; 6368us; 6371us; 6372us; 6373us; 6374us; 6419us; 6423us; 6424us; 6425us; 6426us; 6427us; 6428us; 6429us; 6430us; 6431us; 6496us; 6500us; 6501us; 6548us; 6552us; 6553us; 6554us; 6555us; 6556us; 6558us; 6559us; 6602us; 6645us; 6646us; 6647us; 6648us; 6649us; 6650us; 6651us; 6652us; 6653us; 6654us; 6699us; 6703us; 6704us; 6705us; 6707us; 6708us; 6709us; 6754us; 6758us; 6759us; 6760us; 6761us; 6762us; 6814us; 6887us; 6888us; 6898us; 6899us; 6900us; 6901us; 6902us; 6903us; 6904us; 6905us; 6906us; 6907us; 6908us; 6958us; 6964us; 6965us; 6966us; 6967us; 6968us; 6969us; 6970us; 6971us; 6972us; 6973us; 6974us; 7019us; 7062us; 7063us; 7106us; 7107us; 7157us; 7158us; 7159us; 7160us; 7203us; 7246us; 7247us; 7264us; 7267us; 7282us; 7283us; 7286us; 7287us; 7331us; 7332us; 7335us; 7336us; 7338us; 7382us; 7383us; 7386us; 7387us; 7392us; 7393us; 7396us; 7397us; 7404us; 7406us; 7407us; 7408us; 7411us; 7413us; 7414us; 7415us; 7420us; 7422us; 7424us; 7425us; 7426us; 7428us; 7429us; 7430us; 7439us; 7490us; 7491us; 7492us; 7493us; 7494us; 7495us; 7496us; 7497us; 7515us; 7516us; 7518us; 7536us; 7537us; 7539us; 7557us; 7558us; 7560us; 7578us; 7579us; 7586us; 7603us; 7609us; 7611us; 7613us; 7630us; 7636us; 7638us; 7656us; 7657us; 7665us; 7682us; 7683us; 7700us; 7701us; 7718us; 7719us; 7727us; 7744us; 7745us; 7762us; 7763us; 7770us; 7787us; 7788us; 7790us; 7792us; 7797us; 7799us; 7800us; 7817us; 7824us; 7825us; 7831us; 7832us; 7855us; 7857us; 7859us; 7860us; 7883us; 7884us; 7907us; 7926us; 7945us; 7949us; 7953us; 7957us; 7961us; 7962us; 7985us; 7986us; 7989us; 7990us; 7993us; 7994us; 7997us; 7998us; 8000us; 8001us; 8003us; 8021us; 8022us; 8024us; 8029us; 8047us; 8048us; 8050us; 8074us; 8077us; 8080us; 8081us; 8104us; 8106us; 8108us; 8109us; 8132us; 8133us; 8134us; 8135us; 8141us; 8142us; 8143us; 8144us; 8145us; 8146us; 8147us; 8151us; 8152us; 8153us; 8161us; 8162us; 8163us; 8165us; 8166us; 8187us; 8189us; 8214us; 8215us; 8216us; 8217us; 8218us; 8222us; 8223us; 8224us; 8225us; 8226us; 8227us; 8228us; 8236us; 8240us; 8241us; 8243us; 8244us; 8246us; 8253us; 8259us; 8260us; 8262us; 8265us; 8266us; 8268us; 8269us; 8270us; 8276us; 8277us; 8278us; 8279us; 8280us; 8281us; 8288us; 8295us; 8302us; 8304us; 8305us; 8306us; 8308us; 8309us; 8310us; 8311us; 8312us; 8313us; 8322us; 8323us; 8324us; 8352us; 8356us; 8357us; 8361us; 8362us; 8363us; 8365us; 8371us; 8372us; 8374us; 8378us; 8379us; 8380us; 8381us; 8382us; 8383us; 8384us; 8385us; 8386us; 8387us; 8388us; 8389us; 8390us; 8391us; 8392us; 8393us; 8394us; 8395us; 8396us; 8397us; 8398us; 8399us; 8400us; 8401us; 8402us; 8404us; 8405us; 8407us; 8408us; 8409us; 8411us; 8412us; 8413us; 8414us; 8415us; 8417us; 8418us; 8419us; 8425us; 8426us; 8427us; 8428us; 8429us; 8430us; 8431us; 8435us; 8436us; 8438us; 8440us; 8441us; 8442us; 8443us; 8444us; 8445us; 8446us; 8447us; 8448us; 8449us; 8450us; 8451us; 8452us; 8453us; 8454us; 8455us; 8456us; 8457us; 8458us; 8464us; 8470us; 8471us; 8472us; 8473us; 8474us; 8475us; 8479us; 8483us; 8484us; 8485us; 8486us; 8490us; 8491us; 8492us; 8493us; 8497us; 8498us; 8499us; 8500us; 8504us; 8505us; 8506us; 8507us; 8508us; 8509us; 8510us; 8511us; 8512us; 8513us; 8514us; 8515us; 8516us; 8517us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 4us; 4us; 1us; 2us; 4us; 3us; 3us; 1us; 1us; 0us; 1us; 2us; 3us; 2us; 1us; 2us; 3us; 1us; 1us; 0us; 1us; 2us; 5us; 4us; 4us; 2us; 1us; 3us; 3us; 4us; 6us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 0us; 3us; 0us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 2us; 0us; 2us; 3us; 3us; 1us; 3us; 1us; 3us; 0us; 3us; 6us; 6us; 1us; 1us; 3us; 3us; 1us; 1us; 2us; 0us; 3us; 5us; 5us; 4us; 1us; 2us; 4us; 0us; 2us; 3us; 1us; 0us; 3us; 0us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 1us; 1us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 4us; 4us; 4us; 4us; 2us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 2us; 1us; 2us; 4us; 4us; 1us; 3us; 4us; 2us; 2us; 3us; 1us; 3us; 1us; 3us; 2us; 1us; 4us; 2us; 2us; 3us; 3us; 2us; 4us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 0us; 1us; 1us; 6us; 6us; 5us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 5us; 5us; 5us; 4us; 4us; 3us; 1us; 3us; 1us; 1us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 4us; 4us; 1us; 0us; 2us; 3us; 3us; 1us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 3us; 3us; 4us; 4us; 3us; 3us; 4us; 4us; 2us; 4us; 4us; 3us; 4us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 2us; 5us; 5us; 5us; 3us; 2us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 2us; 4us; 3us; 4us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 3us; 2us; 2us; 0us; 2us; 1us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 4us; 4us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 1us; 1us; 0us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 0us; 1us; 1us; 3us; 5us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 1us; 3us; 5us; 2us; 0us; 0us; 1us; 6us; 5us; 1us; 2us; 5us; 5us; 4us; 6us; 1us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 4us; 1us; 3us; 4us; 1us; 3us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 3us; 1us; 1us; 3us; 1us; 3us; 2us; 3us; 2us; 4us; 1us; 2us; 3us; 4us; 5us; 4us; 3us; 0us; 1us; 3us; 4us; 2us; 3us; 2us; 4us; 1us; 1us; 3us; 4us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 3us; 2us; 3us; 1us; 2us; 6us; 6us; 4us; 3us; 3us; 2us; 2us; 1us; 1us; 3us; 3us; 1us; 3us; 1us; 3us; 4us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 2us; 2us; 0us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 8us; 8us; 8us; 8us; 8us; 8us; 9us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 19us; 20us; 21us; 22us; 22us; 22us; 23us; 23us; 23us; 24us; 24us; 24us; 25us; 25us; 25us; 25us; 26us; 26us; 27us; 28us; 28us; 29us; 30us; 30us; 31us; 32us; 33us; 33us; 33us; 34us; 34us; 34us; 35us; 36us; 37us; 38us; 39us; 39us; 40us; 41us; 41us; 42us; 42us; 43us; 44us; 44us; 45us; 45us; 46us; 47us; 47us; 48us; 48us; 49us; 49us; 50us; 51us; 52us; 52us; 53us; 53us; 54us; 55us; 56us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 58us; 58us; 58us; 59us; 59us; 60us; 61us; 61us; 62us; 62us; 62us; 63us; 63us; 64us; 64us; 64us; 65us; 65us; 65us; 66us; 66us; 67us; 68us; 68us; 68us; 69us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 78us; 79us; 80us; 80us; 80us; 80us; 81us; 81us; 82us; 83us; 83us; 84us; 84us; 85us; 85us; 85us; 86us; 86us; 86us; 87us; 88us; 88us; 89us; 90us; 90us; 91us; 91us; 92us; 92us; 92us; 92us; 92us; 92us; 93us; 93us; 93us; 93us; 93us; 93us; 93us; 93us; 94us; 94us; 95us; 96us; 97us; 97us; 97us; 97us; 97us; 97us; 98us; 98us; 99us; 99us; 100us; 100us; 100us; 100us; 101us; 102us; 102us; 102us; 102us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 104us; 104us; 105us; 105us; 105us; 105us; 105us; 105us; 105us; 106us; 106us; 107us; 107us; 108us; 109us; 109us; 110us; 111us; 111us; 111us; 112us; 113us; 113us; 113us; 114us; 114us; 115us; 115us; 116us; 116us; 117us; 117us; 117us; 117us; 117us; 117us; 118us; 118us; 119us; 119us; 119us; 119us; 120us; 120us; 120us; 120us; 121us; 121us; 121us; 122us; 122us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 124us; 124us; 125us; 125us; 125us; 126us; 126us; 126us; 126us; 127us; 128us; 128us; 128us; 128us; 128us; 129us; 129us; 130us; 131us; 132us; 133us; 133us; 133us; 134us; 134us; 134us; 134us; 134us; 134us; 135us; 135us; 136us; 136us; 137us; 137us; 137us; 137us; 137us; 137us; 137us; 137us; 138us; 138us; 139us; 139us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 141us; 141us; 141us; 141us; 141us; 141us; 141us; 141us; 141us; 141us; 142us; 142us; 142us; 142us; 143us; 143us; 143us; 143us; 143us; 143us; 143us; 143us; 144us; 144us; 144us; 144us; 145us; 145us; 145us; 145us; 146us; 146us; 146us; 146us; 146us; 146us; 146us; 146us; 146us; 147us; 148us; 148us; 149us; 149us; 150us; 150us; 150us; 150us; 150us; 151us; 151us; 152us; 153us; 153us; 154us; 154us; 155us; 155us; 155us; 156us; 157us; 157us; 157us; 157us; 158us; 158us; 158us; 158us; 159us; 159us; 159us; 160us; 161us; 161us; 162us; 162us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 164us; 164us; 165us; 165us; 165us; 165us; 166us; 166us; 167us; 167us; 168us; 168us; 168us; 168us; 168us; 169us; 169us; 170us; 171us; 172us; 172us; 173us; 173us; 174us; 174us; 175us; 175us; 176us; 176us; 176us; 176us; 176us; 176us; 177us; 177us; 178us; 178us; 178us; 178us; 179us; 179us; 179us; 180us; 180us; 181us; 182us; 182us; 183us; 183us; 183us; 183us; 183us; 183us; 184us; 184us; 184us; 184us; 185us; 186us; 186us; 187us; 187us; 187us; 188us; 188us; 188us; 188us; 188us; 189us; 189us; 189us; 190us; 190us; 190us; 190us; 190us; 190us; 190us; 190us; 190us; 190us; 190us; 191us; 191us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 193us; 194us; 195us; 195us; 196us; 196us; 197us; 197us; 197us; 197us; 198us; 198us; 199us; 199us; 199us; 199us; 200us; 200us; 201us; 202us; 203us; 203us; 203us; 203us; 203us; 204us; 204us; 204us; 204us; 204us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 206us; 207us; 207us; 208us; 208us; 209us; 209us; 209us; 209us; 209us; 210us; 211us; 211us; 211us; 212us; 212us; 213us; 213us; 214us; 214us; 215us; 215us; 216us; 216us; 217us; 217us; 217us; 217us; 218us; 218us; 218us; 219us; 219us; 219us; 219us; 220us; 220us; 221us; 221us; 222us; 222us; 223us; 223us; 224us; 224us; 225us; 225us; 226us; 226us; 227us; 227us; 228us; 228us; 229us; 229us; 230us; 230us; 231us; 231us; 232us; 232us; 233us; 233us; 234us; 235us; 235us; 235us; 236us; 236us; 237us; 237us; 237us; 237us; 237us; 238us; 238us; 238us; 239us; 239us; 239us; 240us; 240us; 240us; 241us; 241us; 241us; 242us; 242us; 242us; 242us; 242us; 243us; 243us; 243us; 243us; 243us; 243us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 16386us; 16387us; 65535us; 65535us; 65535us; 16389us; 65535us; 16390us; 65535us; 16391us; 65535us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 16396us; 16397us; 65535us; 16398us; 16399us; 16400us; 16402us; 65535us; 16403us; 65535us; 16404us; 65535us; 16405us; 65535us; 16408us; 16409us; 16410us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 16415us; 16416us; 16417us; 16418us; 65535us; 16419us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 65535us; 65535us; 16422us; 65535us; 16423us; 65535us; 16424us; 65535us; 16425us; 65535us; 16426us; 16427us; 65535us; 65535us; 16428us; 65535us; 65535us; 16429us; 65535us; 65535us; 16431us; 16432us; 16449us; 16450us; 16451us; 16461us; 65535us; 65535us; 16462us; 65535us; 65535us; 16464us; 65535us; 65535us; 65535us; 65535us; 65535us; 16465us; 65535us; 65535us; 65535us; 65535us; 16466us; 16467us; 16468us; 65535us; 65535us; 16469us; 16470us; 16471us; 16472us; 65535us; 16473us; 65535us; 65535us; 16475us; 65535us; 65535us; 65535us; 65535us; 16476us; 65535us; 65535us; 65535us; 65535us; 16477us; 65535us; 65535us; 16478us; 65535us; 65535us; 65535us; 16481us; 65535us; 65535us; 16484us; 16485us; 65535us; 65535us; 16487us; 65535us; 16498us; 16499us; 65535us; 65535us; 16500us; 16501us; 65535us; 65535us; 16503us; 65535us; 16504us; 65535us; 65535us; 65535us; 16505us; 65535us; 65535us; 65535us; 16506us; 65535us; 65535us; 16507us; 65535us; 16508us; 65535us; 65535us; 65535us; 16509us; 65535us; 16510us; 16511us; 65535us; 65535us; 16513us; 65535us; 65535us; 16514us; 16515us; 65535us; 16516us; 65535us; 16522us; 65535us; 16523us; 65535us; 65535us; 16525us; 65535us; 16527us; 65535us; 65535us; 16528us; 65535us; 65535us; 16529us; 16530us; 65535us; 65535us; 16531us; 65535us; 65535us; 16532us; 65535us; 16533us; 16534us; 65535us; 16535us; 16536us; 65535us; 65535us; 16537us; 65535us; 65535us; 16539us; 16540us; 16541us; 65535us; 65535us; 65535us; 16542us; 65535us; 16543us; 16544us; 65535us; 65535us; 16545us; 65535us; 65535us; 16546us; 65535us; 16547us; 65535us; 65535us; 65535us; 16548us; 65535us; 65535us; 65535us; 16549us; 65535us; 65535us; 16550us; 16555us; 16556us; 65535us; 16557us; 65535us; 65535us; 16558us; 16560us; 16561us; 65535us; 65535us; 65535us; 65535us; 65535us; 16562us; 16563us; 16564us; 65535us; 65535us; 16565us; 16566us; 16567us; 65535us; 65535us; 16569us; 65535us; 65535us; 65535us; 16571us; 65535us; 16572us; 16573us; 65535us; 65535us; 16574us; 16575us; 16576us; 16577us; 16578us; 16579us; 16580us; 16581us; 65535us; 65535us; 65535us; 16582us; 16583us; 65535us; 65535us; 65535us; 65535us; 16584us; 16585us; 65535us; 16586us; 16587us; 65535us; 16588us; 65535us; 16589us; 65535us; 65535us; 16591us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16594us; 65535us; 65535us; 65535us; 65535us; 16599us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16604us; 65535us; 16605us; 65535us; 16606us; 16607us; 65535us; 16609us; 65535us; 16610us; 65535us; 16611us; 65535us; 65535us; 16613us; 65535us; 65535us; 16614us; 65535us; 65535us; 16615us; 16616us; 16617us; 16618us; 16619us; 16620us; 16621us; 65535us; 65535us; 16622us; 16623us; 65535us; 65535us; 16625us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16628us; 65535us; 65535us; 65535us; 65535us; 16632us; 65535us; 16634us; 65535us; 65535us; 65535us; 65535us; 16639us; 65535us; 16640us; 65535us; 16641us; 65535us; 65535us; 16644us; 65535us; 16645us; 65535us; 65535us; 16647us; 16648us; 16649us; 65535us; 65535us; 16650us; 65535us; 65535us; 16652us; 65535us; 65535us; 16654us; 65535us; 65535us; 65535us; 65535us; 16656us; 65535us; 16659us; 65535us; 65535us; 65535us; 16660us; 65535us; 16662us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16663us; 65535us; 65535us; 65535us; 65535us; 65535us; 16666us; 16667us; 65535us; 65535us; 65535us; 65535us; 65535us; 16670us; 16671us; 65535us; 65535us; 65535us; 65535us; 65535us; 16673us; 16674us; 65535us; 65535us; 65535us; 16676us; 16677us; 16678us; 16679us; 65535us; 65535us; 16680us; 65535us; 65535us; 16681us; 16682us; 65535us; 16683us; 65535us; 16684us; 16685us; 16686us; 65535us; 16687us; 65535us; 16688us; 16689us; 16690us; 16691us; 65535us; 65535us; 16692us; 65535us; 65535us; 16693us; 16694us; 65535us; 65535us; 16695us; 16696us; 65535us; 65535us; 65535us; 16699us; 16700us; 65535us; 65535us; 65535us; 65535us; 16701us; 16702us; 65535us; 16703us; 16704us; 16705us; 16706us; 65535us; 65535us; 65535us; 65535us; 16707us; 16708us; 16709us; 16710us; 16711us; 65535us; 65535us; 65535us; 16712us; 16713us; 16714us; 16715us; 16716us; 65535us; 65535us; 16717us; 16718us; 16719us; 65535us; 65535us; 16721us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16722us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16745us; 16746us; 16747us; 16748us; 16749us; 16750us; 16751us; 16752us; 16753us; 16754us; 16755us; 16756us; 16757us; 16758us; 16759us; 16760us; 16761us; 16762us; 16763us; 16764us; 16765us; 16766us; 65535us; 65535us; 16767us; 65535us; 16768us; 65535us; 65535us; 16769us; 16770us; 16771us; 65535us; 16772us; 16773us; 16774us; 16775us; 65535us; 65535us; 65535us; 16777us; 16778us; 16779us; 16780us; 65535us; 65535us; 16783us; 65535us; 16785us; 65535us; 65535us; 65535us; 65535us; 16787us; 16788us; 65535us; 65535us; 65535us; 65535us; 16791us; 16792us; 65535us; 16793us; 16794us; 65535us; 65535us; 65535us; 65535us; 16799us; 65535us; 65535us; 16800us; 65535us; 65535us; 16801us; 65535us; 65535us; 65535us; 16802us; 16803us; 16804us; 65535us; 16805us; 65535us; 65535us; 16807us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16813us; 65535us; 65535us; 65535us; 16815us; 65535us; 65535us; 16816us; 65535us; 65535us; 16817us; 65535us; 16818us; 16819us; 16820us; 65535us; 65535us; 16821us; 16822us; 16823us; 16824us; 16825us; 16826us; 16827us; 16829us; 65535us; 65535us; 16830us; 65535us; 65535us; 16831us; 16832us; 16833us; 16834us; 65535us; 16835us; 65535us; 65535us; 16839us; 16840us; 16841us; 16842us; 16843us; 16844us; 16845us; 16846us; 16847us; 65535us; 65535us; 16848us; 16849us; 65535us; 16850us; 16851us; 65535us; 65535us; 16852us; 16853us; 16854us; 16855us; 65535us; 65535us; 16856us; 65535us; 16857us; 16858us; 16859us; 65535us; 16860us; 16861us; 16862us; 16863us; 16864us; 16865us; 65535us; 65535us; 16870us; 16871us; 16872us; 16873us; 16874us; 16875us; 16876us; 16878us; 16880us; 16881us; 65535us; 65535us; 16884us; 65535us; 16885us; 65535us; 16887us; 16888us; 16889us; 65535us; 65535us; 16901us; 65535us; 65535us; 65535us; 65535us; 65535us; 16902us; 65535us; 65535us; 65535us; 16903us; 65535us; 65535us; 65535us; 65535us; 16906us; 65535us; 65535us; 65535us; 16907us; 65535us; 65535us; 16908us; 65535us; 65535us; 65535us; 16909us; 16910us; 65535us; 65535us; 65535us; 16914us; 16915us; 65535us; 16917us; 16918us; 65535us; 65535us; 16920us; 16922us; 16924us; 16925us; 16926us; 16927us; 16928us; 65535us; 16930us; 65535us; 65535us; 16931us; 65535us; 65535us; 16933us; 65535us; 65535us; 16935us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16943us; 65535us; 65535us; 16945us; 65535us; 16946us; 65535us; 16947us; 65535us; 65535us; 16949us; 65535us; 16950us; 65535us; 65535us; 16952us; 65535us; 65535us; 65535us; 65535us; 16955us; 65535us; 65535us; 16957us; 65535us; 16958us; 65535us; 65535us; 65535us; 16959us; 65535us; 16960us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16961us; 65535us; 16962us; 65535us; 16963us; 65535us; 16964us; 65535us; 16965us; 65535us; 16966us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16968us; 65535us; 65535us; 65535us; 65535us; 16971us; 65535us; 65535us; 65535us; 16972us; 65535us; 16977us; 16981us; 16982us; 65535us; 16983us; 16984us; 16985us; 16986us; 16987us; 16988us; 65535us; 16989us; 16990us; 65535us; 16991us; 16992us; 65535us; 16993us; 65535us; 65535us; 65535us; 65535us; 16994us; 16995us; 16996us; 65535us; 16997us; 16998us; 16999us; 17000us; 17001us; 17002us; 65535us; 65535us; 17003us; 65535us; 17004us; 65535us; 65535us; 65535us; 17006us; 65535us; 65535us; 17008us; 65535us; 17009us; 17010us; 65535us; 17012us; 17013us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17017us; 17018us; 65535us; 17019us; 17020us; 17021us; 17022us; 17023us; 65535us; 17024us; 17025us; 65535us; 65535us; 17026us; 65535us; 17027us; 17028us; 65535us; 65535us; 17029us; 65535us; 65535us; 17030us; 17031us; 17032us; 17033us; 17034us; 17035us; 17036us; 17037us; 17038us; 17039us; 17040us; 17041us; 17042us; 17043us; 17044us; 17045us; 17046us; 17047us; 17048us; 17049us; 17050us; 17051us; 17052us; 17053us; 65535us; 17055us; 65535us; 17056us; 17057us; 65535us; 17058us; 17059us; 17060us; 17061us; 65535us; 17063us; 17064us; 65535us; 17065us; 17066us; 17067us; 17068us; 17069us; 17070us; 65535us; 17072us; 65535us; 65535us; 17083us; 17084us; 17085us; 17086us; 17087us; 17092us; 17096us; 17098us; 17100us; 17104us; 17106us; 17108us; 17110us; 17111us; 17112us; 17113us; 17121us; 17122us; 65535us; 65535us; 17126us; 17127us; 17128us; 17129us; 17130us; 65535us; 65535us; 17131us; 17132us; 17133us; 65535us; 17134us; 17135us; 17136us; 65535us; 17137us; 17138us; 17139us; 65535us; 17140us; 17141us; 17142us; 17143us; 17144us; 17145us; 17146us; 17147us; 17148us; 17149us; 17150us; 17151us; 17152us; 17153us; |]
let _fsyacc_reductions ()  =    [| 
# 2544 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Program)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 2553 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'casanovaModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 441 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                   _1 
                   )
# 441 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Program));
# 2564 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 445 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  _1 
                   )
# 445 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'stringOrKeywordString));
# 2575 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 446 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          _1 
                   )
# 446 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'stringOrKeywordString));
# 2586 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 451 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               _2 
                   )
# 451 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'cnvModuleIntro));
# 2598 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 455 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m = rhs parseState 1
                           {ModuleStatement = _1; WorldOrEntityDecls = []; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 455 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2611 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 459 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m = rhs parseState 1
                           {ModuleStatement = LongIdentWithDots([Ident("internal_module", Position.Empty)], []); 
                            WorldOrEntityDecls = _1; 
                            Range = m;
                            ReferencedLibraries = Seq.empty} 
                   )
# 459 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2627 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 467 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m2 = rhs parseState 1
                           let m = (m2, _2) ||> unionRangeWithListBy (fun modu -> modu.Range) 
                           {ModuleStatement = _1; WorldOrEntityDecls = _2; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 467 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2642 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 472 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m2 = rhs parseState 1
                           let m = (m2, _2) ||> unionRangeWithListBy (fun modu -> modu.Range) 
                           {ModuleStatement = _1; WorldOrEntityDecls = _2; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 472 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2657 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 477 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m2 = rhs parseState 1
                           let m = (m2, _2) ||> unionRangeWithListBy (fun modu -> modu.Range) 
                           {ModuleStatement = _1; WorldOrEntityDecls = _2; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 477 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2672 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 482 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           errorR(Error(FSComp.SR.buildMultiFileRequiresNamespaceOrModule(),rhs parseState 1))
                           Program.Empty() 
                   )
# 482 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2684 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 488 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            errorR(Error(FSComp.SR.buildMultiFileRequiresNamespaceOrModule(),rhs parseState 1))
                            Program.Empty() 
                   )
# 488 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2696 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 494 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 494 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynModuleDecl list));
# 2709 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 496 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              _2 
                            
                   )
# 496 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynModuleDecl list));
# 2724 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 501 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                              [] 
                            
                   )
# 501 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynModuleDecl list));
# 2737 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 505 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 505 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynModuleDecl list));
# 2748 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 509 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 509 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 2759 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 511 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 511 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 2769 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 516 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 516 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefnsOrExpr));
# 2780 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 520 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 @ _2 
                   )
# 520 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2792 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 522 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _1 @ _3 
                   )
# 522 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2805 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 524 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 524 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2816 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 527 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 527 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2827 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 529 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 529 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2839 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 531 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 
                   )
# 531 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2851 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 535 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1  
                   )
# 535 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefnOrDirective));
# 2862 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 537 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                     _1 
                   )
# 537 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_attributes));
# 2873 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 538 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                     [] 
                   )
# 538 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_attributes));
# 2883 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 541 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 541 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributes));
# 2894 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 543 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 @ _2 
                   )
# 543 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributes));
# 2906 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 546 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                                     _2 
                   )
# 546 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeList));
# 2919 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 547 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                            [] 
                   )
# 547 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeList));
# 2930 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 549 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             _2 
                   )
# 549 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeList));
# 2944 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 552 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             [] 
                   )
# 552 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeList));
# 2956 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 557 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [_1] 
                   )
# 557 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeListElements));
# 2967 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 559 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 @ [_3] 
                   )
# 559 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeListElements));
# 2980 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 563 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let arg = match _3 with None -> mkSynUnit _1.Range | Some e -> e 
                            ({ TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=_1.Range } : SynAttribute) 
                   )
# 563 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attribute));
# 2994 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 566 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let arg = match _4 with None -> mkSynUnit _2.Range | Some e -> e 
                            ({ TypeName=_2; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_2.Range } : SynAttribute) 
                   )
# 566 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attribute));
# 3009 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 569 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let arg = match _6 with None -> mkSynUnit _3.Range | Some e -> e 
                            ({ TypeName=_3; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_3.Range } : SynAttribute) 
                   )
# 569 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attribute));
# 3025 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                Some(ident("module",(rhs parseState 1))) 
                   )
# 573 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeTarget));
# 3036 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 574 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              Some(ident("type",(rhs parseState 1))) 
                   )
# 574 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeTarget));
# 3047 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 575 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                       Some(_1) 
                   )
# 575 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeTarget));
# 3058 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 582 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let hwlb,m = _2
                             mkEntryPoint (m,hwlb,_1,m)  
                   )
# 582 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3071 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 586 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           printfn "Hello!"
                           let mWhole = rhs parseState 3 
                           mkEntryPoint (mWhole,_2,_1,mWhole) 
                   )
# 586 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3085 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 590 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let types = (_2, true) :: _3
                             [ SynModuleDecl.Types(types, (rhs parseState 1, (types |> List.map(fun e -> fst e))) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
# 590 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3098 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 593 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let types = (_2, _1) :: _3
                             [ SynModuleDecl.Types(types, (rhs parseState 1, (types |> List.map(fun e -> fst e))) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
# 593 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3112 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 599 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [SynModuleDecl.Open(_2, _2.Range)] 
                   )
# 599 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3123 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'importLibrary)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 602 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let elem, elem_range = _1
                             [SynModuleDecl.OpenLibrary(elem, elem_range)] 
                   )
# 602 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3135 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'importDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 606 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let elem, elem_range = _1
                             [SynModuleDecl.Import(elem, elem_range)] 
                   )
# 606 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3147 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 613 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _2.Lid 
                   )
# 613 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleAbbrevBlock));
# 3159 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 615 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _1.Lid  
                   )
# 615 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleAbbrevBlock));
# 3170 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 619 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                              Choice2Of2 _2 
                            
                   )
# 619 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3184 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 623 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              Choice2Of2 _2 
                            
                   )
# 623 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3198 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 627 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              Choice2Of2 _2 
                            
                   )
# 627 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3213 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 632 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                              Choice2Of2 [] 
                            
                   )
# 632 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3226 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 636 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                              Choice2Of2 _1 
                             
                   )
# 636 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3239 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 640 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                              Choice1Of2 _1.Lid
                             
                   )
# 640 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3252 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 646 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _2 
                   )
# 646 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'wrappedNamedModuleDefn));
# 3264 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 648 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct());  
                              _2 
                   )
# 648 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'wrappedNamedModuleDefn));
# 3278 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 651 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              [] 
                   )
# 651 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'wrappedNamedModuleDefn));
# 3289 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 655 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              None 
                   )
# 655 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_signature));
# 3299 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 659 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 659 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynMemberDefns));
# 3311 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 662 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           None 
                   )
# 662 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_literalValue));
# 3321 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 663 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           Some(_2) 
                   )
# 663 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_literalValue));
# 3332 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 664 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                 Some(_3) 
                   )
# 664 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_literalValue));
# 3344 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 667 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           (false,NonVirtualMemberFlags) 
                   )
# 667 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberFlags));
# 3354 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 668 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  (false,NonVirtualMemberFlags) 
                   )
# 668 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberFlags));
# 3364 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 669 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        (false,NonVirtualMemberFlags) 
                   )
# 669 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberFlags));
# 3374 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 672 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                       _1 
                   )
# 672 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberSpecFlags));
# 3385 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 673 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 673 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberSpecFlags));
# 3395 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 674 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 674 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberSpecFlags));
# 3405 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 678 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           None, MemberKind.Member 
                   )
# 678 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3415 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 680 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 680 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3426 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 682 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 682 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3437 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 684 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith());
                            Some (rhs2 parseState 1 2), _2 
                   )
# 684 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3449 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 690 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then MemberKind.PropertyGet 
                            else if id.idText = "set" then MemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
# 690 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSetElements));
# 3463 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 695 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired());
                           MemberKind.PropertyGetSet 
                   )
# 695 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSetElements));
# 3479 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 703 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 703 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeNameInfo));
# 3490 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 707 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (_2, false) :: _3 
                   )
# 707 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnList));
# 3502 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 709 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 709 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnList));
# 3512 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 713 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let nameRange = rhs parseState 1
                            let (tcDefRepr:SynTypeDefnRepr),members, inherits = _3 nameRange
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)    
                            TypeDefn(_1, tcDefRepr, members, inherits, mWhole) 
                   )
# 713 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefn));
# 3528 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvTyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 729 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m = unionRanges (rhs parseState 1) (match _6 with [] -> (match _4 with [] -> (rhs parseState 3) | _ -> (rhs parseState 4)) | _ -> (rhs parseState 6))
                            let fields,rules = _2
                            (fun nameRange -> fields nameRange (checkForMultipleAugmentations m (rules @ _4) _6)) 
                   )
# 729 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnRhsBlock));
# 3545 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 735 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m = unionRanges (rhs parseState 1) (match _6 with [] -> (match _4 with [] -> (rhs parseState 3) | _ -> (rhs parseState 4)) | _ -> (rhs parseState 6))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m _4 _6)) 
                   )
# 735 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnRhsBlock));
# 3561 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnOrSpfnCnvRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 747 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                            let inherits,m,rules = _1
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (m,m.Range),augmentation, inherits),rules 
                   )
# 747 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'cnvTyconDefnRhs));
# 3574 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 753 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m = _1.Range
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1,m),augmentation, [])
                   )
# 753 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnRhs));
# 3586 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 759 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition());
                             _2 
                   )
# 759 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBlock));
# 3599 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 762 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 762 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBlock));
# 3611 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 764 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 764 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBlock));
# 3622 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 779 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 779 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnMembers));
# 3633 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 782 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 782 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnMembers));
# 3644 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 784 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 784 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnMembers));
# 3654 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 788 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 @  _3 
                   )
# 788 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnMembersAtLeastOne));
# 3667 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 793 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                             
                             let mRhs = _5.Range 
                             let mWhole = unionRanges (rhs2 parseState 3 4) mRhs 
                             let optReturnType = _3 
                             let bindingBuilder,mBindLhs = _2 
                             (fun vis memFlagsBuilder -> 
                                  let b = bindingBuilder (mBindLhs,optReturnType,_5,Some(memFlagsBuilder MemberKind.Member))
                                  [ SynMemberDefn.Member (b,unionRanges mWhole mBindLhs) ]) 
                   )
# 793 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberCore));
# 3689 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'createBindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 806 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                             
                             let mRhs = _5.Range 
                             let mWhole = unionRanges (rhs2 parseState 3 4) mRhs 
                             let optReturnType = _3 
                             let bindingBuilder,mBindLhs = _2 
                             (fun vis memFlagsBuilder -> 
                                  let b = bindingBuilder (mBindLhs,optReturnType,_5,Some(memFlagsBuilder MemberKind.Member))             
                                  [ SynMemberDefn.Member(make_synexpr_create b,unionRanges mWhole mBindLhs) ]) 
                   )
# 806 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'createMemberCoreWithParams));
# 3711 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 820 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                             
                             let mRhs = _4.Range 
                             let mWhole = unionRanges (rhs2 parseState 2 3) mRhs 
                             let optReturnType = _2 
                             (fun vis memFlagsBuilder _range -> 
                                  let test = mkSynPatMaybeVar (LongIdentWithDots([Ident("Create",_range)],[])) _range
                                  [ SynMemberDefn.Member (mkSynBinding test (_range,optReturnType,_4,Some(memFlagsBuilder MemberKind.Member)),unionRanges mWhole _range) ]) 
                   )
# 820 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'createMemberCore));
# 3731 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 830 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   
                   )
# 830 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'abstractMemberFlags));
# 3741 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 831 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          
                   )
# 831 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'abstractMemberFlags));
# 3751 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 835 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let _,flags = _2
                            _3 _1 flags
                   )
# 835 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnMember));
# 3767 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 841 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        None 
                   )
# 841 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_typ));
# 3777 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 842 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      Some _2 
                   )
# 842 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_typ));
# 3788 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 847 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let (LongIdentWithDots(lid,dotms)) = _3 
                             (None,LongIdentWithDots(ident(MangledGlobalName,rhs parseState 1)::lid, rhs parseState 2::dotms)) 
                   )
# 847 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatternLongIdent));
# 3800 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 849 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  (None,_1) 
                   )
# 849 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatternLongIdent));
# 3811 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 853 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            None 
                   )
# 853 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_declVisibility));
# 3821 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 856 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                       _2 
                   )
# 856 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_classDefn));
# 3833 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 857 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                     [] 
                   )
# 857 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_classDefn));
# 3843 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 860 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  Some(_1) 
                   )
# 860 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optAsSpec));
# 3854 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 861 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  None 
                   )
# 861 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optAsSpec));
# 3864 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 864 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    _2 
                   )
# 864 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'asSpec));
# 3875 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 867 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    Some(_1) 
                   )
# 867 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optBaseSpec));
# 3886 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 868 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  None 
                   )
# 868 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optBaseSpec));
# 3896 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 872 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 872 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'baseSpec));
# 3909 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 877 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 877 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'baseSpec));
# 3920 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 881 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    
                   )
# 881 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberOrOverride));
# 3930 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 882 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      
                   )
# 882 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberOrOverride));
# 3940 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 887 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let _SynUnionCases : Choice<_,SynUnionCase> list = _2
                            let rangesOf3 = _SynUnionCases |> List.map (function |Choice1Of2(ec)->ec.Range | Choice2Of2(uc)->uc.Range)
                            let mWhole = (rhs parseState 1, rangesOf3) ||> List.fold unionRanges 
                            SynTypeDefnSimpleRepr.Union ( _SynUnionCases |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                          mWhole) 
                   )
# 887 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynTypeDefnSimpleRepr));
# 3956 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldOrRuleDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 895 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let inherits,fields,rules = _2
                            inherits,(SynTypeDefnSimpleRepr.Record (fields,lhs parseState)),rules 
                   )
# 895 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnOrSpfnCnvRepr));
# 3969 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRuleList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 900 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let fieldsOrInherit,rules = split (fun x -> match x with CnvRule (_) -> false |_ -> true ) _2
                            let inherits, fields = split (fun x -> match x with CnvField (_) -> false |_ -> true ) fieldsOrInherit
                            let fields,rules = fields |> List.map(fun x -> x.GetField),rules |> List.map(fun x -> x.GetRule)
                            let inherits = inherits |> List.map(fun x -> x.GetInherit)
                            if (inherits.Length > 1) then failwith "Multiple inherits keywords definition per entity not allowed."
                            if inherits.Length = 1 then inherits.Head, fields,rules
                            else [], fields,rules
                   )
# 900 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceFieldOrRuleDeclList));
# 3987 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRuleList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 908 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()); 
                            let fieldsOrInherit,rules = split (fun x -> match x with CnvRule (_) -> false |_ -> true ) _2
                            let inherits, fields = split (fun x -> match x with CnvField (_) -> false |_ -> true ) fieldsOrInherit
                            let fields,rules = fields |> List.map(fun x -> x.GetField),rules |> List.map(fun x -> x.GetRule)
                            let inherits = inherits |> List.map(fun x -> x.GetInherit)
                            if (inherits.Length > 1) then failwith "Multiple inherits keywords definition per entity not allowed."
                            if inherits.Length = 1 then inherits.Head, fields,rules
                            else [], fields,rules
                   )
# 908 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceFieldOrRuleDeclList));
# 4006 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRule)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 920 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                       [_1] 
                   )
# 920 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRuleList));
# 4017 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRule)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRuleList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 921 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                     _1 :: _3 
                   )
# 921 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRuleList));
# 4030 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 925 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let ty,arity = _2 
                            let arity = (match arity with SynValInfo([],rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty,arity),rhs parseState 2)) 
                   )
# 925 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topReturnTypeWithTypeConstraints));
# 4043 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 932 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mRhs = _4.Range 
                             let mWhole = unionRanges (rhs2 parseState 2 3) mRhs 
                             let optReturnType = _2 
                             let bindingBuilder,mBindLhs = _1 
                             (fun vis memFlagsBuilder -> 
                                  [ SynMemberDefn.Member (bindingBuilder (mBindLhs,optReturnType,_4,Some(memFlagsBuilder MemberKind.Member)),unionRanges mWhole mBindLhs) ]) 
                   )
# 932 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'cnvFieldInitCore));
# 4061 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 943 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let flags = NonVirtualMemberFlags
                            let res = _3 _1 flags
                            CnvRule (res.Head) 
                   )
# 943 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4077 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'createMemberCoreWithParams)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 949 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let flags = NonVirtualMemberFlags
                            let res = _3 _1 flags
                            CnvRule (res.Head) 
                   )
# 949 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4093 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'createMemberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 956 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let flags = StaticMemberFlags
                            let res = _3 _1 flags (rhs parseState 2)
                            CnvRule (res.Head) 
                   )
# 956 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4109 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvFieldInitCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 962 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let flags = NonVirtualMemberFlags
                            let res = _3 _2 flags
                            let res_head = res.Head
                            CnvRule (res_head) 
                   )
# 962 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4126 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'inherit_idents)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 967 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           CnvInherit _2 
                   )
# 967 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4137 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 969 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let (Field(c,d,is_ref,g)) = _1 
                            CnvField (Field(c,d,is_ref,g))  
                   )
# 969 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4149 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 973 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 [Ident(_1, lhs parseState)] 
                   )
# 973 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'inherit_idents));
# 4160 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inherit_idents)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 974 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                      Ident(_1, lhs parseState) :: _3 
                   )
# 974 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'inherit_idents));
# 4172 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 978 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 978 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceFieldDeclList));
# 4184 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 980 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()); 
                            _2 
                   )
# 980 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceFieldDeclList));
# 4197 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 983 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 983 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceFieldDeclList));
# 4208 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 986 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 986 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interfaceMember));
# 4218 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 987 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                
                   )
# 987 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interfaceMember));
# 4228 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 991 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1.Lid 
                   )
# 991 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconNameAndTyparDecls));
# 4239 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 994 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                             _3::_1 
                   )
# 994 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typarAlts));
# 4251 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 995 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                [_1] 
                   )
# 995 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typarAlts));
# 4262 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1001 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 1001 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionRepr));
# 4273 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1003 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 :: _2
                   )
# 1003 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionRepr));
# 4285 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1005 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [_1] 
                   )
# 1005 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionRepr));
# 4296 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1008 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                 _1 :: _2 
                   )
# 1008 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attrUnionCaseDecls));
# 4308 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1009 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                             [ _1 ] 
                   )
# 1009 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attrUnionCaseDecls));
# 4319 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1013 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mDecl = rhs parseState 1
                             Choice2Of2 (UnionCase (_1,UnionCaseFields [],mDecl)) 
                           
                   )
# 1013 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attrUnionCaseDecl));
# 4333 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1017 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mDecl = rhs2 parseState 1 3
                             Choice2Of2 (UnionCase (_1,UnionCaseFields _3,mDecl)) 
                           
                   )
# 1017 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attrUnionCaseDecl));
# 4348 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1021 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             libraryOnlyWarning(lhs parseState);
                             let mDecl = rhs2 parseState 1 3
                             Choice2Of2 (UnionCase (_1,UnionCaseFullType _3,mDecl))
                           
                   )
# 1021 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attrUnionCaseDecl));
# 4364 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1029 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1029 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseName));
# 4375 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1031 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              ident(opNameCons,rhs parseState 2) 
                   )
# 1031 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseName));
# 4386 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1033 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              ident(opNameNil,rhs2 parseState 2 3) 
                   )
# 1033 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseName));
# 4397 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1037 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                             Choice2Of2 (UnionCase (_1,UnionCaseFields [],rhs parseState 1)) 
                           
                   )
# 1037 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 4411 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1041 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1041 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 4423 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1045 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                            Choice2Of2 (UnionCase (_1,UnionCaseFields _3,rhs2 parseState 1 3))
                         
                   )
# 1045 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'firstUnionCaseDecl));
# 4437 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1051 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(),lhs parseState)); 
                            _1 
                   )
# 1051 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseRepr));
# 4449 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1054 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            List.map mkAnonField (_1 :: _3) 
                   )
# 1054 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseRepr));
# 4461 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1056 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [mkAnonField _1] 
                   )
# 1056 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseRepr));
# 4472 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1060 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 :: _3 
                   )
# 1060 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdFieldDeclList));
# 4485 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1062 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [_1] 
                   )
# 1062 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdFieldDeclList));
# 4497 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1066 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let fld = _1
                            let (Field(c,d,is_ref,g)) = fld
                            Field(c,d,is_ref,g)  
                   )
# 1066 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdFieldDecl));
# 4510 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ref)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1072 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mRhs = rhs2 parseState 1 4
                            Field(Some _2,_4,_1,mRhs) 
                   )
# 1072 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldDecl));
# 4524 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1077 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          (_2, lhs parseState) 
                   )
# 1077 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'importDecl));
# 4535 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1080 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        (_2, lhs parseState) 
                   )
# 1080 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'importLibrary));
# 4546 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1084 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise Position of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate Position *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             let binds = localBindingsBuilder 
                             if not isRec && List.length binds > 1 then  
                                 reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs( mLetKwd,isRec,isUse,
                                                 binds, 
                                                 bindingSetRange, false) 
                   )
# 1084 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'defnBindings));
# 4575 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1104 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             printf "babababa "
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise Position of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate Position *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             let binds = localBindingsBuilder 
                             if not isRec && List.length binds > 1 then 
                                 reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs( mLetKwd,isRec,isUse,
                                                 binds, 
                                                 bindingSetRange, true) 
                   )
# 1104 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'defnBindingsWait));
# 4605 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1127 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mDoKwd = rhs parseState 1 
                             let mWhole = unionRanges mDoKwd _2.Range
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mDoKwd,false,false,[mkSynDoBinding (true,_2,mWhole)], mWhole, false) 
                   )
# 1127 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'doBinding));
# 4620 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1135 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd;  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise Position of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate Position *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             
                             let binds = localBindingsBuilder 
                             if not isRec && List.length binds > 1 then 
                                 reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                             
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,binds,bindingSetRange,true), (unionRanges mLetKwd bindingSetRange) 
                   )
# 1135 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'hardwhiteLetWaitBindings));
# 4652 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1157 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd;  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise Position of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate Position *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             
                             let binds = localBindingsBuilder 
                             if not isRec && List.length binds > 1 then 
                                 reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                             
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,binds,bindingSetRange,false), (unionRanges mLetKwd bindingSetRange) 
                   )
# 1157 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'hardwhiteLetBindings));
# 4684 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1180 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mLetKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mLetKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange, false), _2 
                   )
# 1180 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'hardwhiteDoBinding));
# 4701 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1188 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        _1 
                   )
# 1188 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBindings));
# 4712 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1189 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     _1 
                   )
# 1189 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBindings));
# 4723 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1190 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                let b,m = _1 in b 
                   )
# 1190 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBindings));
# 4734 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1191 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               fst _1 
                   )
# 1191 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBindings));
# 4745 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1196 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (fun _ m -> ()) 
                   )
# 1196 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 4755 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1198 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (fun kwd m -> reportParseErrorAt m (match kwd with 
                                                                | "let!" -> FSComp.SR.parsUnmatchedLetBang() 
                                                                | "use!" -> FSComp.SR.parsUnmatchedUseBang() 
                                                                | "use" -> FSComp.SR.parsUnmatchedUse() 
                                                                | _ (*"let" *) -> FSComp.SR.parsUnmatchedLet()))  
                   )
# 1198 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 4770 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1206 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let (moreBindings, moreBindingRanges) = List.unzip _2
                             let moreLocalBindingsLastRange = if moreBindingRanges.IsEmpty then None else Some (last moreBindingRanges)
                             match _1 with 
                             | Some (localBindingRange,attrLocalBindingBuilder) -> 
                                let lastRange = 
                                    match moreLocalBindingsLastRange with 
                                    | None -> localBindingRange 
                                    | Some m -> m
                                Some lastRange, attrLocalBindingBuilder ::  moreBindings
                             | None -> 
                                moreLocalBindingsLastRange, moreBindings 
                   )
# 1206 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'localBindings));
# 4792 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1220 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1
                             (match _2 with 
                              | Some (localBindingRange,attrLocalBindingBuilder) -> (attrLocalBindingBuilder ,localBindingRange) :: _3 
                              | None -> _3) 
                   )
# 1220 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moreLocalBindings));
# 4807 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1225 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [] 
                   )
# 1225 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moreLocalBindings));
# 4817 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1229 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let localBindingRange,localBindingBuilder = _1
                             let attrLocalBindingBuilder = localBindingBuilder
                             Some(localBindingRange,attrLocalBindingBuilder) 
                   )
# 1229 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attr_localBinding));
# 4830 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1233 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             None 
                   )
# 1233 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attr_localBinding));
# 4840 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1237 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let (expr:SynExpr),opts = _6
                             let mRhs = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingRange = unionRanges (rhs2 parseState 3 5) mRhs
                             let localBindingBuilder = bindingBuilder (mBindLhs,optReturnType,expr,None)
                             localBindingRange,localBindingBuilder 
                   )
# 1237 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'localBinding));
# 4861 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1245 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWhole = rhs2 parseState 3 5 
                             let optReturnType = _4 
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = 
                                 let eqm = rhs parseState 5
                                 let zeroWidthAtEnd = eqm
                                 bindingBuilder (mBindLhs,optReturnType,arbExpr("localBinding1",zeroWidthAtEnd),None) 
                             mWhole,localBindingBuilder 
                   )
# 1245 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'localBinding));
# 4882 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1254 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 5) (FSComp.SR.parsUnexpectedEndOfFileDefinition())
                             let optReturnType = _4 
                             let mWhole = match optReturnType with None -> rhs parseState 3 | Some _ -> rhs2 parseState 3 4
                             let mRhs = mWhole  // zero-width Position at end of last good token
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = bindingBuilder (mBindLhs,optReturnType,arbExpr("localBinding2",mRhs),None)
                             mWhole,localBindingBuilder 
                   )
# 1254 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'localBinding));
# 4903 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1265 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1265 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 4915 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1267 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             let a,b = _2
                             (exprFromParseError a, b) 
                   )
# 1267 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 4929 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1271 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1271 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 4940 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1274 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                _1, List.rev _2 
                   )
# 1274 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedExprWithStaticOptimizations));
# 4952 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1277 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                      _2 :: _1 
                   )
# 1277 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_staticOptimizations));
# 4964 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1278 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           [] 
                   )
# 1278 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_staticOptimizations));
# 4974 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1281 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                      (_2,_4) 
                   )
# 1281 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticOptimization));
# 4986 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1284 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                        _3 :: _1 
                   )
# 1284 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticOptimizationConditions));
# 4998 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1285 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                       [_1 ] 
                   )
# 1285 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticOptimizationConditions));
# 5009 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1288 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           CasanovaCompiler.ParseAST.WhenTyparTyconEqualsTycon(_1,_3,lhs parseState) 
                   )
# 1288 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticOptimizationCondition));
# 5021 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1289 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        CasanovaCompiler.ParseAST.WhenTyparIsStruct(_1,lhs parseState) 
                   )
# 1289 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticOptimizationCondition));
# 5032 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1292 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 SynConst.Byte _1 
                   )
# 1292 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5043 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1293 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState));
                                 SynConst.Int32 (fst _1) 
                   )
# 1293 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5055 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1295 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  SynConst.Single _1 
                   )
# 1295 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5066 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1296 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  SynConst.Double _1 
                   )
# 1296 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5077 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1297 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                SynConst.Char _1 
                   )
# 1297 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5088 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1298 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 SynConst.String (_1,lhs parseState) 
                   )
# 1298 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5099 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1302 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas false mAll _2 _4 
                   )
# 1302 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5112 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1305 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mAll = rhs2 parseState 1 3
                            mkSynFunMatchLambdas false mAll _2 (arbExpr("anonLambdaExpr1",(rhs parseState 4))) 
                   )
# 1305 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5124 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1308 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let e : SynExpr = _4
                            let mAll = unionRanges (rhs parseState 1) e.Range       
                            mkSynFunMatchLambdas false mAll _2 e 
                   )
# 1308 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5138 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1312 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody());
                            let e : SynExpr = _4 
                            let mAll = unionRanges (rhs parseState 1) e.Range
                            exprFromParseError (mkSynFunMatchLambdas false mAll _2 e) 
                   )
# 1312 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5154 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1317 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody())
                            mkSynFunMatchLambdas false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr2",(rhs parseState 4))) 
                   )
# 1317 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5166 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1321 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody())
                            exprFromParseError (mkSynFunMatchLambdas false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr3",(rhs parseState 4)))) 
                   )
# 1321 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5179 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1324 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            exprFromParseError (mkSynFunMatchLambdas false (rhs2 parseState 1 2) _2 (arbExpr("anonLambdaExpr4",(rhs parseState 3)))) 
                   )
# 1324 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5190 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1326 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            exprFromParseError (mkSynFunMatchLambdas false (rhs parseState 1) [] (arbExpr("anonLambdaExpr5",(rhs parseState 2)))) 
                   )
# 1326 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5200 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1329 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                       _1 
                   )
# 1329 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constant));
# 5211 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1330 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                            SynConst.Measure(_1, _3) 
                   )
# 1330 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constant));
# 5223 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1334 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynBinding _1, rhs parseState 1 
                   )
# 1334 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'bindingPattern));
# 5234 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1338 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                             let tuple = _1
                             let tuple1 = SynPat.LongIdent(LongIdentWithDots([Ident("Create", rhs parseState 1)],[]),None, [tuple], rhs parseState 1)
                             mkCreateSynBinding tuple1, rhs parseState 1 
                           
                   )
# 1338 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'createBindingPattern));
# 5249 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1347 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Named (_1,_3,false,rhs2 parseState 1 3) 
                   )
# 1347 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5261 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1349 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 1349 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5273 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1351 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]), None,[SynPat.Tuple ([_1;_3],rhs2 parseState 1 3)],lhs parseState) 
                   )
# 1351 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5285 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1353 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Tuple(List.rev _1, lhs parseState) 
                   )
# 1353 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5296 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1355 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Ands(List.rev _1, lhs parseState) 
                   )
# 1355 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5307 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1357 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1357 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5318 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1360 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 
                   )
# 1360 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tuplePatternElements));
# 5330 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1362 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1362 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tuplePatternElements));
# 5342 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1366 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 
                   )
# 1366 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'conjPatternElements));
# 5354 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1368 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1368 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'conjPatternElements));
# 5366 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1372 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_3,lhs parseState) 
                   )
# 1372 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constrPattern));
# 5379 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1374 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_4,lhs parseState) 
                   )
# 1374 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constrPattern));
# 5392 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1376 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_4,lhs parseState) 
                   )
# 1376 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constrPattern));
# 5405 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1378 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1378 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constrPattern));
# 5416 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1380 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                   None 
                   )
# 1380 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_explicitValTyparDecls2));
# 5426 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1384 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 :: _2 
                   )
# 1384 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatterns));
# 5438 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1386 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 1386 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatterns));
# 5451 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1389 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 1389 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatterns));
# 5464 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1391 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                         [_1] 
                   )
# 1391 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatterns));
# 5475 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1396 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1396 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5487 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1398 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.ArrayOrList(false,_2,lhs parseState) 
                   )
# 1398 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5498 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1400 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.ArrayOrList(true,_2, lhs parseState) 
                   )
# 1400 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5509 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1402 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Wild (lhs parseState) 
                   )
# 1402 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5519 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1404 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let vis,lidwd = _1 
                             if List.length lidwd.Lid > 1 || (let c = (List.head lidwd.Lid).idText.[0] in Char.IsUpper(c) && not (Char.IsLower c)) 
                             then mkSynPatMaybeVar lidwd (lhs parseState)
                             else mkSynPatVar (List.head lidwd.Lid) 
                   )
# 1404 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5533 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1409 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Const (_1,_1.Range (lhs parseState)) 
                   )
# 1409 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5544 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1411 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Const(SynConst.Bool false,lhs parseState) 
                   )
# 1411 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5554 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1413 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Const(SynConst.Bool true,lhs parseState) 
                   )
# 1413 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5564 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1415 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Null(lhs parseState) 
                   )
# 1415 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5574 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1417 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let m = (lhs parseState)
                             SynPat.Paren(_2 m,m) 
                   )
# 1417 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5587 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1420 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             patFromParseError (_2 (rhs2 parseState 1 2)) 
                   )
# 1420 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5600 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1423 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
# 1423 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5611 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1425 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                              SynPat.Wild (lhs parseState)
                   )
# 1425 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5623 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1432 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun m -> _1) 
                   )
# 1432 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPatternBody));
# 5634 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1434 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit,m)) 
                   )
# 1434 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPatternBody));
# 5644 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1463 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Named (_1,_3,false,rhs2 parseState 1 3) 
                   )
# 1463 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5656 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1465 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 1465 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5668 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1467 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Tuple(List.rev _1,lhs parseState) 
                   )
# 1467 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5679 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1469 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Ands(List.rev _1,rhs2 parseState 1 3) 
                   )
# 1469 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5690 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1471 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Typed(_1,_3,lhsm) 
                   )
# 1471 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5703 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1474 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]),None,[ SynPat.Tuple ([_1;_3],rhs2 parseState 1 3) ],lhs parseState) 
                   )
# 1474 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5715 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1475 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                         _1 
                   )
# 1475 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5726 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1479 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 
                   )
# 1479 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleParenPatternElements));
# 5738 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1481 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1481 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleParenPatternElements));
# 5750 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1485 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 
                   )
# 1485 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'conjParenPatternElements));
# 5762 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1487 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1487 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'conjParenPatternElements));
# 5774 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1490 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                    let rs,m = _1 in SynPat.Record (rs,m) 
                   )
# 1490 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recordPatternElements));
# 5785 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1494 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_1],lhs parseState 
                   )
# 1494 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recordPatternElementsAux));
# 5797 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1496 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let r = _1 in let (rs,dropMark) = _3 in (r :: rs),lhs parseState 
                   )
# 1496 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recordPatternElementsAux));
# 5810 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1499 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                    (frontAndBack _1.Lid,_3) 
                   )
# 1499 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recordPatternElement));
# 5822 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1503 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [] 
                   )
# 1503 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'listPatternElements));
# 5832 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1505 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_1] 
                   )
# 1505 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'listPatternElements));
# 5844 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1507 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 :: _3 
                   )
# 1507 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'listPatternElements));
# 5857 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1512 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1512 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromAssignmentExprBlock));
# 5869 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1516 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1516 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 5881 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1518 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                             exprFromParseError _2 
                   )
# 1518 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 5894 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1521 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1521 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 5905 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1526 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1526 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 5917 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1528 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1528 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 5928 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1533 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                         _1 
                   )
# 1533 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedSeqExprBlockR));
# 5939 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1534 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        _1 
                   )
# 1534 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedSeqExprBlockR));
# 5950 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1537 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                               SynExpr.Typed (_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 1537 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedSeqExpr));
# 5962 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1538 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   _1 
                   )
# 1538 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedSeqExpr));
# 5973 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1542 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,true,_1,_3,unionRanges _1.Range _3.Range) 
                   )
# 1542 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 5986 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1544 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1544 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 5998 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1546 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1546 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 6009 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1548 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_3,unionRanges _1.Range _3.Range ) 
                   )
# 1548 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 6021 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1550 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_4,unionRanges _1.Range _4.Range) 
                   )
# 1550 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 6034 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1552 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            let mLetKwd,isUse = match hwlb with (BindingSetPreAttrs(m,_,isUse,_,_,_))  -> m,isUse
                            reportParseErrorAt mLetKwd (FSComp.SR.parsExpectedStatementAfterLet(if isUse then "use" else "let"))
                            let fauxRange = m // zero width Position at end of m
                            mkLocalBindings (m,hwlb,arbExpr("seqExpr",fauxRange)) 
                   )
# 1552 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 6049 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1563 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  debugPrint("recovering via error"); true 
                   )
# 1563 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recover));
# 6059 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1564 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                debugPrint("recovering via EOF"); false 
                   )
# 1564 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recover));
# 6070 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1568 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [SynExpr.Const(SynConst.Bool(true), mIf) ,_3,mIf] 
                   )
# 1568 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choices));
# 6082 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1571 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [_2,_3,mIf] 
                   )
# 1571 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choices));
# 6095 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1574 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (SynExpr.Const(SynConst.Bool(true), mIf) ,_3,mIf) :: _4 
                   )
# 1574 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choices));
# 6108 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1577 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (_2,_3,mIf) :: _4 
                   )
# 1577 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choices));
# 6122 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1582 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [SynExpr.Const(SynConst.Bool(true), mIf),_3,mIf] 
                   )
# 1582 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'intChoices));
# 6134 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1585 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [_2,_3,mIf] 
                   )
# 1585 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'intChoices));
# 6147 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1588 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (SynExpr.Const(SynConst.Bool(true), mIf),_3,mIf) :: _4 
                   )
# 1588 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'intChoices));
# 6160 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1591 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (_2,_3,mIf) :: _4 
                   )
# 1591 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'intChoices));
# 6174 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1596 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1596 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choiceBody));
# 6185 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1598 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 
                   )
# 1598 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choiceBody));
# 6197 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1600 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen());
                             exprFromParseError _3 
                   )
# 1600 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choiceBody));
# 6210 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1605 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWaitKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mWaitKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mWaitKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange,false), _2)
                             [(e,mWaitKwd)]
                   )
# 1605 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parallel));
# 6226 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'parallel)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1611 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWaitKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mWaitKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mWaitKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange,false), _2)
                             (e,mWaitKwd) :: _4 
                   )
# 1611 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parallel));
# 6243 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1619 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynExpr.Choice(false,_1) 
                   )
# 1619 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6254 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'intChoices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1621 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynExpr.Choice(true,_1) 
                   )
# 1621 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6265 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parallel)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1623 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynExpr.Parallel(_1) 
                   )
# 1623 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6276 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindingsWait)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1625 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range,_1,_3) 
                   )
# 1625 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6288 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1627 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range,_1,_3) 
                   )
# 1627 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6300 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1629 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            mkLocalBindings (rhs2 parseState 1 2,_1,arbExpr("declExpr1",(rhs parseState 3))) 
                   )
# 1629 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6311 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetWaitBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1634 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _2.Range,hwlb,_2) 
                   )
# 1634 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6324 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1637 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _2.Range,hwlb,_2) 
                   )
# 1637 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6337 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetWaitBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1640 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m,hwlb,arbExpr("declExpr2",(rhs parseState 2))) 
                   )
# 1640 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6350 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1644 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m,hwlb,arbExpr("declExpr2",(rhs parseState 2))) 
                   )
# 1644 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6363 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetWaitBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1648 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _3.Range ,hwlb,_3) 
                   )
# 1648 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6376 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1651 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _3.Range ,hwlb,_3) 
                   )
# 1651 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6389 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetWaitBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1654 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3),hwlb,arbExpr("declExpr3",(rhs parseState 3))) 
                   )
# 1654 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6402 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1658 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3),hwlb,arbExpr("declExpr3",(rhs parseState 3))) 
                   )
# 1658 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6415 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1663 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let e = snd _1
                            SynExpr.Do(e,e.Range) 
                   )
# 1663 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6427 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1669 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWaitKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mWaitKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mWaitKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange,false), _2)
                             SynExpr.WaitStatement(e,e.Range) 
                   )
# 1669 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6443 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1677 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mYieldKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mYieldKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mYieldKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange,false), _2)
                             SynExpr.YieldStatement(e,e.Range) 
                   )
# 1677 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6459 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1684 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             printfn "anonLambdaExpr 1"
                             _1 
                   )
# 1684 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6471 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1688 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith,(clauses,mLast) = _3 
                             let spBind = SequencePointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.Match(spBind, _2,clauses,false,unionRanges mMatch mLast) 
                   )
# 1688 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6486 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1694 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch());
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
# 1694 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6500 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1699 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 1699 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6513 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1703 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 1703 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6526 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1708 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf()); 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             exprFromParseError _2 
                   )
# 1708 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6543 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1716 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf())
                             // Produce an approximate expression during error recovery. There can still be value in doing this even
                             // for this pathological case.
                             let m = (rhs parseState 1)
                             let mEnd = m
                             let spIfToThen = SequencePointAtBinding mEnd
                             exprFromParseError (SynExpr.IfThenElse(arbExpr("ifGuard1",mEnd),arbExpr("thenBody1",mEnd),None,spIfToThen,true,m,m)) 
                   )
# 1716 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6560 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1725 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.While(spWhile,_2,_4,mWhileAll) 
                   )
# 1725 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6577 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1731 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.While(spWhile,_2,_4,mWhileAll)) 
                   )
# 1731 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6595 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1738 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // silent recovery 
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = unionRanges (rhs parseState 4) (rhs parseState 5)
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 5)
                             SynExpr.While(spWhile,_2,arbExpr("whileBody1",mWhileBodyArb),mWhileAll) 
                   )
# 1738 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6613 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1746 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsWhileDoExpected())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,_2,arbExpr("whileBody2",mWhileBodyArb),mWhileAll))  
                   )
# 1746 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6630 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1754 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             arbExpr("whileLoop1",rhs parseState 1)  
                   )
# 1754 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6642 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1758 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             //silent recovery
                             let mWhileHeader = rhs parseState 1
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,arbExpr("whileGuard1",mWhileHeader),arbExpr("whileBody3",mWhileBodyArb),mWhileAll))  
                   )
# 1758 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6658 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1766 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 1766 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6674 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1771 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,mForLoopAll) 
                   )
# 1771 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6692 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1778 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // Silent recovery
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2a",mForLoopBodyArb),mForLoopAll) 
                   )
# 1778 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6711 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1787 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2",mForLoopBodyArb),mForLoopAll) 
                   )
# 1787 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6730 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1796 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let (a,b,ok) = _2 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsForDoExpected())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody1",mForLoopBodyArb),mForLoopAll) 
                   )
# 1796 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6748 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1805 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll) 
                   )
# 1805 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6766 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1812 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             // Still produce an expression
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll)) 
                   )
# 1812 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6786 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1821 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll) 
                   )
# 1821 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6805 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1830 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 1830 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6824 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1839 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = (rhs parseState 2)
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 1839 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6842 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1849 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 2
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             let spBind = SequencePointAtForLoop(mForLoopHeader)
                             SynExpr.For(spBind,mkSynId mForLoopHeader "_loopVar",arbExpr("startLoopRange1",mForLoopHeader),true,arbExpr("endLoopRange1",rhs parseState 3),_4,mForLoopAll) 
                   )
# 1849 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6859 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1868 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsIdentifierExpected())
                             arbExpr("declExpr12",(rhs parseState 1)) 
                   )
# 1868 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6871 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1872 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsInOrEqualExpected())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 4
                             let mForLoopAll = rhs2 parseState 1 4
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll) 
                   )
# 1872 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6888 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1880 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = (rhs parseState 2)
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll)) 
                   )
# 1880 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6905 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicSingleLineQualifiersThenArrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1888 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let spBind = SequencePointAtForLoop(rhs2 parseState 1 2)
                            let (a,b,_) = _2 in SynExpr.ForEach(spBind,SeqExprOnly true,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 1888 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6919 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1891 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                             SynExpr.Upcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 1891 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6931 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1894 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ":=" _3 
                   )
# 1894 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6943 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1896 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                        let exprs,commas = _1 in SynExpr.Tuple(List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ) 
                   )
# 1896 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6954 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1900 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    SynExpr.JoinIn(_1,rhs parseState 2,_3,unionRanges _1.Range _3.Range) 
                   )
# 1900 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6966 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1901 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "||" _3 
                   )
# 1901 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6978 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1902 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1902 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6991 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1903 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "or" _3 
                   )
# 1903 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7003 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1904 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&" _3 
                   )
# 1904 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7015 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1905 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&&" _3 
                   )
# 1905 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7027 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1906 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1906 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7040 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1907 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "=" _3 
                   )
# 1907 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7052 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1908 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1908 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7065 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1909 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "$" _3 
                   )
# 1909 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7077 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1910 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "<" _3 
                   )
# 1910 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7090 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1911 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ">" _3 
                   )
# 1911 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7103 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1912 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1912 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7116 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1913 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1913 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7129 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1914 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;_3],[rhs parseState 2],unionRanges _1.Range _3.Range),unionRanges _1.Range _3.Range) 
                   )
# 1914 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7141 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1915 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1915 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7154 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1916 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "-" _3 
                   )
# 1916 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7166 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1917 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "*" _3 
                   )
# 1917 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7178 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1918 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1918 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7191 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1919 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1919 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7204 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1921 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("in")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "@in" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1921 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7216 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1923 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("||")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "||" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1923 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7228 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1925 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1925 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7241 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1927 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("or")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "or" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1927 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7253 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1929 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1929 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7265 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1931 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&&" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1931 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7277 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1933 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1933 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7290 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1935 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("=")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "=" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1935 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7302 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1937 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1937 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7315 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1939 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("$")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "$" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1939 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7327 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1941 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1941 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7340 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1943 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(">")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 ">" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1943 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7353 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1945 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1945 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7366 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1947 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1947 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7379 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1949 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("::")); 
                                                                                 SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;(arbExpr("declExprInfix",(rhs parseState 3)))],[rhs parseState 2],unionRanges _1.Range (rhs parseState 3)),unionRanges _1.Range (rhs parseState 3)) 
                   )
# 1949 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7391 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1951 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1951 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7404 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1953 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("-")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "-" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1953 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7416 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1955 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("*")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "*" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1955 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7428 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1957 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1957 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7441 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1959 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1959 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7454 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1962 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                  _1 
                   )
# 1962 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7465 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1967 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let con = SynConst.String (_1,rhs parseState 1)
                             let arg2 = SynExpr.Const (con,con.Range (rhs parseState 1)) 
                             arg2 
                   )
# 1967 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'dynamicArg));
# 7478 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1971 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1971 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'dynamicArg));
# 7490 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1975 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             rhs parseState 1, _2 
                   )
# 1975 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withClauses));
# 7501 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1977 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             rhs parseState 1, _2 
                   )
# 1977 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withClauses));
# 7512 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1979 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWith());
                             rhs parseState 1, _2 
                   )
# 1979 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withClauses));
# 7525 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1984 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1984 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withPatternClauses));
# 7536 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1986 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _2 
                   )
# 1986 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withPatternClauses));
# 7547 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1988 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 1988 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withPatternClauses));
# 7559 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1992 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 1992 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withPatternClauses));
# 7571 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1999 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1, _2, rhs parseState 1 
                   )
# 1999 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternAndGuard));
# 7583 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2003 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 2003 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternClauses));
# 7597 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2007 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let pat,guard,patm = _1 
                            let clauses,mLast = _4 
                            (Clause(pat,guard,_2,patm,SequencePointAtTarget) :: clauses), mLast 
                   )
# 2007 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternClauses));
# 7612 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2011 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 3 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 2011 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternClauses));
# 7627 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2016 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast 
                   )
# 2016 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternClauses));
# 7642 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2021 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 2
                            // silent recovery 
                            [Clause(pat,guard,SynExpr.Const(SynConst.Unit,mLast),patm,SequencePointAtTarget)], mLast 
                   )
# 2021 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternClauses));
# 7656 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2028 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            Some _2 
                   )
# 2028 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternGuard));
# 7667 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2030 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            None 
                   )
# 2030 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternGuard));
# 7677 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2034 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 2034 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7688 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromTupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2039 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                         let exprs = _1 
                                         exprs 
                   )
# 2039 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromExprCondition));
# 7700 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2047 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let exprThen,mThen = _1 
                             (fun exprGuard mIf -> 
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match _2 with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = SequencePointAtBinding(mIfToThen)
                                 SynExpr.IfThenElse(exprGuard,exprThen,_2,spIfToThen,false,mIfToThen,mIfToEndOfLastBranch)) 
                   )
# 2047 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprCases));
# 7718 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2057 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2, rhs parseState 1 
                   )
# 2057 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprThen));
# 7729 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2059 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3,rhs parseState 1 
                   )
# 2059 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprThen));
# 7741 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2061 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen());
                             exprFromParseError _3,rhs parseState 1 
                   )
# 2061 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprThen));
# 7754 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2066 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             None 
                   )
# 2066 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7764 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2068 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             Some _2 
                   )
# 2068 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7775 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2070 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             Some _3 
                   )
# 2070 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7787 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2072 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileElse());
                             Some (exprFromParseError _3) 
                   )
# 2072 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7800 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2075 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mElif = rhs parseState 1 
                             Some (_3 _2 mElif) 
                   )
# 2075 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7813 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2078 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             Some (exprFromParseError _2) 
                   )
# 2078 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7825 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2083 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let patterns,commas = _1 in (_3 :: patterns),((rhs parseState 2)::commas) 
                   )
# 2083 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tuplePat));
# 7837 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2094 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
# 2094 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tuplePat));
# 7849 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2098 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let exprs,commas = _1 in (_3 :: exprs),((rhs parseState 2)::commas) 
                   )
# 2098 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleExpr));
# 7861 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2109 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
# 2109 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleExpr));
# 7873 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2113 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
# 2113 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7884 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2115 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 2115 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7897 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2118 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 2118 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7910 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2121 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.New(false,_2,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2121 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7923 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2123 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.New(false,_2,arbExpr("minusExpr",(rhs parseState 4)),unionRanges (rhs parseState 1) (_2).Range) 
                   )
# 2123 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7935 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2125 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             arbExpr("minusExpr2",(rhs parseState 1)) 
                   )
# 2125 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7945 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2127 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.InferredUpcast(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2127 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7956 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2129 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2129 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7967 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2133 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, false, _1,_2,unionRanges _1.Range _2.Range)  
                   )
# 2133 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7979 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2135 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg,_ = _1 
                             arg 
                   )
# 2135 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7991 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2140 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~"^(_1)) arg2 
                   )
# 2140 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8006 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2145 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg,hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             arg 
                   )
# 2145 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8019 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2152 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 2152 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8033 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2157 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 2157 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8047 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * bool     * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2162 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1,_ = _1 
                             let mLessThan,mGreaterThan,_,args,commas,mTypeArgs = _3
                             let mWholeExpr = unionRanges arg1.Range mTypeArgs
                             SynExpr.TypeApp(arg1, mLessThan, args, commas, mGreaterThan, mTypeArgs, mWholeExpr), false 
                   )
# 2162 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8062 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2168 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2,hpa2 
                   )
# 2168 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8076 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2173 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1,hpa1 = _1 
                             _3 arg1 (lhs parseState) (rhs parseState 2),hpa1 
                   )
# 2173 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8089 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2176 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1 = SynExpr.Ident(ident("base",rhs parseState 1))
                             _3 arg1 (lhs parseState) (rhs parseState 2),false 
                   )
# 2176 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8101 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2179 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.LongIdent (true,LongIdentWithDots([_2],[]),None,rhs parseState 2),false 
                   )
# 2179 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8112 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2181 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1,hpa1 = _1
                             mkSynInfix (rhs parseState 2) arg1 "?" _3, hpa1 
                   )
# 2181 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8125 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2184 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Ident (ident(MangledGlobalName,rhs parseState 1)), false 
                   )
# 2184 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8135 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2186 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Ident (_1),false 
                   )
# 2186 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8146 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2188 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 (lhs parseState) false,false 
                   )
# 2188 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8157 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2190 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) false), false 
                   )
# 2190 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8170 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2193 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList(false,[ ], lhs parseState),false  
                   )
# 2193 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8181 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2196 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             // silent recovery 
                             exprFromParseError (SynExpr.ArrayOrList(false,[ ], rhs parseState 1)),false  
                   )
# 2196 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8194 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2200 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1,false 
                   )
# 2200 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8205 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2204 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e _1) 
                   )
# 2204 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8217 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2207 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e (Ident("Create",idm))) 
                   )
# 2207 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8228 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2210 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm dotm // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
# 2210 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8241 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2215 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm dotm // previous lhsm is wrong after 'recover'
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterMissingQualificationAfterDot(e,fixedLhsm)) 
                   )
# 2215 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8256 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2221 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun e lhsm dotm -> 
                                 mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs parseState); 
                                 mkSynDotParenGet lhsm dotm e _2) 
                   )
# 2221 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8270 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2225 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e _2) 
                   )
# 2225 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8281 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2228 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e _2)) 
                   )
# 2228 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8294 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2232 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mArg = rhs2 parseState 1 3
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr1",mArg))) 
                   )
# 2232 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8305 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2235 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket())
                             let mArg = (rhs parseState 1) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr2",mArg)))) 
                   )
# 2235 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8318 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2239 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSliceGet lhsm dotm e _2) 
                   )
# 2239 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8329 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2243 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 3) (Some _3) 
                   )
# 2243 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optRange));
# 8341 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2245 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 2) None 
                   )
# 2245 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optRange));
# 8352 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2247 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 2) (Some _2) 
                   )
# 2247 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optRange));
# 8363 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2249 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 1) None 
                   )
# 2249 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optRange));
# 8373 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2255 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Const (_1,_1.Range (lhs parseState)) 
                   )
# 2255 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8384 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2257 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2257 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8395 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2259 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2259 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8406 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2261 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Null(lhs parseState) 
                   )
# 2261 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8416 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2263 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Const(SynConst.Bool false,lhs parseState) 
                   )
# 2263 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8426 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2265 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Const(SynConst.Bool true,lhs parseState) 
                   )
# 2265 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8436 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2267 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2267 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8447 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2269 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2269 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8458 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2273 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Paren(_2, rhs parseState 1, Some(rhs parseState 3), rhs2 parseState 1 3) 
                   )
# 2273 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'beginEndExpr));
# 8469 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2275 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); exprFromParseError _2 
                   )
# 2275 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'beginEndExpr));
# 8481 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2277 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (* silent recovery *) arbExpr("beginEndExpr",(lhs parseState))  
                   )
# 2277 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'beginEndExpr));
# 8491 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2279 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynUnit (lhs parseState) 
                   )
# 2279 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'beginEndExpr));
# 8501 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2283 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _2 (lhs parseState) true 
                   )
# 2283 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayExpr));
# 8512 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2285 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) true) 
                   )
# 2285 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayExpr));
# 8525 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2288 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList(true,[ ], lhs parseState) 
                   )
# 2288 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayExpr));
# 8535 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2290 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar());  
                             (* silent recovery *) 
                             exprFromParseError (SynExpr.ArrayOrList(true,[ ], rhs parseState 1)) 
                   )
# 2290 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayExpr));
# 8548 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2296 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Const(SynConst.Unit,(rhs2 parseState 1 2)) 
                   )
# 2296 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8559 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2298 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let m = rhs2 parseState 1 3
                             SynExpr.Paren(_2 m, rhs parseState 1, Some(rhs parseState 3), m) 
                   )
# 2298 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8572 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_other_than_rparen_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2301 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 3)
                             SynExpr.Paren(exprFromParseError (_2 lhsm), rhs parseState 1, None, lhsm) 
                   )
# 2301 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8586 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2305 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // silent recovery
                             SynExpr.Paren(arbExpr("parenExpr1",(rhs parseState 1)),(rhs parseState 1),Some(rhs parseState 3),(rhs2 parseState 1 3)) 
                   )
# 2305 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8598 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2308 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2tcs", lhsm) 
                   )
# 2308 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8610 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2312 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2mcs", lhsm) 
                   )
# 2312 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8622 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2316 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2rbcs", lhsm) 
                   )
# 2316 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8634 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2320 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2obecs", lhsm) 
                   )
# 2320 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8646 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2324 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             arbExpr("parenExpr2",(lhs parseState))  
                   )
# 2324 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8658 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2336 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun _m -> _1) 
                   )
# 2336 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExprBody));
# 8669 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2340 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_1] 
                   )
# 2340 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticallyKnownHeadTypars));
# 8680 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2342 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             List.rev _2 
                   )
# 2342 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticallyKnownHeadTypars));
# 8692 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2346 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _3 :: _1
                   )
# 2346 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 8704 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2348 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_1] 
                   )
# 2348 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 8715 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2352 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let m,r = _2 in r (rhs2 parseState 1 3) 
                   )
# 2352 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExpr));
# 8727 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2354 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            let m,r = _2 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            r (unionRanges (rhs parseState 1) m) 
                   )
# 2354 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExpr));
# 8742 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2359 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            // silent recovery 
                            arbExpr("braceExpr",rhs2 parseState 1 3)  
                   )
# 2359 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExpr));
# 8754 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2362 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            SynExpr.Record(None,None,[],rhs parseState 1) 
                   )
# 2362 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExpr));
# 8767 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2366 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let m = rhs2 parseState 1 2 
                             SynExpr.Record(None,None,[],m) 
                   )
# 2366 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExpr));
# 8779 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2371 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (lhs parseState), (fun m -> let a,b,c = _1 in SynExpr.Record(a,b,c,m)) 
                   )
# 2371 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExprBody));
# 8790 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2373 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m,r = _1 in (m, r false) 
                   )
# 2373 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExprBody));
# 8801 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2377 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m,r = _1 in (m, r false) 
                   )
# 2377 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'monadicExprBody));
# 8812 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2381 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m,r = _1 in (fun lhsm isArray -> SynExpr.ArrayOrListOfSeqExpr(isArray, r true m, lhsm)) 
                   )
# 2381 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'listExprElements));
# 8823 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2383 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrList(isArray,[ ], lhsm)) 
                   )
# 2383 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'listExprElements));
# 8833 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2387 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1.Range, (fun isArrayOrList lhsm -> SynExpr.CompExpr(isArrayOrList,ref(isArrayOrList),_1,lhsm)) 
                   )
# 2387 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'monadicExprInitial));
# 8844 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2389 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2389 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'monadicExprInitial));
# 8855 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2393 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let opm = (rhs parseState 2)
                            (unionRanges _1.Range _3.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the Position of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that Position here
                                                                     match (mkSynInfix opm _1 ".." _3) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 2393 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rangeSequenceExpr));
# 8873 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2401 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (unionRanges _1.Range _5.Range),(fun _isArray wholem -> mkSynTrifix wholem ".. .." _1 _3 _5) 
                   )
# 2401 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rangeSequenceExpr));
# 8886 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2404 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                            let opm = (rhs parseState 2)
                            let e = arbExpr("rangeSeqError1", (rhs parseState 3))
                            (unionRanges _1.Range e.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the Position of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that Position here
                                                                     match (mkSynInfix opm _1 ".." e) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 2404 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rangeSequenceExpr));
# 8906 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2420 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynExpr.YieldOrReturn((true,false), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2420 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'monadicSingleLineQualifiersThenArrowThenExprR));
# 8917 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2426 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (_1, _3, true) 
                   )
# 2426 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopBinder));
# 8929 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2428 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m,r = _3 in (_1, r false m, true) 
                   )
# 2428 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopBinder));
# 8941 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2430 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder",(rhs parseState 2)), false) 
                   )
# 2430 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopBinder));
# 8954 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2433 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2",(rhs parseState 1)), false) 
                   )
# 2433 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopBinder));
# 8967 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2438 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (_1, _3) 
                   )
# 2438 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromLoopBinder));
# 8979 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2440 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m,r = _3 in (_1, r false m) 
                   )
# 2440 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromLoopBinder));
# 8991 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2442 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder",(rhs parseState 2))) 
                   )
# 2442 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromLoopBinder));
# 9004 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2445 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2",(rhs parseState 1))) 
                   )
# 2445 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromLoopBinder));
# 9017 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromTupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2450 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let exprs = _1
                             let exprs = exprs
                             _3 :: exprs 
                   )
# 2450 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromTupleExpr));
# 9031 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2463 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_1] 
                   )
# 2463 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromTupleExpr));
# 9042 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2465 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_3 ; _1] 
                   )
# 2465 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromTupleExpr));
# 9054 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2469 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             idOfPat (rhs parseState 1) _1,_3,_4,_5 
                   )
# 2469 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopRange));
# 9068 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2472 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                        _2 :: _1 
                   )
# 2472 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_curriedArgExprs));
# 9080 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2473 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 2473 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_curriedArgExprs));
# 9090 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2476 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            None 
                   )
# 2476 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_atomicExprAfterType));
# 9100 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2477 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                Some(_1) 
                   )
# 2477 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_atomicExprAfterType));
# 9111 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2481 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs parseState) | Some e -> e 
                            let l = List.rev _5
                            let dummyField = mkRecdField (LongIdentWithDots([], [])) // dummy identifier, it will be discarded
                            let l = rebindRanges (dummyField, None) l _6 
                            let (_, _, inheritsSep) = List.head l
                            let bindings = List.tail l
                            (Some (_2,arg,rhs2 parseState 2 4, inheritsSep, rhs parseState 1), None, bindings) 
                   )
# 2481 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9132 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2490 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            match _1 with 
                            
                            | LongOrSingleIdent(false, (LongIdentWithDots(_,_) as f),None,m) ->  
                                 let f = mkRecdField f
                                 let l = List.rev _4
                                 let l = rebindRanges (f, Some _3) l _5
                                 (None, None, l)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
# 2490 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9153 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2504 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           reportParseErrorAt m (FSComp.SR.parsFieldBinding())
                           let f = mkUnderscoreRecdField m
                           (None, None, [ f, None, None  ]) 
                   )
# 2504 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9167 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2511 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())      
                           let f = mkUnderscoreRecdField m
                           reportParseErrorAt (rhs2 parseState 1 2) (FSComp.SR.parsFieldBinding())
                           
                           (None, None, [f, None, None]) 
                   )
# 2511 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9182 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2520 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnderscoreInvalidFieldName())
                           let f = mkUnderscoreRecdField (rhs parseState 1)
                           let l = List.rev _4
                           let l = rebindRanges (f, Some _3) l _5
                           (None, None, l) 
                   )
# 2520 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9199 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2530 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 2530 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9215 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2535 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             (None,Some (_1, (rhs parseState 2, None)), []) 
                   )
# 2535 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9228 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2539 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 2539 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9245 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2545 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     Some _1 
                   )
# 2545 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_seps_recd));
# 9256 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2546 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           None 
                   )
# 2546 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_seps_recd));
# 9266 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2549 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     (rhs parseState 1), None 
                   )
# 2549 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps_recd));
# 9276 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2550 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      let m = (rhs parseState 1) in (m, Some m) 
                   )
# 2550 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps_recd));
# 9286 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2551 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 1) 
                   )
# 2551 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps_recd));
# 9296 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2552 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 2) 
                   )
# 2552 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps_recd));
# 9306 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2558 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                mkRecdField _1 
                   )
# 2558 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'pathOrUnderscore));
# 9317 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2560 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           mkUnderscoreRecdField m 
                   )
# 2560 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'pathOrUnderscore));
# 9329 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2566 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (_3, Some _2) :: _1 
                   )
# 2566 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExprBindings));
# 9342 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2567 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 2567 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExprBindings));
# 9352 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2571 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (_1, Some _3) 
                   )
# 2571 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdBinding));
# 9364 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2573 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2573 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdBinding));
# 9378 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2578 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2578 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdBinding));
# 9393 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2583 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2583 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdBinding));
# 9407 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2588 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2588 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdBinding));
# 9422 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2601 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  true 
                   )
# 2601 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopDirection));
# 9432 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2602 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  false 
                   )
# 2602 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopDirection));
# 9442 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2608 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                          _1 
                   )
# 2608 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeWithTypeConstraints));
# 9453 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2612 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2612 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topTypeWithTypeConstraints));
# 9464 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2616 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            None 
                   )
# 2616 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 9474 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2618 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let ty,arity = _2 
                            let arity = (match arity with SynValInfo([],rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty,arity),rhs parseState 2)) 
                   )
# 2618 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 9487 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2624 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let dty,dmdata= _1 
                            let rty,(SynValInfo(dmdatas,rmdata)) = _3 
                            SynType.Fun(dty,rty,lhs parseState), (SynValInfo(dmdata::dmdatas, rmdata)) 
                   )
# 2624 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topType));
# 9501 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2628 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let ty,rmdata = _1 in ty, (SynValInfo([],(match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
# 2628 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topType));
# 9512 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2632 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let ty,mdata = _1 in let tys,mdatas = List.unzip _3 in (SynType.Tuple(List.map (fun ty -> (false,ty)) (ty ::tys), lhs parseState)),(mdata :: mdatas) 
                   )
# 2632 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topTupleType));
# 9524 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2634 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let ty,mdata = _1 in ty,[mdata] 
                   )
# 2634 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topTupleType));
# 9535 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2637 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 2637 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topTupleTypeElements));
# 9547 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2638 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                      [_1] 
                   )
# 2638 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topTupleTypeElements));
# 9558 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2643 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _3,SynArgInfo(false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 2643 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9572 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2647 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _4,SynArgInfo(true,Some _2) 
                   )
# 2647 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9584 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2649 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (_1,SynArgInfo(false,None)) 
                   )
# 2649 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9595 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2651 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _3,SynArgInfo(false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 2651 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9609 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2655 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _4,SynArgInfo(true,Some _2) 
                   )
# 2655 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9621 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2657 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1,SynArgInfo(false,None) 
                   )
# 2657 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9632 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2662 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 SynType.Fun(_1,_3,lhs parseState) 
                   )
# 2662 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynType));
# 9644 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2663 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                           _1 
                   )
# 2663 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynType));
# 9655 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2667 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                SynType.Tuple((false,_1) :: _3,lhs parseState) 
                   )
# 2667 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleType));
# 9667 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2670 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple((true, SynType.StaticConstant (SynConst.Int32 1, lhs parseState)):: _2, lhs parseState) 
                   )
# 2670 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleType));
# 9680 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2674 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                             SynType.Tuple((true,_1) :: _3, lhs parseState) 
                   )
# 2674 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleType));
# 9694 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2676 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                            _1 
                   )
# 2676 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleType));
# 9705 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2679 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                             (false,_1) :: _3 
                   )
# 2679 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleOrQuotTypeElements));
# 9717 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2681 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                             (true,_1) :: _3 
                   )
# 2681 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleOrQuotTypeElements));
# 9731 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2683 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                [(false,_1)] 
                   )
# 2683 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleOrQuotTypeElements));
# 9742 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2686 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                       _1 :: _3 
                   )
# 2686 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleTypeElements));
# 9754 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2687 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                [_1] 
                   )
# 2687 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleTypeElements));
# 9765 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2691 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynType.LongIdent(_1) 
                   )
# 2691 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeCon));
# 9776 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2695 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, -(fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState)  
                   )
# 2695 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeConPower));
# 9791 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2699 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           _1 
                   )
# 2699 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeConPower));
# 9802 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2703 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             let Position = lhs parseState
                             SynType.App(SynType.LongIdent(LongIdentWithDots([Ident("list", Position)], [])),
                                         None, [_2], [], None, true, Position)
                           
                   )
# 2703 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9817 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2709 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 2709 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9829 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2711 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 2711 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9841 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2713 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynType.App(_2, None, [_1], [], None, true, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2713 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9853 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2715 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2715 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9868 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2719 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2719 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9879 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2723 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             1 
                   )
# 2723 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayTypeSuffix));
# 9889 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2725 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             2 
                   )
# 2725 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayTypeSuffix));
# 9899 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2727 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             3 
                   )
# 2727 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayTypeSuffix));
# 9909 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2729 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             4 
                   )
# 2729 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayTypeSuffix));
# 9919 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2733 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let typeArgs, commas = _4 in _1 :: _3 :: List.rev typeArgs, (rhs parseState 2)::(List.rev commas) 
                   )
# 2733 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypePrefixArguments));
# 9932 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2737 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let typeArgs, commas = _1
                             _3 :: typeArgs, (rhs parseState 2)::commas 
                   )
# 2737 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeArgListElements));
# 9945 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2740 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [], [] 
                   )
# 2740 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeArgListElements));
# 9955 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2744 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           _1 
                   )
# 2744 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerType));
# 9966 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2746 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState) 
                   )
# 2746 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerType));
# 9981 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2750 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            SynType.MeasurePower(_1, - (fst _4), lhs parseState) 
                   )
# 2750 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerType));
# 9995 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2756 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 2756 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 10008 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2759 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 2759 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 10021 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2762 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWhole = unionRanges (rhs parseState 1) _2.Range  // note: use "rhs parseState 1" to deal with parens in "(int) list"
                             deprecatedWithError (FSComp.SR.parsNonAtomicType()) mWhole;
                             SynType.App(_2, None, [_1], [], None, true, mWhole) 
                   )
# 2762 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 10035 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2766 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2766 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 10050 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2770 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2770 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 10061 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2775 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           _1 
                   )
# 2775 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 10072 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2777 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState) 
                   )
# 2777 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 10088 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2782 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            SynType.MeasurePower(_1, - (fst _4), lhs parseState) 
                   )
# 2782 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 10103 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2791 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2791 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10114 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2793 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynType.Anon (lhs parseState) 
                   )
# 2793 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10124 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2795 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 2795 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10136 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2797 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                            _2 
                   )
# 2797 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10149 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2800 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynType.StaticConstant(_1, rhs parseState 1) 
                   )
# 2800 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10160 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2802 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m = rhs parseState 1
                            SynType.StaticConstant(SynConst.String (null, m), m) 
                   )
# 2802 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10171 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2805 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynType.StaticConstant(SynConst.Bool false,lhs parseState) 
                   )
# 2805 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10181 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2807 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynType.StaticConstant(SynConst.Bool true,lhs parseState) 
                   )
# 2807 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10191 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2809 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (* silent recovery *) SynType.Anon (lhs parseState) 
                   )
# 2809 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10202 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2811 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mLessThan,mGreaterThan,args,commas,mWhole = _2 in SynType.App(_1, Some(mLessThan), args, commas, mGreaterThan, false, unionRanges _1.Range mWhole) 
                   )
# 2811 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10214 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2813 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            _1 
                   )
# 2813 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10227 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * bool     * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2819 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mLessThan, mGreaterThan, parsedOk, args, commas, mAll = _1
                            if parsedOk then // if someone has "foo<bar" without a closing greater-than, then the lexfilter does not introduce a HPA, even though it is adjacent
                                warning(Error(FSComp.SR.parsNonAdjacentTyargs(),rhs parseState 1))
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 2819 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * SynType list * Position list * Position));
# 10241 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * bool     * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2824 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mLessThan, mGreaterThan, _, args, commas, mAll = _2
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 2824 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * SynType list * Position list * Position));
# 10253 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2829 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let typeArgs, commas = _5
                            (rhs parseState 1), Some(rhs parseState 6), true, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), lhs parseState 
                   )
# 2829 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10269 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2832 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _6 then 
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingGreaterThan())
                            let typeArgs, commas = _5
                            let nextToken = rhs parseState 6
                            let zeroWidthAtStartOfNextToken = nextToken
                            (rhs parseState 1), None, false, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 2832 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10291 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2842 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 4
                            let zeroWidthAtStartOfNextToken = nextToken
                            (rhs parseState 1), None, false, [_2], [rhs parseState 3], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 2842 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10307 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2848 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (rhs parseState 1), Some(rhs parseState 3), true, [_2], [], lhs parseState 
                   )
# 2848 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10320 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2850 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then 
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsMissingGreaterThan())
                            (rhs parseState 1), None, false, [_2], [], (rhs2 parseState 1 2) 
                   )
# 2850 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10337 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2857 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (rhs parseState 1), Some(rhs parseState 2), true, [], [], lhs parseState 
                   )
# 2857 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10349 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2859 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _2 then  
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsExpectedTypeAfterToken())
                            else
                                reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 2
                            let zeroWidthAtStartOfNextToken = nextToken
                            (rhs parseState 1), None, false, [], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 2859 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10367 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2869 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2869 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeArgActual));
# 10378 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2873 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2873 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 10389 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2878 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 2878 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeArg));
# 10402 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2880 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynMeasure.Anon (lhs parseState) 
                   )
# 2880 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeArg));
# 10414 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2884 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynMeasure.Named(_1.Lid, _1.Range) 
                   )
# 2884 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeAtom));
# 10425 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2887 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 2887 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeAtom));
# 10437 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2891 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2891 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypePower));
# 10448 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2894 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, - (fst _3), lhs parseState)
                            else SynMeasure.Power(_1, fst _3, lhs parseState) 
                   )
# 2894 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypePower));
# 10463 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2899 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Power(_1, - (fst _4), lhs parseState) 
                   )
# 2899 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypePower));
# 10477 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2903 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
# 2903 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypePower));
# 10489 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2908 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           [_1] 
                   )
# 2908 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeSeq));
# 10500 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2910 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           _1 :: _2 
                   )
# 2910 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeSeq));
# 10512 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2914 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           SynMeasure.Seq(_1, lhs parseState) 
                   )
# 2914 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeExpr));
# 10523 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2916 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           SynMeasure.Product(_1, _3, lhs parseState) 
                   )
# 2916 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeExpr));
# 10535 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2918 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs parseState)
                           else SynMeasure.Divide(_1, _3, lhs parseState) 
                   )
# 2918 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeExpr));
# 10550 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2922 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs parseState) 
                   )
# 2922 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeExpr));
# 10563 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2927 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let id = mkSynId (lhs parseState) (_2).idText
                             Typar(id ,NoStaticReq,false) 
                   )
# 2927 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynTypar));
# 10575 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2930 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2930 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynTypar));
# 10586 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2934 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            Typar(_2,HeadTypeStaticReq,false) 
                   )
# 2934 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticallyKnownHeadTypar));
# 10599 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2941 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            ident(_1,rhs parseState 1) 
                   )
# 2941 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Ident));
# 10610 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2945 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([ident(MangledGlobalName,rhs parseState 1)],[]) 
                   )
# 2945 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 10620 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2947 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([Ident("Create", rhs parseState 1)],[]) 
                   )
# 2947 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 10630 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2949 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([_1],[]) 
                   )
# 2949 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 10641 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2951 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid @ [_3], dotms @ [rhs parseState 2]) 
                   )
# 2951 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 10653 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2953 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid, dotms @ [rhs parseState 2])  
                   )
# 2953 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 10666 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2958 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             ident(CompileOpName _2,rhs parseState 2) 
                   )
# 2958 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opName));
# 10678 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2960 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (lhs parseState) (FSComp.SR.parsErrorParsingAsOperatorName()); ident(CompileOpName "****",rhs parseState 2) 
                   )
# 2960 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opName));
# 10689 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2962 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             ident(CompileOpName "*",rhs parseState 1) 
                   )
# 2962 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opName));
# 10699 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2966 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let text = ("|"^String.concat "|" (List.rev _2) ^ "|")
                            ident(text,rhs2 parseState 2 3) 
                   )
# 2966 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opName));
# 10712 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2970 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let text = ("|"^String.concat "|" (List.rev _2) ^ ".|" )
                            ident(text,rhs2 parseState 2 5) 
                   )
# 2970 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opName));
# 10725 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2975 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not (IsValidPrefixOperatorDefinitionName _1) then 
                                 reportParseErrorAt (lhs parseState) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                             _1 
                   )
# 2975 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10738 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2978 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               _1 
                   )
# 2978 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10749 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2979 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                            _1 
                   )
# 2979 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10760 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2980 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                            _1 
                   )
# 2980 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10771 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2981 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                         _1 
                   )
# 2981 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10782 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2982 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        _1 
                   )
# 2982 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10793 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2983 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          _1 
                   )
# 2983 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10804 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2984 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 _1 
                   )
# 2984 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10815 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2985 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  "$" 
                   )
# 2985 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10825 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2986 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              _1 
                   )
# 2986 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10836 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2987 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 "-" 
                   )
# 2987 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10846 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2988 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                "*" 
                   )
# 2988 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10856 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2989 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  "=" 
                   )
# 2989 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10866 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2990 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              "or" 
                   )
# 2990 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10876 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2991 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                "<" 
                   )
# 2991 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10887 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2992 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   ">" 
                   )
# 2992 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10898 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2993 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 "?" 
                   )
# 2993 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10908 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2994 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               "&" 
                   )
# 2994 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10918 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2995 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   "&&" 
                   )
# 2995 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10928 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2996 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   "||" 
                   )
# 2996 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10938 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2997 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        ":=" 
                   )
# 2997 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10948 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2999 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                  deprecatedOperator (lhs parseState); 
                             _1 
                   )
# 2999 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10961 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3002 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      _1 
                   )
# 3002 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10972 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3003 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   ".." 
                   )
# 3003 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10982 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3004 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           ".. .." 
                   )
# 3004 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10992 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3006 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                             fst _1 
                   )
# 3006 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 11005 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3011 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not (isUpper _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                             _1 
                   )
# 3011 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'barName));
# 11017 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3016 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_2] 
                   )
# 3016 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'barNames));
# 11028 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'barName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3018 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 
                   )
# 3018 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'barNames));
# 11040 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3022 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 3022 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'identOrOp));
# 11051 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3024 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 3024 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'identOrOp));
# 11062 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3030 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([_1],[]) 
                   )
# 3030 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 11073 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3032 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([_1],[]) 
                   )
# 3032 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 11084 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3034 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([Ident("Create", rhs parseState 1)],[]) 
                   )
# 3034 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 11094 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3036 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _3 
                            LongIdentWithDots(_1 :: lid, rhs parseState 2 :: dotms) 
                   )
# 3036 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 11107 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3039 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (* silent recovery *) LongIdentWithDots([_1],[rhs parseState 2]) 
                   )
# 3039 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 11118 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3044 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      _1 
                   )
# 3044 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'nameop));
# 11129 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3047 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3047 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topSeparator));
# 11139 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3048 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               
                   )
# 3048 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topSeparator));
# 11149 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3049 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3049 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topSeparator));
# 11159 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3052 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                            
                   )
# 3052 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topSeparators));
# 11170 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3053 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                      
                   )
# 3053 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topSeparators));
# 11182 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3056 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3056 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interactiveSeparator));
# 11192 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3057 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3057 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interactiveSeparator));
# 11202 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3060 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    
                   )
# 3060 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interactiveSeparators));
# 11213 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3061 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                      
                   )
# 3061 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interactiveSeparators));
# 11225 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3064 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                          
                   )
# 3064 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_interactiveSeparators));
# 11237 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3065 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                  
                   )
# 3065 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_interactiveSeparators));
# 11247 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3068 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                          
                   )
# 3068 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_topSeparators));
# 11259 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3069 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                
                   )
# 3069 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_topSeparators));
# 11269 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3072 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3072 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps));
# 11279 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3073 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3073 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps));
# 11289 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3074 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               
                   )
# 3074 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps));
# 11299 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3075 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               
                   )
# 3075 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps));
# 11309 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3080 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                   )
# 3080 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'declEnd));
# 11319 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3082 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3082 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'declEnd));
# 11329 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3084 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                   )
# 3084 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'declEnd));
# 11339 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3089 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                   )
# 3089 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_declEnd));
# 11349 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3091 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                   )
# 3091 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_declEnd));
# 11359 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3093 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                   )
# 3093 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_declEnd));
# 11369 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3095 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                   )
# 3095 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_declEnd));
# 11379 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3098 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    
                   )
# 3098 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_ODECLEND));
# 11389 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3099 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    
                   )
# 3099 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_ODECLEND));
# 11399 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3102 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs parseState); () 
                   )
# 3102 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'deprecated_opt_equals));
# 11409 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3103 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      
                   )
# 3103 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'deprecated_opt_equals));
# 11419 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3106 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3106 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_OBLOCKSEP));
# 11429 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3107 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    
                   )
# 3107 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_OBLOCKSEP));
# 11439 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3110 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                
                   )
# 3110 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_seps));
# 11450 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3111 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                
                   )
# 3111 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_seps));
# 11460 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3114 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               true 
                   )
# 3114 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_rec));
# 11470 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3115 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               false 
                   )
# 3115 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_rec));
# 11480 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3118 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3118 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_bar));
# 11490 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3119 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3119 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_bar));
# 11500 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3122 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  true 
                   )
# 3122 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_inline));
# 11510 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3123 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  false 
                   )
# 3123 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_inline));
# 11520 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3126 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   true 
                   )
# 3126 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_mutable));
# 11530 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3127 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   false 
                   )
# 3127 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_mutable));
# 11540 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3130 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     true 
                   )
# 3130 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_ref));
# 11550 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3131 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     false 
                   )
# 3131 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_ref));
# 11560 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3134 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3134 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'doToken));
# 11570 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3135 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3135 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'doToken));
# 11580 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3138 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                
                   )
# 3138 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'doneDeclEnd));
# 11590 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3139 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    
                   )
# 3139 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'doneDeclEnd));
# 11600 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3142 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs parseState); 
                   )
# 3142 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'structOrBegin));
# 11610 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3143 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 
                   )
# 3143 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'structOrBegin));
# 11620 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3146 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 3146 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'sigOrBegin));
# 11630 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3147 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 
                   )
# 3147 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'sigOrBegin));
# 11640 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3150 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 3150 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'colonOrEquals));
# 11650 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3151 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  
                   )
# 3151 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'colonOrEquals));
# 11660 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3154 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3154 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HASH));
# 11670 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3157 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                     
                   )
# 3157 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 11680 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3158 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                     
                   )
# 3158 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 11690 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3159 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                   )
# 3159 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 11700 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3162 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 
                   )
# 3162 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 11710 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3163 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                   )
# 3163 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 11720 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3166 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                         _2 
                   )
# 3166 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'type_keyword));
# 11731 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3167 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        false 
                   )
# 3167 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'type_keyword));
# 11741 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3168 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                false 
                   )
# 3168 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'type_keyword));
# 11751 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3169 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        true 
                   )
# 3169 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'type_keyword));
# 11761 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3170 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  false 
                   )
# 3170 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'type_keyword));
# 11771 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3173 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                             
                   )
# 3173 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'module_keyword));
# 11782 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3174 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          
                   )
# 3174 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'module_keyword));
# 11792 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3175 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  
                   )
# 3175 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'module_keyword));
# 11802 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3178 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                     
                   )
# 3178 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rbrace));
# 11813 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3179 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          
                   )
# 3179 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rbrace));
# 11823 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3180 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  
                   )
# 3180 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rbrace));
# 11833 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3183 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                     
                   )
# 3183 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rparen));
# 11844 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3184 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          
                   )
# 3184 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rparen));
# 11854 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3185 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  
                   )
# 3185 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rparen));
# 11864 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3188 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                           
                   )
# 3188 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'oblockend));
# 11875 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3189 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                             
                   )
# 3189 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'oblockend));
# 11885 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3190 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3190 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'oblockend));
# 11895 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3193 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                            false 
                   )
# 3193 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11905 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3194 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              false 
                   )
# 3194 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11915 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3195 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              false 
                   )
# 3195 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11925 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3196 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 false 
                   )
# 3196 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11935 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3197 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   _1 
                   )
# 3197 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11946 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3200 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                            false 
                   )
# 3200 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 11956 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3201 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              false 
                   )
# 3201 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 11966 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3202 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              false 
                   )
# 3202 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 11976 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3203 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              false 
                   )
# 3203 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 11986 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3204 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 false 
                   )
# 3204 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 11996 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3205 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   _1 
                   )
# 3205 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
|]
# 12008 "C:\Users\Mudy\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 224;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf : Program =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
