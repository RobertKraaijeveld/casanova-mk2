// Implementation file for parser generated by fsyacc
module CasanovaCompiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"

#nowarn "1182"  // generated code has lots of unused "parseState"   
#nowarn "62"
open Microsoft.FSharp.Text.Parsing
open System
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Compiler.ErrorLogger
open Internals.Utils
open CasanovaCompiler.ParseAST

type Position = Microsoft.FSharp.Text.Lexing.Position

let printfn (s : string) = System.Console.WriteLine(s)

#if DEBUG
let debugPrint(s) =
    //if Internal.Utilities.Text.Parsing.Flags.debug then 
        printfn s
#else
let debugPrint(s) = ignore s 
#endif


let isSome x = match x with None -> false | _ -> true
let patFromParseError (e:SynPat) = SynPat.FromParseError(e, e.Range)
let isNone x = match x with None -> true | _ -> false
let frontAndBack l = 
  let rec loop acc l = 
    match l with
    | [] -> 
      System.Diagnostics.Debug.Assert(false, "empty list")
      invalidArg "l" "empty list" 
    | [h] -> List.rev acc,h
    | h::t -> loop  (h::acc) t
  loop [] l
let isNil x = match x with [] -> true | _ -> false
let nonNil x = match x with [] -> false | _ -> true
let rec last l = match l with [] -> failwith "last" | [h] -> h | _::t -> last t
let isUpper (s:string) = 
    s.Length >= 1 && System.Char.IsUpper s.[0] && not (System.Char.IsLower s.[0])
let isNull (x : 'T) = match (x :> obj) with null -> true | _ -> false
let isNonNull (x : 'T) = match (x :> obj) with null -> false | _ -> true
let nonNull msg x = if isNonNull x then x else failwith ("null: " ^ msg) 
let mkRange f b e = b
let IsValidPrefixOperatorUse s = 
    match s with 
    | "?+" | "?-" | "+" | "-" | "+." | "-." | "%" | "%%" | "&" | "&&" -> true
    | _ -> s.[0] = '!' || (s.[0] = '~' && String.forall (fun c -> c = s.[0]) s)
    
let IsValidPrefixOperatorDefinitionName s = 
    match s with 
    | "~?+" | "~?-" | "~+" | "~-" | "~+." | "~-." | "~%" | "~%%" | "~&" | "~&&" -> true
    | _ -> (s.[0] = '!' && s <> "!=") || (s.[0] = '~' && String.forall (fun c -> c = s.[0]) s)
        
let MangledGlobalName = "`global`"

let opNameCons = CompileOpName "::"
let opNameNil = CompileOpName "[]"
let opNameEquals = CompileOpName "="
let opNameEqualsNullable = CompileOpName "=?"
let opNameNullableEquals = CompileOpName "?="
let opNameNullableEqualsNullable = CompileOpName "?=?"
let mkSynOptionalExpr m xopt = 
    match xopt with 
    | None -> mkSynLidGet m [] "None"
    | Some x  -> SynExpr.App(ExprAtomicFlag.NonAtomic, false, mkSynLidGet m [] "Some",x,m)



let mkUnderscoreRecdField m = LongIdentWithDots([ident("_", m)], []), false


let mkSynDoBinding (strict,expr,m) = 
    Binding ((if strict then SynPat.Const(SynConst.Unit,m) else SynPat.Wild m),
             expr,SynInfo.emptySynValData, m)



let rebindRanges first fields lastSep = 
    let rec run (name, value) l acc = 
        match l with
        | [] -> List.rev ((name, value, lastSep)::acc)
        | (f, m)::xs -> run f xs ((name, value, m)::acc)
    run first fields []

let reportParseErrorAt m s = errorR(Error(s,m))

let unionRangeWithPos (r:Position) p = r

let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_,_,m)                      -> reportParseErrorAt m (FSComp.SR.parsEofInHashIf())
  | LexCont.String (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInString())
  | LexCont.TripleQuoteString (_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteString())
  | LexCont.VerbatimString (_,m)                  -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())
  | LexCont.Comment (_,_,m)                       -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.SingleLineComment (_,_,m)             -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.StringInComment (_,_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())
  | LexCont.VerbatimStringInComment (_,_,m)       -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())
  | LexCont.TripleQuoteStringInComment (_,_,m)    -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteStringInComment())
  | LexCont.MLOnly (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())
  | LexCont.EndLine(LexerEndlineContinuation.Skip(_,_,m)) -> reportParseErrorAt m (FSComp.SR.parsEofInDirective())
  | LexCont.EndLine(LexerEndlineContinuation.Token(stack))
  | LexCont.Token(stack) -> 
      match stack with 
      | [] -> ()
      | (_,m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())

//                BindingSetPreAttrs(letRange, isRec, isUse, builderFunction, wholeRange,_)
//type BindingSet = BindingSetPreAttrs of Position * bool * bool *  SynBinding list * Position

let rec split pred l =
    match l with
    | [] -> [],[]
    | x :: xs ->
        let res1,res2 = split pred xs
        if pred x then
            (x :: res1),res2
        else
            res1,(x :: res2)

let mkLocalBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_,is_wait),body) = 
   let decls = declsPreAttrs
   SynExpr.LetOrBindingOrUse (isRec,isUse,is_wait,decls,body,mWhole) 

let mkDefnBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_bindingSetRange,_),attrs,vis,attrsm) = 
    []

let idOfPat m p = 
    match p with 
    | SynPat.LongIdent(LongIdentWithDots([id],_),_,_,_) -> id
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if nonNil a1 && nonNil a2 then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed());
    a1 @ a2

let unionRangeWithListBy projectRangeFromThing m listOfThing = 
    (m, listOfThing) ||> List.fold (fun m thing -> unionRanges m (projectRangeFromThing thing))

let rangeOfLongIdent(lid:LongIdent) =
    System.Diagnostics.Debug.Assert(not lid.IsEmpty, "the parser should never produce a long-id that is the empty list") 
    (lid.Head.idRange,lid) ||> unionRangeWithListBy (fun id -> id.idRange) 


# 157 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (Position * string * LexerWhitespaceContinuation)
  | HASH_ELSE of (Position * string * LexerWhitespaceContinuation)
  | HASH_ENDIF of (Position * string * LexerWhitespaceContinuation)
  | COMMENT of (LexerWhitespaceContinuation)
  | WHITESPACE of (LexerWhitespaceContinuation)
  | HASH_LINE of (LexerWhitespaceContinuation)
  | HASH_LIGHT of (LexerWhitespaceContinuation)
  | INACTIVECODE of (LexerWhitespaceContinuation)
  | LINE_COMMENT of (LexerWhitespaceContinuation)
  | STRING_TEXT of (LexerWhitespaceContinuation)
  | EOF of (LexerWhitespaceContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | OBLOCKEND_COMING_SOON
  | OBLOCKEND_IS_HERE
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OBODY_OPERATOR
  | OTHEN
  | ODO_BANG
  | ODO
  | OSELECT
  | OWHERE
  | OYIELD
  | OWHEN
  | OPARALLEL_OPERATOR
  | OWAIT
  | OBINDER of (string)
  | OLET of (bool)
  | OLET_WAIT of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | TYPE_COMING_SOON
  | TYPE_IS_HERE
  | MODULE_COMING_SOON
  | MODULE_IS_HERE
  | RULE
  | CREATE
  | WAIT
  | WAIT_UNTIL
  | YIELD
  | SELECT_OPERATOR
  | PARALLEL_OPERATOR
  | INT_SELECT_OPERATOR
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE
  | RBRACE_COMING_SOON
  | RBRACE_IS_HERE
  | MINUS
  | DOLLAR
  | LBRACE_LESS
  | BAR_RBRACK
  | GREATER_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACK_LESS
  | LBRACE
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | RPAREN_COMING_SOON
  | RPAREN_IS_HERE
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | IMPORT
  | OPEN
  | OR
  | REC
  | THEN
  | BODY_OPERATOR
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | CONST
  | WORLD_ENTITY
  | MASTER
  | SLAVE
  | CONNECT
  | DISCONNECT
  | VIRTUAL
  | ENTITY
  | CONNECTING
  | CONNECTED
  | LAZY
  | OLAZY
  | MATCH
  | MUTABLE
  | REFERENCE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | JOIN_IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD_BANG of (bool)
  | LET_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | NATIVEINT of (int64)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string)
  | STRING of (string)
  | BYTEARRAY of (byte[])
  | A
  | B
  | C
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_OBLOCKEND_COMING_SOON
    | TOKEN_OBLOCKEND_IS_HERE
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OBODY_OPERATOR
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OSELECT
    | TOKEN_OWHERE
    | TOKEN_OYIELD
    | TOKEN_OWHEN
    | TOKEN_OPARALLEL_OPERATOR
    | TOKEN_OWAIT
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_OLET_WAIT
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_TYPE_COMING_SOON
    | TOKEN_TYPE_IS_HERE
    | TOKEN_MODULE_COMING_SOON
    | TOKEN_MODULE_IS_HERE
    | TOKEN_RULE
    | TOKEN_CREATE
    | TOKEN_WAIT
    | TOKEN_WAIT_UNTIL
    | TOKEN_YIELD
    | TOKEN_SELECT_OPERATOR
    | TOKEN_PARALLEL_OPERATOR
    | TOKEN_INT_SELECT_OPERATOR
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE
    | TOKEN_RBRACE_COMING_SOON
    | TOKEN_RBRACE_IS_HERE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_LBRACE_LESS
    | TOKEN_BAR_RBRACK
    | TOKEN_GREATER_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_LBRACE
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_RPAREN_COMING_SOON
    | TOKEN_RPAREN_IS_HERE
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_IMPORT
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_BODY_OPERATOR
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_CONST
    | TOKEN_WORLD_ENTITY
    | TOKEN_MASTER
    | TOKEN_SLAVE
    | TOKEN_CONNECT
    | TOKEN_DISCONNECT
    | TOKEN_VIRTUAL
    | TOKEN_ENTITY
    | TOKEN_CONNECTING
    | TOKEN_CONNECTED
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MUTABLE
    | TOKEN_REFERENCE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_JOIN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD_BANG
    | TOKEN_LET_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_NATIVEINT
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_A
    | TOKEN_B
    | TOKEN_C
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_stringOrKeywordString
    | NONTERM_cnvModuleIntro
    | NONTERM_casanovaModuleImpl
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_moduleDefn
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_opt_signature
    | NONTERM_tyconDefnAugmentation
    | NONTERM_opt_literalValue
    | NONTERM_memberFlags
    | NONTERM_memberSpecFlags
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_cnvTyconDefnRhs
    | NONTERM_tyconDefnRhs
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMembersAtLeastOne
    | NONTERM_memberCore
    | NONTERM_createMemberCoreWithParams
    | NONTERM_createMemberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_opt_typ
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_declVisibility
    | NONTERM_opt_classDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_tyconDefnOrSpfnCnvRepr
    | NONTERM_braceFieldOrRuleDeclList
    | NONTERM_fieldOrRuleList
    | NONTERM_topReturnTypeWithTypeConstraints
    | NONTERM_cnvFieldInitCore
    | NONTERM_fieldOrRule
    | NONTERM_inherit_idents
    | NONTERM_braceFieldDeclList
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_typarAlts
    | NONTERM_unionRepr
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_importDecl
    | NONTERM_importLibrary
    | NONTERM_defnBindings
    | NONTERM_defnBindingsWait
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetWaitBindings
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_anonLambdaExpr
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_createBindingPattern
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_constrPattern
    | NONTERM_opt_explicitValTyparDecls2
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_fromAssignmentExprBlock
    | NONTERM_typedSeqExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSeqExprBlockR
    | NONTERM_typedSeqExpr
    | NONTERM_seqExpr
    | NONTERM_recover
    | NONTERM_choices
    | NONTERM_intChoices
    | NONTERM_choiceBody
    | NONTERM_parallel
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_fromExprCondition
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tuplePat
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_optRange
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_staticallyKnownHeadTyparAlts
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_monadicExprBody
    | NONTERM_listExprElements
    | NONTERM_monadicExprInitial
    | NONTERM_rangeSequenceExpr
    | NONTERM_monadicSingleLineQualifiersThenArrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_fromLoopBinder
    | NONTERM_fromTupleExpr
    | NONTERM_forLoopRange
    | NONTERM_opt_curriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_recdExpr
    | NONTERM_opt_seps_recd
    | NONTERM_seps_recd
    | NONTERM_pathOrUnderscore
    | NONTERM_recdExprBindings
    | NONTERM_recdBinding
    | NONTERM_forLoopDirection
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_tupleTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrefixArguments
    | NONTERM_typeArgListElements
    | NONTERM_powerType
    | NONTERM_appTypeNonAtomicDeprecated
    | NONTERM_powerTypeNonAtomicDeprecated
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_typeArgActual
    | NONTERM_typeArgActualOrDummyIfEmpty
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_barName
    | NONTERM_barNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_interactiveSeparators
    | NONTERM_opt_interactiveSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_opt_ref
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_opt_HASH
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP
    | NONTERM_type_keyword
    | NONTERM_module_keyword
    | NONTERM_rbrace
    | NONTERM_rparen
    | NONTERM_oblockend
    | NONTERM_ends_other_than_rparen_coming_soon_or_recover
    | NONTERM_ends_coming_soon_or_recover

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | OINTERFACE_MEMBER  -> 13 
  | OBLOCKEND  -> 14 
  | OBLOCKEND_COMING_SOON  -> 15 
  | OBLOCKEND_IS_HERE  -> 16 
  | ORIGHT_BLOCK_END  -> 17 
  | ODECLEND  -> 18 
  | OEND  -> 19 
  | OBLOCKSEP  -> 20 
  | OBLOCKBEGIN  -> 21 
  | ORESET  -> 22 
  | OFUN  -> 23 
  | OFUNCTION  -> 24 
  | OWITH  -> 25 
  | OELSE  -> 26 
  | OBODY_OPERATOR  -> 27 
  | OTHEN  -> 28 
  | ODO_BANG  -> 29 
  | ODO  -> 30 
  | OSELECT  -> 31 
  | OWHERE  -> 32 
  | OYIELD  -> 33 
  | OWHEN  -> 34 
  | OPARALLEL_OPERATOR  -> 35 
  | OWAIT  -> 36 
  | OBINDER _ -> 37 
  | OLET _ -> 38 
  | OLET_WAIT _ -> 39 
  | HIGH_PRECEDENCE_TYAPP  -> 40 
  | HIGH_PRECEDENCE_PAREN_APP  -> 41 
  | HIGH_PRECEDENCE_BRACK_APP  -> 42 
  | TYPE_COMING_SOON  -> 43 
  | TYPE_IS_HERE  -> 44 
  | MODULE_COMING_SOON  -> 45 
  | MODULE_IS_HERE  -> 46 
  | RULE  -> 47 
  | CREATE  -> 48 
  | WAIT  -> 49 
  | WAIT_UNTIL  -> 50 
  | YIELD  -> 51 
  | SELECT_OPERATOR  -> 52 
  | PARALLEL_OPERATOR  -> 53 
  | INT_SELECT_OPERATOR  -> 54 
  | EXTERN  -> 55 
  | VOID  -> 56 
  | PUBLIC  -> 57 
  | PRIVATE  -> 58 
  | INTERNAL  -> 59 
  | GLOBAL  -> 60 
  | STATIC  -> 61 
  | MEMBER  -> 62 
  | CLASS  -> 63 
  | ABSTRACT  -> 64 
  | OVERRIDE  -> 65 
  | DEFAULT  -> 66 
  | CONSTRUCTOR  -> 67 
  | INHERIT  -> 68 
  | GREATER_RBRACK  -> 69 
  | STRUCT  -> 70 
  | SIG  -> 71 
  | BAR  -> 72 
  | RBRACK  -> 73 
  | RBRACE  -> 74 
  | RBRACE_COMING_SOON  -> 75 
  | RBRACE_IS_HERE  -> 76 
  | MINUS  -> 77 
  | DOLLAR  -> 78 
  | LBRACE_LESS  -> 79 
  | BAR_RBRACK  -> 80 
  | GREATER_RBRACE  -> 81 
  | UNDERSCORE  -> 82 
  | SEMICOLON_SEMICOLON  -> 83 
  | LARROW  -> 84 
  | EQUALS  -> 85 
  | LBRACK  -> 86 
  | LBRACK_BAR  -> 87 
  | LBRACK_LESS  -> 88 
  | LBRACE  -> 89 
  | QMARK  -> 90 
  | QMARK_QMARK  -> 91 
  | DOT  -> 92 
  | COLON  -> 93 
  | COLON_COLON  -> 94 
  | COLON_GREATER  -> 95 
  | COLON_QMARK_GREATER  -> 96 
  | COLON_QMARK  -> 97 
  | COLON_EQUALS  -> 98 
  | SEMICOLON  -> 99 
  | WHEN  -> 100 
  | WHILE  -> 101 
  | WITH  -> 102 
  | HASH  -> 103 
  | AMP  -> 104 
  | AMP_AMP  -> 105 
  | QUOTE  -> 106 
  | LPAREN  -> 107 
  | RPAREN  -> 108 
  | RPAREN_COMING_SOON  -> 109 
  | RPAREN_IS_HERE  -> 110 
  | STAR  -> 111 
  | COMMA  -> 112 
  | RARROW  -> 113 
  | GREATER_BAR_RBRACK  -> 114 
  | LPAREN_STAR_RPAREN  -> 115 
  | IMPORT  -> 116 
  | OPEN  -> 117 
  | OR  -> 118 
  | REC  -> 119 
  | THEN  -> 120 
  | BODY_OPERATOR  -> 121 
  | TO  -> 122 
  | TRUE  -> 123 
  | TRY  -> 124 
  | TYPE  -> 125 
  | VAL  -> 126 
  | INLINE  -> 127 
  | INTERFACE  -> 128 
  | INSTANCE  -> 129 
  | CONST  -> 130 
  | WORLD_ENTITY  -> 131 
  | MASTER  -> 132 
  | SLAVE  -> 133 
  | CONNECT  -> 134 
  | DISCONNECT  -> 135 
  | VIRTUAL  -> 136 
  | ENTITY  -> 137 
  | CONNECTING  -> 138 
  | CONNECTED  -> 139 
  | LAZY  -> 140 
  | OLAZY  -> 141 
  | MATCH  -> 142 
  | MUTABLE  -> 143 
  | REFERENCE  -> 144 
  | NEW  -> 145 
  | OF  -> 146 
  | EXCEPTION  -> 147 
  | FALSE  -> 148 
  | FOR  -> 149 
  | FUN  -> 150 
  | FUNCTION  -> 151 
  | IF  -> 152 
  | IN  -> 153 
  | JOIN_IN  -> 154 
  | FINALLY  -> 155 
  | DO_BANG  -> 156 
  | AND  -> 157 
  | AS  -> 158 
  | ASSERT  -> 159 
  | OASSERT  -> 160 
  | ASR  -> 161 
  | BEGIN  -> 162 
  | DO  -> 163 
  | DONE  -> 164 
  | DOWNTO  -> 165 
  | ELSE  -> 166 
  | ELIF  -> 167 
  | END  -> 168 
  | DOT_DOT  -> 169 
  | BAR_BAR  -> 170 
  | UPCAST  -> 171 
  | DOWNCAST  -> 172 
  | NULL  -> 173 
  | RESERVED  -> 174 
  | MODULE  -> 175 
  | NAMESPACE  -> 176 
  | DELEGATE  -> 177 
  | CONSTRAINT  -> 178 
  | BASE  -> 179 
  | LQUOTE _ -> 180 
  | RQUOTE _ -> 181 
  | RQUOTE_DOT _ -> 182 
  | PERCENT_OP _ -> 183 
  | BINDER _ -> 184 
  | LESS _ -> 185 
  | GREATER _ -> 186 
  | LET _ -> 187 
  | YIELD_BANG _ -> 188 
  | LET_BANG _ -> 189 
  | BIGNUM _ -> 190 
  | DECIMAL _ -> 191 
  | CHAR _ -> 192 
  | IEEE64 _ -> 193 
  | IEEE32 _ -> 194 
  | NATIVEINT _ -> 195 
  | UNATIVEINT _ -> 196 
  | UINT64 _ -> 197 
  | UINT32 _ -> 198 
  | UINT16 _ -> 199 
  | UINT8 _ -> 200 
  | INT64 _ -> 201 
  | INT32 _ -> 202 
  | INT32_DOT_DOT _ -> 203 
  | INT16 _ -> 204 
  | INT8 _ -> 205 
  | FUNKY_OPERATOR_NAME _ -> 206 
  | ADJACENT_PREFIX_OP _ -> 207 
  | PLUS_MINUS_OP _ -> 208 
  | INFIX_AMP_OP _ -> 209 
  | INFIX_STAR_DIV_MOD_OP _ -> 210 
  | PREFIX_OP _ -> 211 
  | INFIX_BAR_OP _ -> 212 
  | INFIX_AT_HAT_OP _ -> 213 
  | INFIX_COMPARE_OP _ -> 214 
  | INFIX_STAR_STAR_OP _ -> 215 
  | IDENT _ -> 216 
  | KEYWORD_STRING _ -> 217 
  | STRING _ -> 218 
  | BYTEARRAY _ -> 219 
  | A  -> 220 
  | B  -> 221 
  | C  -> 222 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_OINTERFACE_MEMBER 
  | 14 -> TOKEN_OBLOCKEND 
  | 15 -> TOKEN_OBLOCKEND_COMING_SOON 
  | 16 -> TOKEN_OBLOCKEND_IS_HERE 
  | 17 -> TOKEN_ORIGHT_BLOCK_END 
  | 18 -> TOKEN_ODECLEND 
  | 19 -> TOKEN_OEND 
  | 20 -> TOKEN_OBLOCKSEP 
  | 21 -> TOKEN_OBLOCKBEGIN 
  | 22 -> TOKEN_ORESET 
  | 23 -> TOKEN_OFUN 
  | 24 -> TOKEN_OFUNCTION 
  | 25 -> TOKEN_OWITH 
  | 26 -> TOKEN_OELSE 
  | 27 -> TOKEN_OBODY_OPERATOR 
  | 28 -> TOKEN_OTHEN 
  | 29 -> TOKEN_ODO_BANG 
  | 30 -> TOKEN_ODO 
  | 31 -> TOKEN_OSELECT 
  | 32 -> TOKEN_OWHERE 
  | 33 -> TOKEN_OYIELD 
  | 34 -> TOKEN_OWHEN 
  | 35 -> TOKEN_OPARALLEL_OPERATOR 
  | 36 -> TOKEN_OWAIT 
  | 37 -> TOKEN_OBINDER 
  | 38 -> TOKEN_OLET 
  | 39 -> TOKEN_OLET_WAIT 
  | 40 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 41 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 42 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 43 -> TOKEN_TYPE_COMING_SOON 
  | 44 -> TOKEN_TYPE_IS_HERE 
  | 45 -> TOKEN_MODULE_COMING_SOON 
  | 46 -> TOKEN_MODULE_IS_HERE 
  | 47 -> TOKEN_RULE 
  | 48 -> TOKEN_CREATE 
  | 49 -> TOKEN_WAIT 
  | 50 -> TOKEN_WAIT_UNTIL 
  | 51 -> TOKEN_YIELD 
  | 52 -> TOKEN_SELECT_OPERATOR 
  | 53 -> TOKEN_PARALLEL_OPERATOR 
  | 54 -> TOKEN_INT_SELECT_OPERATOR 
  | 55 -> TOKEN_EXTERN 
  | 56 -> TOKEN_VOID 
  | 57 -> TOKEN_PUBLIC 
  | 58 -> TOKEN_PRIVATE 
  | 59 -> TOKEN_INTERNAL 
  | 60 -> TOKEN_GLOBAL 
  | 61 -> TOKEN_STATIC 
  | 62 -> TOKEN_MEMBER 
  | 63 -> TOKEN_CLASS 
  | 64 -> TOKEN_ABSTRACT 
  | 65 -> TOKEN_OVERRIDE 
  | 66 -> TOKEN_DEFAULT 
  | 67 -> TOKEN_CONSTRUCTOR 
  | 68 -> TOKEN_INHERIT 
  | 69 -> TOKEN_GREATER_RBRACK 
  | 70 -> TOKEN_STRUCT 
  | 71 -> TOKEN_SIG 
  | 72 -> TOKEN_BAR 
  | 73 -> TOKEN_RBRACK 
  | 74 -> TOKEN_RBRACE 
  | 75 -> TOKEN_RBRACE_COMING_SOON 
  | 76 -> TOKEN_RBRACE_IS_HERE 
  | 77 -> TOKEN_MINUS 
  | 78 -> TOKEN_DOLLAR 
  | 79 -> TOKEN_LBRACE_LESS 
  | 80 -> TOKEN_BAR_RBRACK 
  | 81 -> TOKEN_GREATER_RBRACE 
  | 82 -> TOKEN_UNDERSCORE 
  | 83 -> TOKEN_SEMICOLON_SEMICOLON 
  | 84 -> TOKEN_LARROW 
  | 85 -> TOKEN_EQUALS 
  | 86 -> TOKEN_LBRACK 
  | 87 -> TOKEN_LBRACK_BAR 
  | 88 -> TOKEN_LBRACK_LESS 
  | 89 -> TOKEN_LBRACE 
  | 90 -> TOKEN_QMARK 
  | 91 -> TOKEN_QMARK_QMARK 
  | 92 -> TOKEN_DOT 
  | 93 -> TOKEN_COLON 
  | 94 -> TOKEN_COLON_COLON 
  | 95 -> TOKEN_COLON_GREATER 
  | 96 -> TOKEN_COLON_QMARK_GREATER 
  | 97 -> TOKEN_COLON_QMARK 
  | 98 -> TOKEN_COLON_EQUALS 
  | 99 -> TOKEN_SEMICOLON 
  | 100 -> TOKEN_WHEN 
  | 101 -> TOKEN_WHILE 
  | 102 -> TOKEN_WITH 
  | 103 -> TOKEN_HASH 
  | 104 -> TOKEN_AMP 
  | 105 -> TOKEN_AMP_AMP 
  | 106 -> TOKEN_QUOTE 
  | 107 -> TOKEN_LPAREN 
  | 108 -> TOKEN_RPAREN 
  | 109 -> TOKEN_RPAREN_COMING_SOON 
  | 110 -> TOKEN_RPAREN_IS_HERE 
  | 111 -> TOKEN_STAR 
  | 112 -> TOKEN_COMMA 
  | 113 -> TOKEN_RARROW 
  | 114 -> TOKEN_GREATER_BAR_RBRACK 
  | 115 -> TOKEN_LPAREN_STAR_RPAREN 
  | 116 -> TOKEN_IMPORT 
  | 117 -> TOKEN_OPEN 
  | 118 -> TOKEN_OR 
  | 119 -> TOKEN_REC 
  | 120 -> TOKEN_THEN 
  | 121 -> TOKEN_BODY_OPERATOR 
  | 122 -> TOKEN_TO 
  | 123 -> TOKEN_TRUE 
  | 124 -> TOKEN_TRY 
  | 125 -> TOKEN_TYPE 
  | 126 -> TOKEN_VAL 
  | 127 -> TOKEN_INLINE 
  | 128 -> TOKEN_INTERFACE 
  | 129 -> TOKEN_INSTANCE 
  | 130 -> TOKEN_CONST 
  | 131 -> TOKEN_WORLD_ENTITY 
  | 132 -> TOKEN_MASTER 
  | 133 -> TOKEN_SLAVE 
  | 134 -> TOKEN_CONNECT 
  | 135 -> TOKEN_DISCONNECT 
  | 136 -> TOKEN_VIRTUAL 
  | 137 -> TOKEN_ENTITY 
  | 138 -> TOKEN_CONNECTING 
  | 139 -> TOKEN_CONNECTED 
  | 140 -> TOKEN_LAZY 
  | 141 -> TOKEN_OLAZY 
  | 142 -> TOKEN_MATCH 
  | 143 -> TOKEN_MUTABLE 
  | 144 -> TOKEN_REFERENCE 
  | 145 -> TOKEN_NEW 
  | 146 -> TOKEN_OF 
  | 147 -> TOKEN_EXCEPTION 
  | 148 -> TOKEN_FALSE 
  | 149 -> TOKEN_FOR 
  | 150 -> TOKEN_FUN 
  | 151 -> TOKEN_FUNCTION 
  | 152 -> TOKEN_IF 
  | 153 -> TOKEN_IN 
  | 154 -> TOKEN_JOIN_IN 
  | 155 -> TOKEN_FINALLY 
  | 156 -> TOKEN_DO_BANG 
  | 157 -> TOKEN_AND 
  | 158 -> TOKEN_AS 
  | 159 -> TOKEN_ASSERT 
  | 160 -> TOKEN_OASSERT 
  | 161 -> TOKEN_ASR 
  | 162 -> TOKEN_BEGIN 
  | 163 -> TOKEN_DO 
  | 164 -> TOKEN_DONE 
  | 165 -> TOKEN_DOWNTO 
  | 166 -> TOKEN_ELSE 
  | 167 -> TOKEN_ELIF 
  | 168 -> TOKEN_END 
  | 169 -> TOKEN_DOT_DOT 
  | 170 -> TOKEN_BAR_BAR 
  | 171 -> TOKEN_UPCAST 
  | 172 -> TOKEN_DOWNCAST 
  | 173 -> TOKEN_NULL 
  | 174 -> TOKEN_RESERVED 
  | 175 -> TOKEN_MODULE 
  | 176 -> TOKEN_NAMESPACE 
  | 177 -> TOKEN_DELEGATE 
  | 178 -> TOKEN_CONSTRAINT 
  | 179 -> TOKEN_BASE 
  | 180 -> TOKEN_LQUOTE 
  | 181 -> TOKEN_RQUOTE 
  | 182 -> TOKEN_RQUOTE_DOT 
  | 183 -> TOKEN_PERCENT_OP 
  | 184 -> TOKEN_BINDER 
  | 185 -> TOKEN_LESS 
  | 186 -> TOKEN_GREATER 
  | 187 -> TOKEN_LET 
  | 188 -> TOKEN_YIELD_BANG 
  | 189 -> TOKEN_LET_BANG 
  | 190 -> TOKEN_BIGNUM 
  | 191 -> TOKEN_DECIMAL 
  | 192 -> TOKEN_CHAR 
  | 193 -> TOKEN_IEEE64 
  | 194 -> TOKEN_IEEE32 
  | 195 -> TOKEN_NATIVEINT 
  | 196 -> TOKEN_UNATIVEINT 
  | 197 -> TOKEN_UINT64 
  | 198 -> TOKEN_UINT32 
  | 199 -> TOKEN_UINT16 
  | 200 -> TOKEN_UINT8 
  | 201 -> TOKEN_INT64 
  | 202 -> TOKEN_INT32 
  | 203 -> TOKEN_INT32_DOT_DOT 
  | 204 -> TOKEN_INT16 
  | 205 -> TOKEN_INT8 
  | 206 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 207 -> TOKEN_ADJACENT_PREFIX_OP 
  | 208 -> TOKEN_PLUS_MINUS_OP 
  | 209 -> TOKEN_INFIX_AMP_OP 
  | 210 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 211 -> TOKEN_PREFIX_OP 
  | 212 -> TOKEN_INFIX_BAR_OP 
  | 213 -> TOKEN_INFIX_AT_HAT_OP 
  | 214 -> TOKEN_INFIX_COMPARE_OP 
  | 215 -> TOKEN_INFIX_STAR_STAR_OP 
  | 216 -> TOKEN_IDENT 
  | 217 -> TOKEN_KEYWORD_STRING 
  | 218 -> TOKEN_STRING 
  | 219 -> TOKEN_BYTEARRAY 
  | 220 -> TOKEN_A 
  | 221 -> TOKEN_B 
  | 222 -> TOKEN_C 
  | 225 -> TOKEN_end_of_input
  | 223 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_stringOrKeywordString 
    | 3 -> NONTERM_stringOrKeywordString 
    | 4 -> NONTERM_cnvModuleIntro 
    | 5 -> NONTERM_casanovaModuleImpl 
    | 6 -> NONTERM_casanovaModuleImpl 
    | 7 -> NONTERM_casanovaModuleImpl 
    | 8 -> NONTERM_casanovaModuleImpl 
    | 9 -> NONTERM_casanovaModuleImpl 
    | 10 -> NONTERM_casanovaModuleImpl 
    | 11 -> NONTERM_casanovaModuleImpl 
    | 12 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 13 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 14 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 15 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 16 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 17 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 18 -> NONTERM_moduleDefnsOrExpr 
    | 19 -> NONTERM_moduleDefns 
    | 20 -> NONTERM_moduleDefns 
    | 21 -> NONTERM_moduleDefns 
    | 22 -> NONTERM_moduleDefns 
    | 23 -> NONTERM_moduleDefns 
    | 24 -> NONTERM_moduleDefns 
    | 25 -> NONTERM_moduleDefnOrDirective 
    | 26 -> NONTERM_opt_attributes 
    | 27 -> NONTERM_opt_attributes 
    | 28 -> NONTERM_attributes 
    | 29 -> NONTERM_attributes 
    | 30 -> NONTERM_attributeList 
    | 31 -> NONTERM_attributeList 
    | 32 -> NONTERM_attributeList 
    | 33 -> NONTERM_attributeList 
    | 34 -> NONTERM_attributeListElements 
    | 35 -> NONTERM_attributeListElements 
    | 36 -> NONTERM_attribute 
    | 37 -> NONTERM_attribute 
    | 38 -> NONTERM_attribute 
    | 39 -> NONTERM_attributeTarget 
    | 40 -> NONTERM_attributeTarget 
    | 41 -> NONTERM_attributeTarget 
    | 42 -> NONTERM_moduleDefn 
    | 43 -> NONTERM_moduleDefn 
    | 44 -> NONTERM_moduleDefn 
    | 45 -> NONTERM_moduleDefn 
    | 46 -> NONTERM_moduleDefn 
    | 47 -> NONTERM_moduleDefn 
    | 48 -> NONTERM_moduleDefn 
    | 49 -> NONTERM_namedModuleAbbrevBlock 
    | 50 -> NONTERM_namedModuleAbbrevBlock 
    | 51 -> NONTERM_namedModuleDefnBlock 
    | 52 -> NONTERM_namedModuleDefnBlock 
    | 53 -> NONTERM_namedModuleDefnBlock 
    | 54 -> NONTERM_namedModuleDefnBlock 
    | 55 -> NONTERM_namedModuleDefnBlock 
    | 56 -> NONTERM_namedModuleDefnBlock 
    | 57 -> NONTERM_wrappedNamedModuleDefn 
    | 58 -> NONTERM_wrappedNamedModuleDefn 
    | 59 -> NONTERM_wrappedNamedModuleDefn 
    | 60 -> NONTERM_opt_signature 
    | 61 -> NONTERM_tyconDefnAugmentation 
    | 62 -> NONTERM_opt_literalValue 
    | 63 -> NONTERM_opt_literalValue 
    | 64 -> NONTERM_opt_literalValue 
    | 65 -> NONTERM_memberFlags 
    | 66 -> NONTERM_memberFlags 
    | 67 -> NONTERM_memberFlags 
    | 68 -> NONTERM_memberSpecFlags 
    | 69 -> NONTERM_memberSpecFlags 
    | 70 -> NONTERM_memberSpecFlags 
    | 71 -> NONTERM_classMemberSpfnGetSet 
    | 72 -> NONTERM_classMemberSpfnGetSet 
    | 73 -> NONTERM_classMemberSpfnGetSet 
    | 74 -> NONTERM_classMemberSpfnGetSet 
    | 75 -> NONTERM_classMemberSpfnGetSetElements 
    | 76 -> NONTERM_classMemberSpfnGetSetElements 
    | 77 -> NONTERM_typeNameInfo 
    | 78 -> NONTERM_tyconDefnList 
    | 79 -> NONTERM_tyconDefnList 
    | 80 -> NONTERM_tyconDefn 
    | 81 -> NONTERM_tyconDefnRhsBlock 
    | 82 -> NONTERM_tyconDefnRhsBlock 
    | 83 -> NONTERM_cnvTyconDefnRhs 
    | 84 -> NONTERM_tyconDefnRhs 
    | 85 -> NONTERM_classDefnBlock 
    | 86 -> NONTERM_classDefnBlock 
    | 87 -> NONTERM_classDefnBlock 
    | 88 -> NONTERM_classDefnMembers 
    | 89 -> NONTERM_classDefnMembers 
    | 90 -> NONTERM_classDefnMembers 
    | 91 -> NONTERM_classDefnMembersAtLeastOne 
    | 92 -> NONTERM_memberCore 
    | 93 -> NONTERM_createMemberCoreWithParams 
    | 94 -> NONTERM_createMemberCore 
    | 95 -> NONTERM_abstractMemberFlags 
    | 96 -> NONTERM_abstractMemberFlags 
    | 97 -> NONTERM_classDefnMember 
    | 98 -> NONTERM_opt_typ 
    | 99 -> NONTERM_opt_typ 
    | 100 -> NONTERM_atomicPatternLongIdent 
    | 101 -> NONTERM_atomicPatternLongIdent 
    | 102 -> NONTERM_opt_declVisibility 
    | 103 -> NONTERM_opt_classDefn 
    | 104 -> NONTERM_opt_classDefn 
    | 105 -> NONTERM_optAsSpec 
    | 106 -> NONTERM_optAsSpec 
    | 107 -> NONTERM_asSpec 
    | 108 -> NONTERM_optBaseSpec 
    | 109 -> NONTERM_optBaseSpec 
    | 110 -> NONTERM_baseSpec 
    | 111 -> NONTERM_baseSpec 
    | 112 -> NONTERM_memberOrOverride 
    | 113 -> NONTERM_memberOrOverride 
    | 114 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 115 -> NONTERM_tyconDefnOrSpfnCnvRepr 
    | 116 -> NONTERM_braceFieldOrRuleDeclList 
    | 117 -> NONTERM_braceFieldOrRuleDeclList 
    | 118 -> NONTERM_fieldOrRuleList 
    | 119 -> NONTERM_fieldOrRuleList 
    | 120 -> NONTERM_topReturnTypeWithTypeConstraints 
    | 121 -> NONTERM_cnvFieldInitCore 
    | 122 -> NONTERM_fieldOrRule 
    | 123 -> NONTERM_fieldOrRule 
    | 124 -> NONTERM_fieldOrRule 
    | 125 -> NONTERM_fieldOrRule 
    | 126 -> NONTERM_fieldOrRule 
    | 127 -> NONTERM_fieldOrRule 
    | 128 -> NONTERM_inherit_idents 
    | 129 -> NONTERM_inherit_idents 
    | 130 -> NONTERM_braceFieldDeclList 
    | 131 -> NONTERM_braceFieldDeclList 
    | 132 -> NONTERM_braceFieldDeclList 
    | 133 -> NONTERM_interfaceMember 
    | 134 -> NONTERM_interfaceMember 
    | 135 -> NONTERM_tyconNameAndTyparDecls 
    | 136 -> NONTERM_typarAlts 
    | 137 -> NONTERM_typarAlts 
    | 138 -> NONTERM_unionRepr 
    | 139 -> NONTERM_unionRepr 
    | 140 -> NONTERM_unionRepr 
    | 141 -> NONTERM_attrUnionCaseDecls 
    | 142 -> NONTERM_attrUnionCaseDecls 
    | 143 -> NONTERM_attrUnionCaseDecl 
    | 144 -> NONTERM_attrUnionCaseDecl 
    | 145 -> NONTERM_attrUnionCaseDecl 
    | 146 -> NONTERM_unionCaseName 
    | 147 -> NONTERM_unionCaseName 
    | 148 -> NONTERM_unionCaseName 
    | 149 -> NONTERM_firstUnionCaseDeclOfMany 
    | 150 -> NONTERM_firstUnionCaseDeclOfMany 
    | 151 -> NONTERM_firstUnionCaseDecl 
    | 152 -> NONTERM_unionCaseRepr 
    | 153 -> NONTERM_unionCaseRepr 
    | 154 -> NONTERM_unionCaseRepr 
    | 155 -> NONTERM_recdFieldDeclList 
    | 156 -> NONTERM_recdFieldDeclList 
    | 157 -> NONTERM_recdFieldDecl 
    | 158 -> NONTERM_fieldDecl 
    | 159 -> NONTERM_importDecl 
    | 160 -> NONTERM_importLibrary 
    | 161 -> NONTERM_defnBindings 
    | 162 -> NONTERM_defnBindingsWait 
    | 163 -> NONTERM_doBinding 
    | 164 -> NONTERM_hardwhiteLetWaitBindings 
    | 165 -> NONTERM_hardwhiteLetBindings 
    | 166 -> NONTERM_hardwhiteDoBinding 
    | 167 -> NONTERM_classDefnBindings 
    | 168 -> NONTERM_classDefnBindings 
    | 169 -> NONTERM_classDefnBindings 
    | 170 -> NONTERM_classDefnBindings 
    | 171 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 172 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 173 -> NONTERM_localBindings 
    | 174 -> NONTERM_moreLocalBindings 
    | 175 -> NONTERM_moreLocalBindings 
    | 176 -> NONTERM_attr_localBinding 
    | 177 -> NONTERM_attr_localBinding 
    | 178 -> NONTERM_localBinding 
    | 179 -> NONTERM_localBinding 
    | 180 -> NONTERM_localBinding 
    | 181 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 182 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 183 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 184 -> NONTERM_typedExprWithStaticOptimizations 
    | 185 -> NONTERM_opt_staticOptimizations 
    | 186 -> NONTERM_opt_staticOptimizations 
    | 187 -> NONTERM_staticOptimization 
    | 188 -> NONTERM_staticOptimizationConditions 
    | 189 -> NONTERM_staticOptimizationConditions 
    | 190 -> NONTERM_staticOptimizationCondition 
    | 191 -> NONTERM_staticOptimizationCondition 
    | 192 -> NONTERM_rawConstant 
    | 193 -> NONTERM_rawConstant 
    | 194 -> NONTERM_rawConstant 
    | 195 -> NONTERM_rawConstant 
    | 196 -> NONTERM_rawConstant 
    | 197 -> NONTERM_rawConstant 
    | 198 -> NONTERM_anonLambdaExpr 
    | 199 -> NONTERM_anonLambdaExpr 
    | 200 -> NONTERM_anonLambdaExpr 
    | 201 -> NONTERM_anonLambdaExpr 
    | 202 -> NONTERM_anonLambdaExpr 
    | 203 -> NONTERM_anonLambdaExpr 
    | 204 -> NONTERM_anonLambdaExpr 
    | 205 -> NONTERM_anonLambdaExpr 
    | 206 -> NONTERM_constant 
    | 207 -> NONTERM_constant 
    | 208 -> NONTERM_bindingPattern 
    | 209 -> NONTERM_createBindingPattern 
    | 210 -> NONTERM_headBindingPattern 
    | 211 -> NONTERM_headBindingPattern 
    | 212 -> NONTERM_headBindingPattern 
    | 213 -> NONTERM_headBindingPattern 
    | 214 -> NONTERM_headBindingPattern 
    | 215 -> NONTERM_headBindingPattern 
    | 216 -> NONTERM_tuplePatternElements 
    | 217 -> NONTERM_tuplePatternElements 
    | 218 -> NONTERM_conjPatternElements 
    | 219 -> NONTERM_conjPatternElements 
    | 220 -> NONTERM_constrPattern 
    | 221 -> NONTERM_constrPattern 
    | 222 -> NONTERM_constrPattern 
    | 223 -> NONTERM_constrPattern 
    | 224 -> NONTERM_opt_explicitValTyparDecls2 
    | 225 -> NONTERM_atomicPatterns 
    | 226 -> NONTERM_atomicPatterns 
    | 227 -> NONTERM_atomicPatterns 
    | 228 -> NONTERM_atomicPatterns 
    | 229 -> NONTERM_atomicPattern 
    | 230 -> NONTERM_atomicPattern 
    | 231 -> NONTERM_atomicPattern 
    | 232 -> NONTERM_atomicPattern 
    | 233 -> NONTERM_atomicPattern 
    | 234 -> NONTERM_atomicPattern 
    | 235 -> NONTERM_atomicPattern 
    | 236 -> NONTERM_atomicPattern 
    | 237 -> NONTERM_atomicPattern 
    | 238 -> NONTERM_atomicPattern 
    | 239 -> NONTERM_atomicPattern 
    | 240 -> NONTERM_atomicPattern 
    | 241 -> NONTERM_atomicPattern 
    | 242 -> NONTERM_parenPatternBody 
    | 243 -> NONTERM_parenPatternBody 
    | 244 -> NONTERM_parenPattern 
    | 245 -> NONTERM_parenPattern 
    | 246 -> NONTERM_parenPattern 
    | 247 -> NONTERM_parenPattern 
    | 248 -> NONTERM_parenPattern 
    | 249 -> NONTERM_parenPattern 
    | 250 -> NONTERM_parenPattern 
    | 251 -> NONTERM_tupleParenPatternElements 
    | 252 -> NONTERM_tupleParenPatternElements 
    | 253 -> NONTERM_conjParenPatternElements 
    | 254 -> NONTERM_conjParenPatternElements 
    | 255 -> NONTERM_recordPatternElements 
    | 256 -> NONTERM_recordPatternElementsAux 
    | 257 -> NONTERM_recordPatternElementsAux 
    | 258 -> NONTERM_recordPatternElement 
    | 259 -> NONTERM_listPatternElements 
    | 260 -> NONTERM_listPatternElements 
    | 261 -> NONTERM_listPatternElements 
    | 262 -> NONTERM_fromAssignmentExprBlock 
    | 263 -> NONTERM_typedSeqExprBlock 
    | 264 -> NONTERM_typedSeqExprBlock 
    | 265 -> NONTERM_typedSeqExprBlock 
    | 266 -> NONTERM_declExprBlock 
    | 267 -> NONTERM_declExprBlock 
    | 268 -> NONTERM_typedSeqExprBlockR 
    | 269 -> NONTERM_typedSeqExprBlockR 
    | 270 -> NONTERM_typedSeqExpr 
    | 271 -> NONTERM_typedSeqExpr 
    | 272 -> NONTERM_seqExpr 
    | 273 -> NONTERM_seqExpr 
    | 274 -> NONTERM_seqExpr 
    | 275 -> NONTERM_seqExpr 
    | 276 -> NONTERM_seqExpr 
    | 277 -> NONTERM_seqExpr 
    | 278 -> NONTERM_recover 
    | 279 -> NONTERM_recover 
    | 280 -> NONTERM_choices 
    | 281 -> NONTERM_choices 
    | 282 -> NONTERM_choices 
    | 283 -> NONTERM_choices 
    | 284 -> NONTERM_intChoices 
    | 285 -> NONTERM_intChoices 
    | 286 -> NONTERM_intChoices 
    | 287 -> NONTERM_intChoices 
    | 288 -> NONTERM_choiceBody 
    | 289 -> NONTERM_choiceBody 
    | 290 -> NONTERM_choiceBody 
    | 291 -> NONTERM_parallel 
    | 292 -> NONTERM_parallel 
    | 293 -> NONTERM_declExpr 
    | 294 -> NONTERM_declExpr 
    | 295 -> NONTERM_declExpr 
    | 296 -> NONTERM_declExpr 
    | 297 -> NONTERM_declExpr 
    | 298 -> NONTERM_declExpr 
    | 299 -> NONTERM_declExpr 
    | 300 -> NONTERM_declExpr 
    | 301 -> NONTERM_declExpr 
    | 302 -> NONTERM_declExpr 
    | 303 -> NONTERM_declExpr 
    | 304 -> NONTERM_declExpr 
    | 305 -> NONTERM_declExpr 
    | 306 -> NONTERM_declExpr 
    | 307 -> NONTERM_declExpr 
    | 308 -> NONTERM_declExpr 
    | 309 -> NONTERM_declExpr 
    | 310 -> NONTERM_declExpr 
    | 311 -> NONTERM_declExpr 
    | 312 -> NONTERM_declExpr 
    | 313 -> NONTERM_declExpr 
    | 314 -> NONTERM_declExpr 
    | 315 -> NONTERM_declExpr 
    | 316 -> NONTERM_declExpr 
    | 317 -> NONTERM_declExpr 
    | 318 -> NONTERM_declExpr 
    | 319 -> NONTERM_declExpr 
    | 320 -> NONTERM_declExpr 
    | 321 -> NONTERM_declExpr 
    | 322 -> NONTERM_declExpr 
    | 323 -> NONTERM_declExpr 
    | 324 -> NONTERM_declExpr 
    | 325 -> NONTERM_declExpr 
    | 326 -> NONTERM_declExpr 
    | 327 -> NONTERM_declExpr 
    | 328 -> NONTERM_declExpr 
    | 329 -> NONTERM_declExpr 
    | 330 -> NONTERM_declExpr 
    | 331 -> NONTERM_declExpr 
    | 332 -> NONTERM_declExpr 
    | 333 -> NONTERM_declExpr 
    | 334 -> NONTERM_declExpr 
    | 335 -> NONTERM_declExpr 
    | 336 -> NONTERM_declExpr 
    | 337 -> NONTERM_declExpr 
    | 338 -> NONTERM_declExpr 
    | 339 -> NONTERM_declExpr 
    | 340 -> NONTERM_declExpr 
    | 341 -> NONTERM_declExpr 
    | 342 -> NONTERM_declExpr 
    | 343 -> NONTERM_declExpr 
    | 344 -> NONTERM_declExpr 
    | 345 -> NONTERM_declExpr 
    | 346 -> NONTERM_declExpr 
    | 347 -> NONTERM_declExpr 
    | 348 -> NONTERM_declExpr 
    | 349 -> NONTERM_declExpr 
    | 350 -> NONTERM_declExpr 
    | 351 -> NONTERM_declExpr 
    | 352 -> NONTERM_declExpr 
    | 353 -> NONTERM_declExpr 
    | 354 -> NONTERM_declExpr 
    | 355 -> NONTERM_declExpr 
    | 356 -> NONTERM_declExpr 
    | 357 -> NONTERM_declExpr 
    | 358 -> NONTERM_declExpr 
    | 359 -> NONTERM_declExpr 
    | 360 -> NONTERM_declExpr 
    | 361 -> NONTERM_declExpr 
    | 362 -> NONTERM_declExpr 
    | 363 -> NONTERM_declExpr 
    | 364 -> NONTERM_declExpr 
    | 365 -> NONTERM_declExpr 
    | 366 -> NONTERM_declExpr 
    | 367 -> NONTERM_declExpr 
    | 368 -> NONTERM_declExpr 
    | 369 -> NONTERM_declExpr 
    | 370 -> NONTERM_declExpr 
    | 371 -> NONTERM_declExpr 
    | 372 -> NONTERM_declExpr 
    | 373 -> NONTERM_declExpr 
    | 374 -> NONTERM_declExpr 
    | 375 -> NONTERM_declExpr 
    | 376 -> NONTERM_declExpr 
    | 377 -> NONTERM_declExpr 
    | 378 -> NONTERM_declExpr 
    | 379 -> NONTERM_declExpr 
    | 380 -> NONTERM_declExpr 
    | 381 -> NONTERM_declExpr 
    | 382 -> NONTERM_dynamicArg 
    | 383 -> NONTERM_dynamicArg 
    | 384 -> NONTERM_withClauses 
    | 385 -> NONTERM_withClauses 
    | 386 -> NONTERM_withClauses 
    | 387 -> NONTERM_withPatternClauses 
    | 388 -> NONTERM_withPatternClauses 
    | 389 -> NONTERM_withPatternClauses 
    | 390 -> NONTERM_withPatternClauses 
    | 391 -> NONTERM_patternAndGuard 
    | 392 -> NONTERM_patternClauses 
    | 393 -> NONTERM_patternClauses 
    | 394 -> NONTERM_patternClauses 
    | 395 -> NONTERM_patternClauses 
    | 396 -> NONTERM_patternClauses 
    | 397 -> NONTERM_patternGuard 
    | 398 -> NONTERM_patternGuard 
    | 399 -> NONTERM_patternResult 
    | 400 -> NONTERM_fromExprCondition 
    | 401 -> NONTERM_ifExprCases 
    | 402 -> NONTERM_ifExprThen 
    | 403 -> NONTERM_ifExprThen 
    | 404 -> NONTERM_ifExprThen 
    | 405 -> NONTERM_ifExprElifs 
    | 406 -> NONTERM_ifExprElifs 
    | 407 -> NONTERM_ifExprElifs 
    | 408 -> NONTERM_ifExprElifs 
    | 409 -> NONTERM_ifExprElifs 
    | 410 -> NONTERM_ifExprElifs 
    | 411 -> NONTERM_tuplePat 
    | 412 -> NONTERM_tuplePat 
    | 413 -> NONTERM_tupleExpr 
    | 414 -> NONTERM_tupleExpr 
    | 415 -> NONTERM_minusExpr 
    | 416 -> NONTERM_minusExpr 
    | 417 -> NONTERM_minusExpr 
    | 418 -> NONTERM_minusExpr 
    | 419 -> NONTERM_minusExpr 
    | 420 -> NONTERM_minusExpr 
    | 421 -> NONTERM_minusExpr 
    | 422 -> NONTERM_minusExpr 
    | 423 -> NONTERM_appExpr 
    | 424 -> NONTERM_appExpr 
    | 425 -> NONTERM_argExpr 
    | 426 -> NONTERM_argExpr 
    | 427 -> NONTERM_atomicExpr 
    | 428 -> NONTERM_atomicExpr 
    | 429 -> NONTERM_atomicExpr 
    | 430 -> NONTERM_atomicExpr 
    | 431 -> NONTERM_atomicExpr 
    | 432 -> NONTERM_atomicExpr 
    | 433 -> NONTERM_atomicExpr 
    | 434 -> NONTERM_atomicExpr 
    | 435 -> NONTERM_atomicExpr 
    | 436 -> NONTERM_atomicExpr 
    | 437 -> NONTERM_atomicExpr 
    | 438 -> NONTERM_atomicExpr 
    | 439 -> NONTERM_atomicExpr 
    | 440 -> NONTERM_atomicExpr 
    | 441 -> NONTERM_atomicExpr 
    | 442 -> NONTERM_atomicExprQualification 
    | 443 -> NONTERM_atomicExprQualification 
    | 444 -> NONTERM_atomicExprQualification 
    | 445 -> NONTERM_atomicExprQualification 
    | 446 -> NONTERM_atomicExprQualification 
    | 447 -> NONTERM_atomicExprQualification 
    | 448 -> NONTERM_atomicExprQualification 
    | 449 -> NONTERM_atomicExprQualification 
    | 450 -> NONTERM_atomicExprQualification 
    | 451 -> NONTERM_atomicExprQualification 
    | 452 -> NONTERM_optRange 
    | 453 -> NONTERM_optRange 
    | 454 -> NONTERM_optRange 
    | 455 -> NONTERM_optRange 
    | 456 -> NONTERM_atomicExprAfterType 
    | 457 -> NONTERM_atomicExprAfterType 
    | 458 -> NONTERM_atomicExprAfterType 
    | 459 -> NONTERM_atomicExprAfterType 
    | 460 -> NONTERM_atomicExprAfterType 
    | 461 -> NONTERM_atomicExprAfterType 
    | 462 -> NONTERM_atomicExprAfterType 
    | 463 -> NONTERM_atomicExprAfterType 
    | 464 -> NONTERM_beginEndExpr 
    | 465 -> NONTERM_beginEndExpr 
    | 466 -> NONTERM_beginEndExpr 
    | 467 -> NONTERM_beginEndExpr 
    | 468 -> NONTERM_arrayExpr 
    | 469 -> NONTERM_arrayExpr 
    | 470 -> NONTERM_arrayExpr 
    | 471 -> NONTERM_arrayExpr 
    | 472 -> NONTERM_parenExpr 
    | 473 -> NONTERM_parenExpr 
    | 474 -> NONTERM_parenExpr 
    | 475 -> NONTERM_parenExpr 
    | 476 -> NONTERM_parenExpr 
    | 477 -> NONTERM_parenExpr 
    | 478 -> NONTERM_parenExpr 
    | 479 -> NONTERM_parenExpr 
    | 480 -> NONTERM_parenExpr 
    | 481 -> NONTERM_parenExprBody 
    | 482 -> NONTERM_staticallyKnownHeadTypars 
    | 483 -> NONTERM_staticallyKnownHeadTypars 
    | 484 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 485 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 486 -> NONTERM_braceExpr 
    | 487 -> NONTERM_braceExpr 
    | 488 -> NONTERM_braceExpr 
    | 489 -> NONTERM_braceExpr 
    | 490 -> NONTERM_braceExpr 
    | 491 -> NONTERM_braceExprBody 
    | 492 -> NONTERM_braceExprBody 
    | 493 -> NONTERM_monadicExprBody 
    | 494 -> NONTERM_listExprElements 
    | 495 -> NONTERM_listExprElements 
    | 496 -> NONTERM_monadicExprInitial 
    | 497 -> NONTERM_monadicExprInitial 
    | 498 -> NONTERM_rangeSequenceExpr 
    | 499 -> NONTERM_rangeSequenceExpr 
    | 500 -> NONTERM_rangeSequenceExpr 
    | 501 -> NONTERM_monadicSingleLineQualifiersThenArrowThenExprR 
    | 502 -> NONTERM_forLoopBinder 
    | 503 -> NONTERM_forLoopBinder 
    | 504 -> NONTERM_forLoopBinder 
    | 505 -> NONTERM_forLoopBinder 
    | 506 -> NONTERM_fromLoopBinder 
    | 507 -> NONTERM_fromLoopBinder 
    | 508 -> NONTERM_fromLoopBinder 
    | 509 -> NONTERM_fromLoopBinder 
    | 510 -> NONTERM_fromTupleExpr 
    | 511 -> NONTERM_fromTupleExpr 
    | 512 -> NONTERM_fromTupleExpr 
    | 513 -> NONTERM_forLoopRange 
    | 514 -> NONTERM_opt_curriedArgExprs 
    | 515 -> NONTERM_opt_curriedArgExprs 
    | 516 -> NONTERM_opt_atomicExprAfterType 
    | 517 -> NONTERM_opt_atomicExprAfterType 
    | 518 -> NONTERM_recdExpr 
    | 519 -> NONTERM_recdExpr 
    | 520 -> NONTERM_recdExpr 
    | 521 -> NONTERM_recdExpr 
    | 522 -> NONTERM_recdExpr 
    | 523 -> NONTERM_recdExpr 
    | 524 -> NONTERM_recdExpr 
    | 525 -> NONTERM_recdExpr 
    | 526 -> NONTERM_opt_seps_recd 
    | 527 -> NONTERM_opt_seps_recd 
    | 528 -> NONTERM_seps_recd 
    | 529 -> NONTERM_seps_recd 
    | 530 -> NONTERM_seps_recd 
    | 531 -> NONTERM_seps_recd 
    | 532 -> NONTERM_pathOrUnderscore 
    | 533 -> NONTERM_pathOrUnderscore 
    | 534 -> NONTERM_recdExprBindings 
    | 535 -> NONTERM_recdExprBindings 
    | 536 -> NONTERM_recdBinding 
    | 537 -> NONTERM_recdBinding 
    | 538 -> NONTERM_recdBinding 
    | 539 -> NONTERM_recdBinding 
    | 540 -> NONTERM_recdBinding 
    | 541 -> NONTERM_forLoopDirection 
    | 542 -> NONTERM_forLoopDirection 
    | 543 -> NONTERM_typeWithTypeConstraints 
    | 544 -> NONTERM_topTypeWithTypeConstraints 
    | 545 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 546 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 547 -> NONTERM_topType 
    | 548 -> NONTERM_topType 
    | 549 -> NONTERM_topTupleType 
    | 550 -> NONTERM_topTupleType 
    | 551 -> NONTERM_topTupleTypeElements 
    | 552 -> NONTERM_topTupleTypeElements 
    | 553 -> NONTERM_topAppType 
    | 554 -> NONTERM_topAppType 
    | 555 -> NONTERM_topAppType 
    | 556 -> NONTERM_topAppType 
    | 557 -> NONTERM_topAppType 
    | 558 -> NONTERM_topAppType 
    | 559 -> NONTERM_typ 
    | 560 -> NONTERM_typ 
    | 561 -> NONTERM_tupleType 
    | 562 -> NONTERM_tupleType 
    | 563 -> NONTERM_tupleType 
    | 564 -> NONTERM_tupleType 
    | 565 -> NONTERM_tupleOrQuotTypeElements 
    | 566 -> NONTERM_tupleOrQuotTypeElements 
    | 567 -> NONTERM_tupleOrQuotTypeElements 
    | 568 -> NONTERM_tupleTypeElements 
    | 569 -> NONTERM_tupleTypeElements 
    | 570 -> NONTERM_appTypeCon 
    | 571 -> NONTERM_appTypeConPower 
    | 572 -> NONTERM_appTypeConPower 
    | 573 -> NONTERM_appType 
    | 574 -> NONTERM_appType 
    | 575 -> NONTERM_appType 
    | 576 -> NONTERM_appType 
    | 577 -> NONTERM_appType 
    | 578 -> NONTERM_appType 
    | 579 -> NONTERM_arrayTypeSuffix 
    | 580 -> NONTERM_arrayTypeSuffix 
    | 581 -> NONTERM_arrayTypeSuffix 
    | 582 -> NONTERM_arrayTypeSuffix 
    | 583 -> NONTERM_appTypePrefixArguments 
    | 584 -> NONTERM_typeArgListElements 
    | 585 -> NONTERM_typeArgListElements 
    | 586 -> NONTERM_powerType 
    | 587 -> NONTERM_powerType 
    | 588 -> NONTERM_powerType 
    | 589 -> NONTERM_appTypeNonAtomicDeprecated 
    | 590 -> NONTERM_appTypeNonAtomicDeprecated 
    | 591 -> NONTERM_appTypeNonAtomicDeprecated 
    | 592 -> NONTERM_appTypeNonAtomicDeprecated 
    | 593 -> NONTERM_appTypeNonAtomicDeprecated 
    | 594 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 595 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 596 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 597 -> NONTERM_atomType 
    | 598 -> NONTERM_atomType 
    | 599 -> NONTERM_atomType 
    | 600 -> NONTERM_atomType 
    | 601 -> NONTERM_atomType 
    | 602 -> NONTERM_atomType 
    | 603 -> NONTERM_atomType 
    | 604 -> NONTERM_atomType 
    | 605 -> NONTERM_atomType 
    | 606 -> NONTERM_atomType 
    | 607 -> NONTERM_atomType 
    | 608 -> NONTERM_typeArgsNoHpaDeprecated 
    | 609 -> NONTERM_typeArgsNoHpaDeprecated 
    | 610 -> NONTERM_typeArgsActual 
    | 611 -> NONTERM_typeArgsActual 
    | 612 -> NONTERM_typeArgsActual 
    | 613 -> NONTERM_typeArgsActual 
    | 614 -> NONTERM_typeArgsActual 
    | 615 -> NONTERM_typeArgsActual 
    | 616 -> NONTERM_typeArgsActual 
    | 617 -> NONTERM_typeArgActual 
    | 618 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 619 -> NONTERM_measureTypeArg 
    | 620 -> NONTERM_measureTypeArg 
    | 621 -> NONTERM_measureTypeAtom 
    | 622 -> NONTERM_measureTypeAtom 
    | 623 -> NONTERM_measureTypePower 
    | 624 -> NONTERM_measureTypePower 
    | 625 -> NONTERM_measureTypePower 
    | 626 -> NONTERM_measureTypePower 
    | 627 -> NONTERM_measureTypeSeq 
    | 628 -> NONTERM_measureTypeSeq 
    | 629 -> NONTERM_measureTypeExpr 
    | 630 -> NONTERM_measureTypeExpr 
    | 631 -> NONTERM_measureTypeExpr 
    | 632 -> NONTERM_measureTypeExpr 
    | 633 -> NONTERM_typar 
    | 634 -> NONTERM_typar 
    | 635 -> NONTERM_staticallyKnownHeadTypar 
    | 636 -> NONTERM_ident 
    | 637 -> NONTERM_path 
    | 638 -> NONTERM_path 
    | 639 -> NONTERM_path 
    | 640 -> NONTERM_path 
    | 641 -> NONTERM_path 
    | 642 -> NONTERM_opName 
    | 643 -> NONTERM_opName 
    | 644 -> NONTERM_opName 
    | 645 -> NONTERM_opName 
    | 646 -> NONTERM_opName 
    | 647 -> NONTERM_operatorName 
    | 648 -> NONTERM_operatorName 
    | 649 -> NONTERM_operatorName 
    | 650 -> NONTERM_operatorName 
    | 651 -> NONTERM_operatorName 
    | 652 -> NONTERM_operatorName 
    | 653 -> NONTERM_operatorName 
    | 654 -> NONTERM_operatorName 
    | 655 -> NONTERM_operatorName 
    | 656 -> NONTERM_operatorName 
    | 657 -> NONTERM_operatorName 
    | 658 -> NONTERM_operatorName 
    | 659 -> NONTERM_operatorName 
    | 660 -> NONTERM_operatorName 
    | 661 -> NONTERM_operatorName 
    | 662 -> NONTERM_operatorName 
    | 663 -> NONTERM_operatorName 
    | 664 -> NONTERM_operatorName 
    | 665 -> NONTERM_operatorName 
    | 666 -> NONTERM_operatorName 
    | 667 -> NONTERM_operatorName 
    | 668 -> NONTERM_operatorName 
    | 669 -> NONTERM_operatorName 
    | 670 -> NONTERM_operatorName 
    | 671 -> NONTERM_operatorName 
    | 672 -> NONTERM_operatorName 
    | 673 -> NONTERM_barName 
    | 674 -> NONTERM_barNames 
    | 675 -> NONTERM_barNames 
    | 676 -> NONTERM_identOrOp 
    | 677 -> NONTERM_identOrOp 
    | 678 -> NONTERM_pathOp 
    | 679 -> NONTERM_pathOp 
    | 680 -> NONTERM_pathOp 
    | 681 -> NONTERM_pathOp 
    | 682 -> NONTERM_pathOp 
    | 683 -> NONTERM_nameop 
    | 684 -> NONTERM_topSeparator 
    | 685 -> NONTERM_topSeparator 
    | 686 -> NONTERM_topSeparator 
    | 687 -> NONTERM_topSeparators 
    | 688 -> NONTERM_topSeparators 
    | 689 -> NONTERM_interactiveSeparator 
    | 690 -> NONTERM_interactiveSeparator 
    | 691 -> NONTERM_interactiveSeparators 
    | 692 -> NONTERM_interactiveSeparators 
    | 693 -> NONTERM_opt_interactiveSeparators 
    | 694 -> NONTERM_opt_interactiveSeparators 
    | 695 -> NONTERM_opt_topSeparators 
    | 696 -> NONTERM_opt_topSeparators 
    | 697 -> NONTERM_seps 
    | 698 -> NONTERM_seps 
    | 699 -> NONTERM_seps 
    | 700 -> NONTERM_seps 
    | 701 -> NONTERM_declEnd 
    | 702 -> NONTERM_declEnd 
    | 703 -> NONTERM_declEnd 
    | 704 -> NONTERM_opt_declEnd 
    | 705 -> NONTERM_opt_declEnd 
    | 706 -> NONTERM_opt_declEnd 
    | 707 -> NONTERM_opt_declEnd 
    | 708 -> NONTERM_opt_ODECLEND 
    | 709 -> NONTERM_opt_ODECLEND 
    | 710 -> NONTERM_deprecated_opt_equals 
    | 711 -> NONTERM_deprecated_opt_equals 
    | 712 -> NONTERM_opt_OBLOCKSEP 
    | 713 -> NONTERM_opt_OBLOCKSEP 
    | 714 -> NONTERM_opt_seps 
    | 715 -> NONTERM_opt_seps 
    | 716 -> NONTERM_opt_rec 
    | 717 -> NONTERM_opt_rec 
    | 718 -> NONTERM_opt_bar 
    | 719 -> NONTERM_opt_bar 
    | 720 -> NONTERM_opt_inline 
    | 721 -> NONTERM_opt_inline 
    | 722 -> NONTERM_opt_inline 
    | 723 -> NONTERM_opt_inline 
    | 724 -> NONTERM_opt_inline 
    | 725 -> NONTERM_opt_inline 
    | 726 -> NONTERM_opt_mutable 
    | 727 -> NONTERM_opt_mutable 
    | 728 -> NONTERM_opt_ref 
    | 729 -> NONTERM_opt_ref 
    | 730 -> NONTERM_doToken 
    | 731 -> NONTERM_doToken 
    | 732 -> NONTERM_doneDeclEnd 
    | 733 -> NONTERM_doneDeclEnd 
    | 734 -> NONTERM_structOrBegin 
    | 735 -> NONTERM_structOrBegin 
    | 736 -> NONTERM_sigOrBegin 
    | 737 -> NONTERM_sigOrBegin 
    | 738 -> NONTERM_colonOrEquals 
    | 739 -> NONTERM_colonOrEquals 
    | 740 -> NONTERM_opt_HASH 
    | 741 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 742 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 743 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 744 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 745 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 746 -> NONTERM_type_keyword 
    | 747 -> NONTERM_type_keyword 
    | 748 -> NONTERM_type_keyword 
    | 749 -> NONTERM_type_keyword 
    | 750 -> NONTERM_type_keyword 
    | 751 -> NONTERM_module_keyword 
    | 752 -> NONTERM_module_keyword 
    | 753 -> NONTERM_module_keyword 
    | 754 -> NONTERM_rbrace 
    | 755 -> NONTERM_rbrace 
    | 756 -> NONTERM_rbrace 
    | 757 -> NONTERM_rparen 
    | 758 -> NONTERM_rparen 
    | 759 -> NONTERM_rparen 
    | 760 -> NONTERM_oblockend 
    | 761 -> NONTERM_oblockend 
    | 762 -> NONTERM_oblockend 
    | 763 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 764 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 765 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 766 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 767 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 768 -> NONTERM_ends_coming_soon_or_recover 
    | 769 -> NONTERM_ends_coming_soon_or_recover 
    | 770 -> NONTERM_ends_coming_soon_or_recover 
    | 771 -> NONTERM_ends_coming_soon_or_recover 
    | 772 -> NONTERM_ends_coming_soon_or_recover 
    | 773 -> NONTERM_ends_coming_soon_or_recover 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 225 
let _fsyacc_tagOfErrorTerminal = 223

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | OBLOCKEND_COMING_SOON  -> "OBLOCKEND_COMING_SOON" 
  | OBLOCKEND_IS_HERE  -> "OBLOCKEND_IS_HERE" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OBODY_OPERATOR  -> "OBODY_OPERATOR" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OSELECT  -> "OSELECT" 
  | OWHERE  -> "OWHERE" 
  | OYIELD  -> "OYIELD" 
  | OWHEN  -> "OWHEN" 
  | OPARALLEL_OPERATOR  -> "OPARALLEL_OPERATOR" 
  | OWAIT  -> "OWAIT" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | OLET_WAIT _ -> "OLET_WAIT" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | TYPE_COMING_SOON  -> "TYPE_COMING_SOON" 
  | TYPE_IS_HERE  -> "TYPE_IS_HERE" 
  | MODULE_COMING_SOON  -> "MODULE_COMING_SOON" 
  | MODULE_IS_HERE  -> "MODULE_IS_HERE" 
  | RULE  -> "RULE" 
  | CREATE  -> "CREATE" 
  | WAIT  -> "WAIT" 
  | WAIT_UNTIL  -> "WAIT_UNTIL" 
  | YIELD  -> "YIELD" 
  | SELECT_OPERATOR  -> "SELECT_OPERATOR" 
  | PARALLEL_OPERATOR  -> "PARALLEL_OPERATOR" 
  | INT_SELECT_OPERATOR  -> "INT_SELECT_OPERATOR" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE  -> "RBRACE" 
  | RBRACE_COMING_SOON  -> "RBRACE_COMING_SOON" 
  | RBRACE_IS_HERE  -> "RBRACE_IS_HERE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | LBRACE_LESS  -> "LBRACE_LESS" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | GREATER_RBRACE  -> "GREATER_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | LBRACE  -> "LBRACE" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | RPAREN_COMING_SOON  -> "RPAREN_COMING_SOON" 
  | RPAREN_IS_HERE  -> "RPAREN_IS_HERE" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | IMPORT  -> "IMPORT" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | BODY_OPERATOR  -> "BODY_OPERATOR" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | CONST  -> "CONST" 
  | WORLD_ENTITY  -> "WORLD_ENTITY" 
  | MASTER  -> "MASTER" 
  | SLAVE  -> "SLAVE" 
  | CONNECT  -> "CONNECT" 
  | DISCONNECT  -> "DISCONNECT" 
  | VIRTUAL  -> "VIRTUAL" 
  | ENTITY  -> "ENTITY" 
  | CONNECTING  -> "CONNECTING" 
  | CONNECTED  -> "CONNECTED" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MUTABLE  -> "MUTABLE" 
  | REFERENCE  -> "REFERENCE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | JOIN_IN  -> "JOIN_IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | LET_BANG _ -> "LET_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | NATIVEINT _ -> "NATIVEINT" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 
  | A  -> "A" 
  | B  -> "B" 
  | C  -> "C" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | OBLOCKEND_COMING_SOON  -> (null : System.Object) 
  | OBLOCKEND_IS_HERE  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OBODY_OPERATOR  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OSELECT  -> (null : System.Object) 
  | OWHERE  -> (null : System.Object) 
  | OYIELD  -> (null : System.Object) 
  | OWHEN  -> (null : System.Object) 
  | OPARALLEL_OPERATOR  -> (null : System.Object) 
  | OWAIT  -> (null : System.Object) 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET_WAIT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | TYPE_COMING_SOON  -> (null : System.Object) 
  | TYPE_IS_HERE  -> (null : System.Object) 
  | MODULE_COMING_SOON  -> (null : System.Object) 
  | MODULE_IS_HERE  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CREATE  -> (null : System.Object) 
  | WAIT  -> (null : System.Object) 
  | WAIT_UNTIL  -> (null : System.Object) 
  | YIELD  -> (null : System.Object) 
  | SELECT_OPERATOR  -> (null : System.Object) 
  | PARALLEL_OPERATOR  -> (null : System.Object) 
  | INT_SELECT_OPERATOR  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | RBRACE_COMING_SOON  -> (null : System.Object) 
  | RBRACE_IS_HERE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | LBRACE_LESS  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | GREATER_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RPAREN_COMING_SOON  -> (null : System.Object) 
  | RPAREN_IS_HERE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | BODY_OPERATOR  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | WORLD_ENTITY  -> (null : System.Object) 
  | MASTER  -> (null : System.Object) 
  | SLAVE  -> (null : System.Object) 
  | CONNECT  -> (null : System.Object) 
  | DISCONNECT  -> (null : System.Object) 
  | VIRTUAL  -> (null : System.Object) 
  | ENTITY  -> (null : System.Object) 
  | CONNECTING  -> (null : System.Object) 
  | CONNECTED  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | REFERENCE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | JOIN_IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | A  -> (null : System.Object) 
  | B  -> (null : System.Object) 
  | C  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 172us; 65535us; 54us; 287us; 58us; 287us; 63us; 287us; 119us; 287us; 122us; 287us; 124us; 287us; 127us; 287us; 130us; 287us; 153us; 287us; 157us; 287us; 169us; 287us; 193us; 287us; 196us; 287us; 209us; 287us; 213us; 287us; 222us; 287us; 233us; 287us; 243us; 287us; 256us; 287us; 259us; 287us; 263us; 287us; 273us; 287us; 279us; 287us; 288us; 287us; 290us; 287us; 293us; 287us; 295us; 287us; 319us; 287us; 320us; 287us; 324us; 287us; 325us; 287us; 326us; 287us; 327us; 287us; 329us; 287us; 331us; 287us; 333us; 287us; 336us; 287us; 338us; 287us; 340us; 287us; 345us; 287us; 348us; 287us; 357us; 287us; 377us; 287us; 380us; 287us; 382us; 287us; 384us; 287us; 385us; 287us; 386us; 287us; 387us; 287us; 394us; 287us; 396us; 287us; 398us; 287us; 403us; 287us; 410us; 287us; 415us; 287us; 417us; 287us; 420us; 287us; 423us; 287us; 437us; 287us; 444us; 287us; 451us; 287us; 454us; 287us; 458us; 287us; 466us; 287us; 469us; 287us; 472us; 287us; 474us; 287us; 478us; 287us; 480us; 287us; 485us; 287us; 488us; 287us; 492us; 287us; 496us; 287us; 501us; 287us; 503us; 287us; 512us; 287us; 514us; 287us; 522us; 287us; 529us; 287us; 571us; 287us; 573us; 287us; 575us; 287us; 576us; 287us; 577us; 287us; 578us; 287us; 579us; 287us; 580us; 287us; 581us; 287us; 582us; 287us; 583us; 287us; 584us; 287us; 585us; 287us; 586us; 287us; 587us; 287us; 588us; 287us; 589us; 287us; 590us; 287us; 591us; 287us; 592us; 287us; 593us; 287us; 594us; 287us; 617us; 287us; 620us; 287us; 622us; 287us; 627us; 287us; 634us; 287us; 639us; 287us; 640us; 287us; 644us; 287us; 646us; 287us; 650us; 287us; 652us; 287us; 656us; 287us; 659us; 287us; 660us; 287us; 661us; 287us; 662us; 287us; 664us; 287us; 665us; 287us; 667us; 287us; 668us; 287us; 670us; 287us; 672us; 287us; 676us; 287us; 678us; 287us; 679us; 287us; 682us; 287us; 688us; 287us; 689us; 287us; 692us; 287us; 693us; 287us; 706us; 287us; 716us; 287us; 719us; 287us; 727us; 287us; 728us; 287us; 738us; 287us; 745us; 287us; 751us; 287us; 752us; 287us; 765us; 287us; 777us; 287us; 778us; 287us; 780us; 287us; 782us; 287us; 786us; 287us; 787us; 287us; 789us; 287us; 791us; 287us; 795us; 287us; 800us; 287us; 825us; 287us; 833us; 287us; 836us; 287us; 839us; 287us; 842us; 287us; 845us; 287us; 849us; 287us; 852us; 287us; 855us; 287us; 857us; 287us; 859us; 287us; 862us; 287us; 864us; 287us; 867us; 287us; 874us; 287us; 886us; 287us; 887us; 287us; 904us; 287us; 908us; 287us; 938us; 287us; 940us; 287us; 1us; 65535us; 0us; 7us; 1us; 65535us; 0us; 2us; 2us; 65535us; 0us; 9us; 7us; 11us; 3us; 65535us; 0us; 25us; 7us; 25us; 18us; 19us; 5us; 65535us; 0us; 26us; 7us; 26us; 18us; 26us; 30us; 31us; 34us; 35us; 9us; 65535us; 0us; 27us; 7us; 27us; 16us; 33us; 18us; 27us; 23us; 33us; 28us; 29us; 30us; 27us; 32us; 33us; 34us; 27us; 9us; 65535us; 0us; 28us; 7us; 28us; 16us; 28us; 18us; 28us; 23us; 28us; 28us; 28us; 30us; 28us; 32us; 28us; 34us; 28us; 9us; 65535us; 0us; 71us; 7us; 71us; 16us; 71us; 18us; 71us; 23us; 71us; 28us; 71us; 30us; 71us; 32us; 71us; 34us; 71us; 10us; 65535us; 0us; 37us; 7us; 37us; 16us; 37us; 18us; 37us; 23us; 37us; 28us; 37us; 30us; 37us; 32us; 37us; 34us; 37us; 38us; 39us; 10us; 65535us; 0us; 38us; 7us; 38us; 16us; 38us; 18us; 38us; 23us; 38us; 28us; 38us; 30us; 38us; 32us; 38us; 34us; 38us; 38us; 38us; 1us; 65535us; 40us; 41us; 2us; 65535us; 40us; 50us; 51us; 52us; 2us; 65535us; 40us; 56us; 51us; 56us; 9us; 65535us; 0us; 36us; 7us; 36us; 16us; 36us; 18us; 36us; 23us; 36us; 28us; 36us; 30us; 36us; 32us; 36us; 34us; 36us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 132us; 133us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 3us; 65535us; 74us; 91us; 77us; 91us; 88us; 91us; 3us; 65535us; 75us; 76us; 78us; 79us; 89us; 90us; 3us; 65535us; 74us; 75us; 77us; 78us; 88us; 89us; 1us; 65535us; 92us; 93us; 1us; 65535us; 94us; 95us; 1us; 65535us; 94us; 100us; 1us; 65535us; 140us; 141us; 4us; 65535us; 107us; 108us; 113us; 114us; 116us; 117us; 140us; 111us; 4us; 65535us; 107us; 112us; 113us; 112us; 116us; 112us; 140us; 112us; 2us; 65535us; 133us; 134us; 160us; 161us; 1us; 65535us; 163us; 164us; 1us; 65535us; 163us; 166us; 0us; 65535us; 4us; 65535us; 107us; 115us; 113us; 115us; 116us; 115us; 140us; 115us; 0us; 65535us; 34us; 65535us; 119us; 328us; 124us; 328us; 169us; 328us; 256us; 328us; 288us; 352us; 293us; 352us; 319us; 328us; 320us; 328us; 324us; 328us; 325us; 328us; 326us; 328us; 327us; 328us; 329us; 352us; 331us; 352us; 333us; 352us; 336us; 352us; 338us; 352us; 340us; 352us; 345us; 328us; 348us; 328us; 357us; 328us; 377us; 328us; 382us; 328us; 384us; 328us; 385us; 328us; 386us; 328us; 387us; 328us; 394us; 328us; 396us; 328us; 512us; 328us; 620us; 328us; 622us; 328us; 627us; 328us; 634us; 328us; 8us; 65535us; 94us; 143us; 107us; 132us; 113us; 132us; 116us; 132us; 140us; 132us; 146us; 159us; 151us; 159us; 168us; 169us; 4us; 65535us; 96us; 97us; 98us; 99us; 101us; 102us; 103us; 104us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 94us; 106us; 1us; 65535us; 94us; 105us; 1us; 65535us; 143us; 145us; 2us; 65535us; 146us; 147us; 151us; 152us; 1us; 65535us; 155us; 156us; 1us; 65535us; 169us; 170us; 2us; 65535us; 146us; 150us; 151us; 150us; 2us; 65535us; 172us; 173us; 176us; 177us; 2us; 65535us; 193us; 211us; 209us; 211us; 0us; 65535us; 3us; 65535us; 74us; 87us; 77us; 87us; 88us; 87us; 0us; 65535us; 1us; 65535us; 143us; 144us; 3us; 65535us; 143us; 185us; 186us; 187us; 189us; 190us; 3us; 65535us; 143us; 189us; 186us; 189us; 189us; 189us; 3us; 65535us; 143us; 191us; 186us; 191us; 189us; 191us; 1us; 65535us; 143us; 186us; 1us; 65535us; 143us; 188us; 2us; 65535us; 193us; 194us; 209us; 210us; 2us; 65535us; 178us; 179us; 216us; 217us; 2us; 65535us; 178us; 215us; 216us; 215us; 4us; 65535us; 146us; 174us; 151us; 174us; 178us; 219us; 216us; 219us; 9us; 65535us; 0us; 83us; 7us; 83us; 16us; 83us; 18us; 83us; 23us; 83us; 28us; 83us; 30us; 83us; 32us; 83us; 34us; 83us; 9us; 65535us; 0us; 82us; 7us; 82us; 16us; 82us; 18us; 82us; 23us; 82us; 28us; 82us; 30us; 82us; 32us; 82us; 34us; 82us; 87us; 65535us; 122us; 468us; 127us; 468us; 130us; 468us; 157us; 468us; 233us; 468us; 243us; 468us; 259us; 468us; 263us; 468us; 273us; 468us; 290us; 468us; 295us; 468us; 398us; 468us; 403us; 468us; 415us; 468us; 417us; 468us; 420us; 468us; 423us; 468us; 437us; 468us; 444us; 468us; 451us; 468us; 454us; 468us; 458us; 468us; 466us; 468us; 469us; 468us; 472us; 468us; 474us; 468us; 478us; 468us; 480us; 468us; 485us; 468us; 488us; 468us; 492us; 468us; 496us; 468us; 501us; 468us; 503us; 468us; 514us; 468us; 522us; 468us; 529us; 468us; 573us; 468us; 575us; 468us; 576us; 468us; 577us; 468us; 578us; 468us; 579us; 468us; 580us; 468us; 581us; 468us; 582us; 468us; 583us; 468us; 584us; 468us; 585us; 468us; 586us; 468us; 587us; 468us; 588us; 468us; 589us; 468us; 590us; 468us; 591us; 468us; 592us; 468us; 593us; 468us; 594us; 468us; 617us; 468us; 639us; 468us; 640us; 468us; 644us; 468us; 646us; 468us; 650us; 468us; 652us; 468us; 656us; 468us; 659us; 468us; 660us; 468us; 706us; 468us; 716us; 468us; 719us; 468us; 727us; 468us; 728us; 468us; 738us; 468us; 745us; 468us; 751us; 468us; 752us; 468us; 765us; 468us; 777us; 468us; 778us; 468us; 780us; 468us; 782us; 468us; 786us; 468us; 787us; 468us; 795us; 468us; 800us; 468us; 825us; 468us; 87us; 65535us; 122us; 465us; 127us; 465us; 130us; 465us; 157us; 465us; 233us; 465us; 243us; 465us; 259us; 465us; 263us; 465us; 273us; 465us; 290us; 465us; 295us; 465us; 398us; 465us; 403us; 465us; 415us; 465us; 417us; 465us; 420us; 465us; 423us; 465us; 437us; 465us; 444us; 465us; 451us; 465us; 454us; 465us; 458us; 465us; 466us; 465us; 469us; 465us; 472us; 465us; 474us; 465us; 478us; 465us; 480us; 465us; 485us; 465us; 488us; 465us; 492us; 465us; 496us; 465us; 501us; 465us; 503us; 465us; 514us; 465us; 522us; 465us; 529us; 465us; 573us; 465us; 575us; 465us; 576us; 465us; 577us; 465us; 578us; 465us; 579us; 465us; 580us; 465us; 581us; 465us; 582us; 465us; 583us; 465us; 584us; 465us; 585us; 465us; 586us; 465us; 587us; 465us; 588us; 465us; 589us; 465us; 590us; 465us; 591us; 465us; 592us; 465us; 593us; 465us; 594us; 465us; 617us; 465us; 639us; 465us; 640us; 465us; 644us; 465us; 646us; 465us; 650us; 465us; 652us; 465us; 656us; 465us; 659us; 465us; 660us; 465us; 706us; 465us; 716us; 465us; 719us; 465us; 727us; 465us; 728us; 465us; 738us; 465us; 745us; 465us; 751us; 465us; 752us; 465us; 765us; 465us; 777us; 465us; 778us; 465us; 780us; 465us; 782us; 465us; 786us; 465us; 787us; 465us; 795us; 465us; 800us; 465us; 825us; 465us; 1us; 65535us; 71us; 73us; 87us; 65535us; 122us; 472us; 127us; 472us; 130us; 472us; 157us; 472us; 233us; 472us; 243us; 472us; 259us; 472us; 263us; 472us; 273us; 472us; 290us; 472us; 295us; 472us; 398us; 472us; 403us; 472us; 415us; 472us; 417us; 472us; 420us; 472us; 423us; 472us; 437us; 472us; 444us; 472us; 451us; 472us; 454us; 472us; 458us; 472us; 466us; 472us; 469us; 472us; 472us; 472us; 474us; 472us; 478us; 472us; 480us; 472us; 485us; 472us; 488us; 472us; 492us; 472us; 496us; 472us; 501us; 472us; 503us; 472us; 514us; 472us; 522us; 472us; 529us; 472us; 573us; 472us; 575us; 472us; 576us; 472us; 577us; 472us; 578us; 472us; 579us; 472us; 580us; 472us; 581us; 472us; 582us; 472us; 583us; 472us; 584us; 472us; 585us; 472us; 586us; 472us; 587us; 472us; 588us; 472us; 589us; 472us; 590us; 472us; 591us; 472us; 592us; 472us; 593us; 472us; 594us; 472us; 617us; 472us; 639us; 472us; 640us; 472us; 644us; 472us; 646us; 472us; 650us; 472us; 652us; 472us; 656us; 472us; 659us; 472us; 660us; 472us; 706us; 472us; 716us; 472us; 719us; 472us; 727us; 472us; 728us; 472us; 738us; 472us; 745us; 472us; 751us; 472us; 752us; 472us; 765us; 472us; 777us; 472us; 778us; 472us; 780us; 472us; 782us; 472us; 786us; 472us; 787us; 472us; 795us; 472us; 800us; 472us; 825us; 472us; 88us; 65535us; 71us; 72us; 122us; 423us; 127us; 423us; 130us; 423us; 157us; 423us; 233us; 423us; 243us; 423us; 259us; 423us; 263us; 423us; 273us; 423us; 290us; 423us; 295us; 423us; 398us; 423us; 403us; 423us; 415us; 423us; 417us; 423us; 420us; 423us; 423us; 423us; 437us; 474us; 444us; 474us; 451us; 474us; 454us; 423us; 458us; 423us; 466us; 423us; 469us; 423us; 472us; 423us; 474us; 423us; 478us; 423us; 480us; 423us; 485us; 423us; 488us; 423us; 492us; 423us; 496us; 474us; 501us; 474us; 503us; 423us; 514us; 423us; 522us; 423us; 529us; 423us; 573us; 474us; 575us; 474us; 576us; 474us; 577us; 474us; 578us; 474us; 579us; 474us; 580us; 474us; 581us; 474us; 582us; 474us; 583us; 474us; 584us; 474us; 585us; 474us; 586us; 474us; 587us; 474us; 588us; 474us; 589us; 474us; 590us; 474us; 591us; 474us; 592us; 474us; 593us; 474us; 594us; 474us; 617us; 423us; 639us; 474us; 640us; 423us; 644us; 474us; 646us; 423us; 650us; 474us; 652us; 423us; 656us; 474us; 659us; 474us; 660us; 474us; 706us; 423us; 716us; 423us; 719us; 423us; 727us; 474us; 728us; 474us; 738us; 423us; 745us; 423us; 751us; 423us; 752us; 423us; 765us; 423us; 777us; 474us; 778us; 474us; 780us; 423us; 782us; 474us; 786us; 474us; 787us; 474us; 795us; 474us; 800us; 474us; 825us; 474us; 87us; 65535us; 122us; 484us; 127us; 484us; 130us; 484us; 157us; 484us; 233us; 484us; 243us; 484us; 259us; 484us; 263us; 484us; 273us; 484us; 290us; 484us; 295us; 484us; 398us; 484us; 403us; 484us; 415us; 484us; 417us; 484us; 420us; 484us; 423us; 484us; 437us; 484us; 444us; 484us; 451us; 484us; 454us; 484us; 458us; 484us; 466us; 484us; 469us; 484us; 472us; 484us; 474us; 484us; 478us; 484us; 480us; 484us; 485us; 484us; 488us; 484us; 492us; 484us; 496us; 484us; 501us; 484us; 503us; 484us; 514us; 484us; 522us; 484us; 529us; 484us; 573us; 484us; 575us; 484us; 576us; 484us; 577us; 484us; 578us; 484us; 579us; 484us; 580us; 484us; 581us; 484us; 582us; 484us; 583us; 484us; 584us; 484us; 585us; 484us; 586us; 484us; 587us; 484us; 588us; 484us; 589us; 484us; 590us; 484us; 591us; 484us; 592us; 484us; 593us; 484us; 594us; 484us; 617us; 484us; 639us; 484us; 640us; 484us; 644us; 484us; 646us; 484us; 650us; 484us; 652us; 484us; 656us; 484us; 659us; 484us; 660us; 484us; 706us; 484us; 716us; 484us; 719us; 484us; 727us; 484us; 728us; 484us; 738us; 484us; 745us; 484us; 751us; 484us; 752us; 484us; 765us; 484us; 777us; 484us; 778us; 484us; 780us; 484us; 782us; 484us; 786us; 484us; 787us; 484us; 795us; 484us; 800us; 484us; 825us; 484us; 0us; 65535us; 6us; 65535us; 237us; 238us; 241us; 242us; 244us; 245us; 459us; 460us; 486us; 487us; 489us; 490us; 4us; 65535us; 228us; 229us; 231us; 232us; 236us; 237us; 240us; 241us; 2us; 65535us; 248us; 249us; 251us; 252us; 5us; 65535us; 228us; 248us; 231us; 248us; 236us; 248us; 240us; 248us; 250us; 251us; 5us; 65535us; 228us; 253us; 231us; 253us; 236us; 253us; 240us; 253us; 250us; 253us; 1us; 65535us; 259us; 260us; 2us; 65535us; 259us; 267us; 263us; 264us; 1us; 65535us; 268us; 269us; 1us; 65535us; 269us; 270us; 1us; 65535us; 271us; 272us; 2us; 65535us; 271us; 277us; 275us; 276us; 172us; 65535us; 54us; 306us; 58us; 306us; 63us; 306us; 119us; 306us; 122us; 306us; 124us; 306us; 127us; 306us; 130us; 306us; 153us; 926us; 157us; 306us; 169us; 306us; 193us; 926us; 196us; 926us; 209us; 926us; 213us; 926us; 222us; 926us; 233us; 306us; 243us; 306us; 256us; 306us; 259us; 306us; 263us; 306us; 273us; 306us; 279us; 926us; 288us; 306us; 290us; 306us; 293us; 306us; 295us; 306us; 319us; 306us; 320us; 306us; 324us; 306us; 325us; 306us; 326us; 306us; 327us; 306us; 329us; 306us; 331us; 306us; 333us; 306us; 336us; 306us; 338us; 306us; 340us; 306us; 345us; 306us; 348us; 306us; 357us; 306us; 377us; 306us; 380us; 926us; 382us; 306us; 384us; 306us; 385us; 306us; 386us; 306us; 387us; 306us; 394us; 306us; 396us; 306us; 398us; 306us; 403us; 306us; 410us; 926us; 415us; 306us; 417us; 306us; 420us; 306us; 423us; 306us; 437us; 306us; 444us; 306us; 451us; 306us; 454us; 306us; 458us; 306us; 466us; 306us; 469us; 306us; 472us; 306us; 474us; 306us; 478us; 306us; 480us; 306us; 485us; 306us; 488us; 306us; 492us; 306us; 496us; 306us; 501us; 306us; 503us; 306us; 512us; 306us; 514us; 306us; 522us; 306us; 529us; 306us; 571us; 926us; 573us; 306us; 575us; 306us; 576us; 306us; 577us; 306us; 578us; 306us; 579us; 306us; 580us; 306us; 581us; 306us; 582us; 306us; 583us; 306us; 584us; 306us; 585us; 306us; 586us; 306us; 587us; 306us; 588us; 306us; 589us; 306us; 590us; 306us; 591us; 306us; 592us; 306us; 593us; 306us; 594us; 306us; 617us; 306us; 620us; 306us; 622us; 306us; 627us; 306us; 634us; 306us; 639us; 306us; 640us; 306us; 644us; 306us; 646us; 306us; 650us; 306us; 652us; 306us; 656us; 306us; 659us; 306us; 660us; 306us; 661us; 306us; 662us; 306us; 664us; 306us; 665us; 306us; 667us; 306us; 668us; 306us; 670us; 926us; 672us; 306us; 676us; 306us; 678us; 306us; 679us; 306us; 682us; 306us; 688us; 306us; 689us; 306us; 692us; 306us; 693us; 306us; 706us; 306us; 716us; 306us; 719us; 306us; 727us; 306us; 728us; 306us; 738us; 306us; 745us; 306us; 751us; 306us; 752us; 306us; 765us; 306us; 777us; 306us; 778us; 306us; 780us; 306us; 782us; 306us; 786us; 306us; 787us; 306us; 789us; 926us; 791us; 306us; 795us; 306us; 800us; 306us; 825us; 306us; 833us; 926us; 836us; 926us; 839us; 926us; 842us; 926us; 845us; 926us; 849us; 926us; 852us; 926us; 855us; 926us; 857us; 926us; 859us; 926us; 862us; 926us; 864us; 926us; 867us; 926us; 874us; 926us; 886us; 926us; 887us; 926us; 904us; 926us; 908us; 926us; 938us; 926us; 940us; 926us; 87us; 65535us; 122us; 491us; 127us; 491us; 130us; 491us; 157us; 491us; 233us; 491us; 243us; 491us; 259us; 491us; 263us; 491us; 273us; 491us; 290us; 491us; 295us; 491us; 398us; 491us; 403us; 491us; 415us; 491us; 417us; 491us; 420us; 491us; 423us; 491us; 437us; 491us; 444us; 491us; 451us; 491us; 454us; 491us; 458us; 491us; 466us; 491us; 469us; 491us; 472us; 491us; 474us; 491us; 478us; 491us; 480us; 491us; 485us; 491us; 488us; 491us; 492us; 491us; 496us; 491us; 501us; 491us; 503us; 491us; 514us; 491us; 522us; 491us; 529us; 491us; 573us; 491us; 575us; 491us; 576us; 491us; 577us; 491us; 578us; 491us; 579us; 491us; 580us; 491us; 581us; 491us; 582us; 491us; 583us; 491us; 584us; 491us; 585us; 491us; 586us; 491us; 587us; 491us; 588us; 491us; 589us; 491us; 590us; 491us; 591us; 491us; 592us; 491us; 593us; 491us; 594us; 491us; 617us; 491us; 639us; 491us; 640us; 491us; 644us; 491us; 646us; 491us; 650us; 491us; 652us; 491us; 656us; 491us; 659us; 491us; 660us; 491us; 706us; 491us; 716us; 491us; 719us; 491us; 727us; 491us; 728us; 491us; 738us; 491us; 745us; 491us; 751us; 491us; 752us; 491us; 765us; 491us; 777us; 491us; 778us; 491us; 780us; 491us; 782us; 491us; 786us; 491us; 787us; 491us; 795us; 491us; 800us; 491us; 825us; 491us; 140us; 65535us; 54us; 730us; 58us; 730us; 63us; 730us; 119us; 353us; 122us; 730us; 124us; 353us; 127us; 730us; 130us; 730us; 157us; 730us; 169us; 353us; 233us; 730us; 243us; 730us; 256us; 353us; 259us; 730us; 263us; 730us; 273us; 730us; 288us; 353us; 290us; 730us; 293us; 353us; 295us; 730us; 319us; 353us; 320us; 353us; 324us; 353us; 325us; 353us; 326us; 353us; 327us; 353us; 329us; 353us; 331us; 353us; 333us; 353us; 336us; 353us; 338us; 353us; 340us; 353us; 345us; 353us; 348us; 353us; 357us; 353us; 377us; 353us; 382us; 353us; 384us; 353us; 385us; 353us; 386us; 353us; 387us; 353us; 394us; 353us; 396us; 353us; 398us; 730us; 403us; 730us; 415us; 730us; 417us; 730us; 420us; 730us; 423us; 730us; 437us; 730us; 444us; 730us; 451us; 730us; 454us; 730us; 458us; 730us; 466us; 730us; 469us; 730us; 472us; 730us; 474us; 730us; 478us; 730us; 480us; 730us; 485us; 730us; 488us; 730us; 492us; 730us; 496us; 730us; 501us; 730us; 503us; 730us; 512us; 353us; 514us; 730us; 522us; 730us; 529us; 730us; 573us; 730us; 575us; 730us; 576us; 730us; 577us; 730us; 578us; 730us; 579us; 730us; 580us; 730us; 581us; 730us; 582us; 730us; 583us; 730us; 584us; 730us; 585us; 730us; 586us; 730us; 587us; 730us; 588us; 730us; 589us; 730us; 590us; 730us; 591us; 730us; 592us; 730us; 593us; 730us; 594us; 730us; 617us; 730us; 620us; 353us; 622us; 353us; 627us; 353us; 634us; 353us; 639us; 730us; 640us; 730us; 644us; 730us; 646us; 730us; 650us; 730us; 652us; 730us; 656us; 730us; 659us; 730us; 660us; 730us; 661us; 730us; 662us; 730us; 664us; 730us; 665us; 730us; 667us; 730us; 668us; 730us; 672us; 730us; 676us; 730us; 678us; 730us; 679us; 730us; 682us; 730us; 688us; 730us; 689us; 730us; 692us; 730us; 693us; 730us; 706us; 730us; 716us; 730us; 719us; 730us; 727us; 730us; 728us; 730us; 738us; 730us; 745us; 730us; 751us; 730us; 752us; 730us; 765us; 730us; 777us; 730us; 778us; 730us; 780us; 730us; 782us; 730us; 786us; 730us; 787us; 730us; 791us; 730us; 795us; 730us; 800us; 730us; 825us; 730us; 3us; 65535us; 119us; 120us; 169us; 155us; 256us; 257us; 1us; 65535us; 124us; 125us; 10us; 65535us; 119us; 309us; 124us; 310us; 169us; 309us; 256us; 309us; 319us; 311us; 320us; 312us; 324us; 313us; 325us; 314us; 326us; 315us; 327us; 316us; 10us; 65535us; 119us; 321us; 124us; 321us; 169us; 321us; 256us; 321us; 319us; 321us; 320us; 321us; 324us; 321us; 325us; 321us; 326us; 321us; 327us; 321us; 10us; 65535us; 119us; 322us; 124us; 322us; 169us; 322us; 256us; 322us; 319us; 322us; 320us; 322us; 324us; 322us; 325us; 322us; 326us; 322us; 327us; 322us; 26us; 65535us; 119us; 323us; 124us; 323us; 169us; 323us; 256us; 323us; 319us; 323us; 320us; 323us; 324us; 323us; 325us; 323us; 326us; 323us; 327us; 323us; 345us; 383us; 348us; 383us; 357us; 383us; 377us; 383us; 382us; 383us; 384us; 383us; 385us; 383us; 386us; 383us; 387us; 383us; 394us; 383us; 396us; 383us; 512us; 383us; 620us; 383us; 622us; 383us; 627us; 383us; 634us; 383us; 1us; 65535us; 328us; 329us; 8us; 65535us; 288us; 289us; 293us; 294us; 329us; 330us; 331us; 332us; 333us; 334us; 336us; 337us; 338us; 339us; 340us; 341us; 34us; 65535us; 119us; 335us; 124us; 335us; 169us; 335us; 256us; 335us; 288us; 336us; 293us; 336us; 319us; 335us; 320us; 335us; 324us; 335us; 325us; 335us; 326us; 335us; 327us; 335us; 329us; 336us; 331us; 336us; 333us; 336us; 336us; 336us; 338us; 336us; 340us; 336us; 345us; 335us; 348us; 335us; 357us; 335us; 377us; 335us; 382us; 335us; 384us; 335us; 385us; 335us; 386us; 335us; 387us; 335us; 394us; 335us; 396us; 335us; 512us; 335us; 620us; 335us; 622us; 335us; 627us; 335us; 634us; 335us; 1us; 65535us; 357us; 358us; 16us; 65535us; 345us; 372us; 348us; 372us; 357us; 364us; 377us; 365us; 382us; 366us; 384us; 367us; 385us; 368us; 386us; 369us; 387us; 370us; 394us; 371us; 396us; 372us; 512us; 373us; 620us; 374us; 622us; 374us; 627us; 374us; 634us; 374us; 16us; 65535us; 345us; 378us; 348us; 378us; 357us; 378us; 377us; 378us; 382us; 378us; 384us; 378us; 385us; 378us; 386us; 378us; 387us; 378us; 394us; 378us; 396us; 378us; 512us; 378us; 620us; 378us; 622us; 378us; 627us; 378us; 634us; 378us; 16us; 65535us; 345us; 379us; 348us; 379us; 357us; 379us; 377us; 379us; 382us; 379us; 384us; 379us; 385us; 379us; 386us; 379us; 387us; 379us; 394us; 379us; 396us; 379us; 512us; 379us; 620us; 379us; 622us; 379us; 627us; 379us; 634us; 379us; 1us; 65535us; 342us; 343us; 2us; 65535us; 342us; 388us; 391us; 392us; 2us; 65535us; 342us; 389us; 391us; 389us; 3us; 65535us; 345us; 346us; 348us; 349us; 396us; 397us; 0us; 65535us; 20us; 65535us; 122us; 123us; 127us; 128us; 130us; 131us; 157us; 158us; 233us; 234us; 243us; 244us; 273us; 274us; 290us; 291us; 423us; 475us; 458us; 459us; 472us; 473us; 474us; 475us; 478us; 479us; 480us; 481us; 485us; 486us; 488us; 489us; 503us; 504us; 514us; 515us; 522us; 523us; 529us; 530us; 3us; 65535us; 795us; 796us; 800us; 801us; 825us; 826us; 3us; 65535us; 295us; 296us; 640us; 641us; 780us; 781us; 40us; 65535us; 122us; 402us; 127us; 402us; 130us; 402us; 157us; 402us; 233us; 402us; 243us; 402us; 259us; 268us; 263us; 268us; 273us; 402us; 290us; 402us; 295us; 407us; 398us; 399us; 403us; 404us; 420us; 421us; 423us; 402us; 454us; 455us; 458us; 402us; 466us; 467us; 469us; 470us; 472us; 402us; 474us; 402us; 478us; 402us; 480us; 402us; 485us; 402us; 488us; 402us; 492us; 493us; 503us; 402us; 514us; 402us; 522us; 402us; 529us; 402us; 617us; 618us; 640us; 407us; 646us; 647us; 652us; 653us; 716us; 717us; 719us; 720us; 738us; 739us; 751us; 764us; 752us; 764us; 780us; 407us; 45us; 65535us; 122us; 409us; 127us; 409us; 130us; 409us; 157us; 409us; 233us; 409us; 243us; 409us; 259us; 409us; 263us; 409us; 273us; 409us; 290us; 409us; 295us; 409us; 398us; 409us; 403us; 409us; 415us; 416us; 417us; 418us; 420us; 409us; 423us; 409us; 454us; 409us; 458us; 409us; 466us; 409us; 469us; 409us; 472us; 409us; 474us; 409us; 478us; 409us; 480us; 409us; 485us; 409us; 488us; 409us; 492us; 409us; 503us; 409us; 514us; 409us; 522us; 409us; 529us; 409us; 617us; 409us; 640us; 409us; 646us; 409us; 652us; 409us; 706us; 775us; 716us; 409us; 719us; 409us; 738us; 409us; 745us; 775us; 751us; 409us; 752us; 409us; 765us; 775us; 780us; 409us; 64us; 65535us; 0us; 15us; 19us; 22us; 40us; 1103us; 42us; 1103us; 108us; 109us; 147us; 149us; 179us; 181us; 237us; 247us; 241us; 247us; 244us; 247us; 258us; 262us; 264us; 266us; 295us; 301us; 296us; 298us; 357us; 363us; 358us; 360us; 373us; 534us; 399us; 401us; 455us; 457us; 459us; 247us; 486us; 247us; 489us; 247us; 493us; 495us; 496us; 500us; 497us; 499us; 501us; 510us; 502us; 509us; 504us; 506us; 512us; 1103us; 513us; 1103us; 514us; 1103us; 515us; 1103us; 521us; 528us; 522us; 527us; 523us; 525us; 561us; 658us; 623us; 625us; 647us; 649us; 653us; 655us; 694us; 715us; 697us; 715us; 706us; 711us; 707us; 709us; 719us; 724us; 720us; 722us; 739us; 741us; 745us; 750us; 746us; 748us; 751us; 763us; 752us; 763us; 754us; 1097us; 765us; 770us; 766us; 768us; 777us; 779us; 782us; 1103us; 824us; 1103us; 825us; 1103us; 907us; 943us; 923us; 925us; 933us; 1103us; 938us; 949us; 940us; 1103us; 945us; 947us; 985us; 1103us; 91us; 65535us; 122us; 462us; 127us; 462us; 130us; 462us; 157us; 462us; 233us; 462us; 243us; 462us; 259us; 462us; 263us; 462us; 273us; 462us; 290us; 462us; 295us; 462us; 398us; 462us; 403us; 462us; 415us; 462us; 417us; 462us; 420us; 462us; 423us; 462us; 437us; 462us; 439us; 442us; 441us; 443us; 444us; 462us; 446us; 449us; 448us; 450us; 451us; 462us; 454us; 462us; 458us; 462us; 466us; 462us; 469us; 462us; 472us; 462us; 474us; 462us; 478us; 462us; 480us; 462us; 485us; 462us; 488us; 462us; 492us; 462us; 496us; 462us; 501us; 462us; 503us; 462us; 514us; 462us; 522us; 462us; 529us; 462us; 573us; 462us; 575us; 462us; 576us; 462us; 577us; 462us; 578us; 462us; 579us; 462us; 580us; 462us; 581us; 462us; 582us; 462us; 583us; 462us; 584us; 462us; 585us; 462us; 586us; 462us; 587us; 462us; 588us; 462us; 589us; 462us; 590us; 462us; 591us; 462us; 592us; 462us; 593us; 462us; 594us; 462us; 617us; 462us; 639us; 462us; 640us; 462us; 644us; 462us; 646us; 462us; 650us; 462us; 652us; 462us; 656us; 462us; 659us; 462us; 660us; 462us; 706us; 462us; 716us; 462us; 719us; 462us; 727us; 462us; 728us; 462us; 738us; 462us; 745us; 462us; 751us; 462us; 752us; 462us; 765us; 462us; 777us; 462us; 778us; 462us; 780us; 462us; 782us; 462us; 786us; 462us; 787us; 462us; 795us; 462us; 800us; 462us; 825us; 462us; 87us; 65535us; 122us; 463us; 127us; 463us; 130us; 463us; 157us; 463us; 233us; 463us; 243us; 463us; 259us; 463us; 263us; 463us; 273us; 463us; 290us; 463us; 295us; 463us; 398us; 463us; 403us; 463us; 415us; 463us; 417us; 463us; 420us; 463us; 423us; 463us; 437us; 463us; 444us; 463us; 451us; 463us; 454us; 463us; 458us; 463us; 466us; 463us; 469us; 463us; 472us; 463us; 474us; 463us; 478us; 463us; 480us; 463us; 485us; 463us; 488us; 463us; 492us; 463us; 496us; 463us; 501us; 463us; 503us; 463us; 514us; 463us; 522us; 463us; 529us; 463us; 573us; 463us; 575us; 463us; 576us; 463us; 577us; 463us; 578us; 463us; 579us; 463us; 580us; 463us; 581us; 463us; 582us; 463us; 583us; 463us; 584us; 463us; 585us; 463us; 586us; 463us; 587us; 463us; 588us; 463us; 589us; 463us; 590us; 463us; 591us; 463us; 592us; 463us; 593us; 463us; 594us; 463us; 617us; 463us; 639us; 463us; 640us; 463us; 644us; 463us; 646us; 463us; 650us; 463us; 652us; 463us; 656us; 463us; 659us; 463us; 660us; 463us; 706us; 463us; 716us; 463us; 719us; 463us; 727us; 463us; 728us; 463us; 738us; 463us; 745us; 463us; 751us; 463us; 752us; 463us; 765us; 463us; 777us; 463us; 778us; 463us; 780us; 463us; 782us; 463us; 786us; 463us; 787us; 463us; 795us; 463us; 800us; 463us; 825us; 463us; 4us; 65535us; 438us; 439us; 440us; 441us; 445us; 446us; 447us; 448us; 88us; 65535us; 122us; 464us; 127us; 464us; 130us; 464us; 157us; 464us; 233us; 464us; 243us; 464us; 259us; 464us; 263us; 464us; 273us; 464us; 290us; 464us; 295us; 464us; 398us; 464us; 403us; 464us; 415us; 464us; 417us; 464us; 420us; 464us; 423us; 464us; 437us; 464us; 444us; 464us; 451us; 464us; 454us; 464us; 458us; 464us; 460us; 461us; 466us; 464us; 469us; 464us; 472us; 464us; 474us; 464us; 478us; 464us; 480us; 464us; 485us; 464us; 488us; 464us; 492us; 464us; 496us; 464us; 501us; 464us; 503us; 464us; 514us; 464us; 522us; 464us; 529us; 464us; 573us; 464us; 575us; 464us; 576us; 464us; 577us; 464us; 578us; 464us; 579us; 464us; 580us; 464us; 581us; 464us; 582us; 464us; 583us; 464us; 584us; 464us; 585us; 464us; 586us; 464us; 587us; 464us; 588us; 464us; 589us; 464us; 590us; 464us; 591us; 464us; 592us; 464us; 593us; 464us; 594us; 464us; 617us; 464us; 639us; 464us; 640us; 464us; 644us; 464us; 646us; 464us; 650us; 464us; 652us; 464us; 656us; 464us; 659us; 464us; 660us; 464us; 706us; 464us; 716us; 464us; 719us; 464us; 727us; 464us; 728us; 464us; 738us; 464us; 745us; 464us; 751us; 464us; 752us; 464us; 765us; 464us; 777us; 464us; 778us; 464us; 780us; 464us; 782us; 464us; 786us; 464us; 787us; 464us; 795us; 464us; 800us; 464us; 825us; 464us; 87us; 65535us; 122us; 412us; 127us; 412us; 130us; 412us; 157us; 412us; 233us; 412us; 243us; 412us; 259us; 412us; 263us; 412us; 273us; 412us; 290us; 412us; 295us; 412us; 398us; 412us; 403us; 412us; 415us; 412us; 417us; 412us; 420us; 412us; 423us; 412us; 437us; 440us; 444us; 447us; 451us; 452us; 454us; 412us; 458us; 412us; 466us; 412us; 469us; 412us; 472us; 412us; 474us; 412us; 478us; 412us; 480us; 412us; 485us; 412us; 488us; 412us; 492us; 412us; 496us; 497us; 501us; 502us; 503us; 412us; 514us; 412us; 522us; 412us; 529us; 412us; 573us; 537us; 575us; 538us; 576us; 539us; 577us; 540us; 578us; 541us; 579us; 542us; 580us; 543us; 581us; 544us; 582us; 545us; 583us; 546us; 584us; 547us; 585us; 548us; 586us; 549us; 587us; 550us; 588us; 551us; 589us; 552us; 590us; 553us; 591us; 554us; 592us; 555us; 593us; 556us; 594us; 557us; 617us; 412us; 639us; 558us; 640us; 412us; 644us; 559us; 646us; 412us; 650us; 560us; 652us; 412us; 656us; 561us; 659us; 562us; 660us; 563us; 706us; 414us; 716us; 412us; 719us; 413us; 727us; 564us; 728us; 565us; 738us; 412us; 745us; 414us; 751us; 412us; 752us; 412us; 765us; 414us; 777us; 567us; 778us; 568us; 780us; 412us; 782us; 566us; 786us; 569us; 787us; 570us; 795us; 406us; 800us; 406us; 825us; 406us; 1us; 65535us; 702us; 703us; 1us; 65535us; 493us; 494us; 2us; 65535us; 620us; 621us; 622us; 623us; 4us; 65535us; 620us; 632us; 622us; 632us; 627us; 632us; 634us; 632us; 4us; 65535us; 620us; 626us; 622us; 626us; 627us; 628us; 634us; 635us; 1us; 65535us; 374us; 631us; 1us; 65535us; 632us; 633us; 0us; 65535us; 2us; 65535us; 497us; 498us; 561us; 657us; 2us; 65535us; 497us; 642us; 561us; 642us; 1us; 65535us; 642us; 643us; 0us; 65535us; 87us; 65535us; 122us; 574us; 127us; 574us; 130us; 574us; 157us; 574us; 233us; 574us; 243us; 574us; 259us; 574us; 263us; 574us; 273us; 574us; 290us; 574us; 295us; 574us; 398us; 574us; 403us; 574us; 415us; 574us; 417us; 574us; 420us; 574us; 423us; 574us; 437us; 574us; 444us; 574us; 451us; 574us; 454us; 574us; 458us; 574us; 466us; 574us; 469us; 574us; 472us; 574us; 474us; 574us; 478us; 574us; 480us; 574us; 485us; 574us; 488us; 574us; 492us; 574us; 496us; 574us; 501us; 574us; 503us; 574us; 514us; 574us; 522us; 574us; 529us; 574us; 573us; 574us; 575us; 574us; 576us; 574us; 577us; 574us; 578us; 574us; 579us; 574us; 580us; 574us; 581us; 574us; 582us; 574us; 583us; 574us; 584us; 574us; 585us; 574us; 586us; 574us; 587us; 574us; 588us; 574us; 589us; 574us; 590us; 574us; 591us; 574us; 592us; 574us; 593us; 574us; 594us; 574us; 617us; 574us; 639us; 574us; 640us; 574us; 644us; 574us; 646us; 574us; 650us; 574us; 652us; 574us; 656us; 574us; 659us; 574us; 660us; 574us; 706us; 574us; 716us; 574us; 719us; 574us; 727us; 574us; 728us; 574us; 738us; 574us; 745us; 574us; 751us; 574us; 752us; 574us; 765us; 574us; 777us; 574us; 778us; 574us; 780us; 574us; 782us; 574us; 786us; 574us; 787us; 574us; 795us; 574us; 800us; 574us; 825us; 574us; 94us; 65535us; 122us; 615us; 127us; 615us; 130us; 615us; 157us; 615us; 233us; 615us; 243us; 615us; 259us; 615us; 263us; 615us; 273us; 615us; 290us; 615us; 295us; 615us; 398us; 615us; 403us; 615us; 415us; 615us; 417us; 615us; 420us; 615us; 423us; 615us; 437us; 615us; 444us; 615us; 451us; 615us; 454us; 615us; 458us; 615us; 466us; 615us; 469us; 615us; 472us; 615us; 474us; 615us; 478us; 615us; 480us; 615us; 485us; 615us; 488us; 615us; 492us; 615us; 496us; 615us; 501us; 615us; 503us; 615us; 514us; 615us; 522us; 615us; 529us; 615us; 573us; 615us; 575us; 615us; 576us; 615us; 577us; 615us; 578us; 615us; 579us; 615us; 580us; 615us; 581us; 615us; 582us; 615us; 583us; 615us; 584us; 615us; 585us; 615us; 586us; 615us; 587us; 615us; 588us; 615us; 589us; 615us; 590us; 615us; 591us; 615us; 592us; 615us; 593us; 615us; 594us; 615us; 617us; 615us; 639us; 615us; 640us; 615us; 644us; 615us; 646us; 615us; 650us; 615us; 652us; 615us; 656us; 615us; 659us; 615us; 660us; 615us; 661us; 663us; 662us; 663us; 664us; 666us; 665us; 666us; 667us; 669us; 668us; 669us; 676us; 677us; 706us; 615us; 716us; 615us; 719us; 615us; 727us; 615us; 728us; 615us; 738us; 615us; 745us; 615us; 751us; 615us; 752us; 615us; 765us; 615us; 777us; 615us; 778us; 615us; 780us; 615us; 782us; 615us; 786us; 615us; 787us; 615us; 795us; 615us; 800us; 615us; 825us; 615us; 94us; 65535us; 122us; 678us; 127us; 678us; 130us; 678us; 157us; 678us; 233us; 678us; 243us; 678us; 259us; 678us; 263us; 678us; 273us; 678us; 290us; 678us; 295us; 678us; 398us; 678us; 403us; 678us; 415us; 678us; 417us; 678us; 420us; 678us; 423us; 678us; 437us; 678us; 444us; 678us; 451us; 678us; 454us; 678us; 458us; 678us; 466us; 678us; 469us; 678us; 472us; 678us; 474us; 678us; 478us; 678us; 480us; 678us; 485us; 678us; 488us; 678us; 492us; 678us; 496us; 678us; 501us; 678us; 503us; 678us; 514us; 678us; 522us; 678us; 529us; 678us; 573us; 678us; 575us; 678us; 576us; 678us; 577us; 678us; 578us; 678us; 579us; 678us; 580us; 678us; 581us; 678us; 582us; 678us; 583us; 678us; 584us; 678us; 585us; 678us; 586us; 678us; 587us; 678us; 588us; 678us; 589us; 678us; 590us; 678us; 591us; 678us; 592us; 678us; 593us; 678us; 594us; 678us; 617us; 678us; 639us; 678us; 640us; 678us; 644us; 678us; 646us; 678us; 650us; 678us; 652us; 678us; 656us; 678us; 659us; 678us; 660us; 678us; 661us; 678us; 662us; 678us; 664us; 678us; 665us; 678us; 667us; 678us; 668us; 678us; 676us; 678us; 706us; 678us; 716us; 678us; 719us; 678us; 727us; 678us; 728us; 678us; 738us; 678us; 745us; 678us; 751us; 678us; 752us; 678us; 765us; 679us; 777us; 678us; 778us; 678us; 780us; 678us; 782us; 678us; 786us; 678us; 787us; 678us; 795us; 678us; 800us; 678us; 825us; 678us; 2us; 65535us; 678us; 680us; 679us; 680us; 101us; 65535us; 122us; 681us; 127us; 681us; 130us; 681us; 157us; 681us; 233us; 681us; 243us; 681us; 259us; 681us; 263us; 681us; 273us; 681us; 290us; 681us; 295us; 681us; 398us; 681us; 403us; 681us; 415us; 681us; 417us; 681us; 420us; 681us; 423us; 681us; 437us; 681us; 444us; 681us; 451us; 681us; 454us; 681us; 458us; 681us; 466us; 681us; 469us; 681us; 472us; 681us; 474us; 681us; 478us; 681us; 480us; 681us; 485us; 681us; 488us; 681us; 492us; 681us; 496us; 681us; 501us; 681us; 503us; 681us; 514us; 681us; 522us; 681us; 529us; 681us; 573us; 681us; 575us; 681us; 576us; 681us; 577us; 681us; 578us; 681us; 579us; 681us; 580us; 681us; 581us; 681us; 582us; 681us; 583us; 681us; 584us; 681us; 585us; 681us; 586us; 681us; 587us; 681us; 588us; 681us; 589us; 681us; 590us; 681us; 591us; 681us; 592us; 681us; 593us; 681us; 594us; 681us; 617us; 681us; 639us; 681us; 640us; 681us; 644us; 681us; 646us; 681us; 650us; 681us; 652us; 681us; 656us; 681us; 659us; 681us; 660us; 681us; 661us; 681us; 662us; 681us; 664us; 681us; 665us; 681us; 667us; 681us; 668us; 681us; 676us; 681us; 678us; 684us; 679us; 684us; 682us; 683us; 688us; 685us; 689us; 686us; 692us; 687us; 693us; 687us; 706us; 681us; 716us; 681us; 719us; 681us; 727us; 681us; 728us; 681us; 738us; 681us; 745us; 681us; 751us; 681us; 752us; 681us; 765us; 681us; 777us; 681us; 778us; 681us; 780us; 681us; 782us; 681us; 786us; 681us; 787us; 681us; 795us; 681us; 800us; 681us; 825us; 681us; 2us; 65535us; 694us; 695us; 697us; 698us; 1us; 65535us; 719us; 725us; 106us; 65535us; 54us; 788us; 58us; 788us; 63us; 788us; 122us; 712us; 127us; 712us; 130us; 712us; 157us; 712us; 233us; 712us; 243us; 712us; 259us; 712us; 263us; 712us; 273us; 712us; 290us; 712us; 295us; 712us; 398us; 712us; 403us; 712us; 415us; 712us; 417us; 712us; 420us; 712us; 423us; 712us; 437us; 712us; 444us; 712us; 451us; 712us; 454us; 712us; 458us; 712us; 466us; 712us; 469us; 712us; 472us; 712us; 474us; 712us; 478us; 712us; 480us; 712us; 485us; 712us; 488us; 712us; 492us; 712us; 496us; 712us; 501us; 712us; 503us; 712us; 514us; 712us; 522us; 712us; 529us; 712us; 573us; 712us; 575us; 712us; 576us; 712us; 577us; 712us; 578us; 712us; 579us; 712us; 580us; 712us; 581us; 712us; 582us; 712us; 583us; 712us; 584us; 712us; 585us; 712us; 586us; 712us; 587us; 712us; 588us; 712us; 589us; 712us; 590us; 712us; 591us; 712us; 592us; 712us; 593us; 712us; 594us; 712us; 617us; 712us; 639us; 712us; 640us; 712us; 644us; 712us; 646us; 712us; 650us; 712us; 652us; 712us; 656us; 712us; 659us; 712us; 660us; 712us; 661us; 712us; 662us; 712us; 664us; 712us; 665us; 712us; 667us; 712us; 668us; 712us; 672us; 673us; 676us; 712us; 678us; 712us; 679us; 712us; 682us; 712us; 688us; 712us; 689us; 712us; 692us; 712us; 693us; 712us; 706us; 712us; 716us; 712us; 719us; 712us; 727us; 712us; 728us; 712us; 738us; 712us; 745us; 712us; 751us; 712us; 752us; 712us; 765us; 712us; 777us; 712us; 778us; 712us; 780us; 712us; 782us; 712us; 786us; 712us; 787us; 712us; 791us; 788us; 795us; 712us; 800us; 712us; 825us; 712us; 106us; 65535us; 54us; 737us; 58us; 737us; 63us; 737us; 122us; 737us; 127us; 737us; 130us; 737us; 157us; 737us; 233us; 737us; 243us; 737us; 259us; 737us; 263us; 737us; 273us; 737us; 290us; 737us; 295us; 737us; 398us; 737us; 403us; 737us; 415us; 737us; 417us; 737us; 420us; 737us; 423us; 737us; 437us; 737us; 444us; 737us; 451us; 737us; 454us; 737us; 458us; 737us; 466us; 737us; 469us; 737us; 472us; 737us; 474us; 737us; 478us; 737us; 480us; 737us; 485us; 737us; 488us; 737us; 492us; 737us; 496us; 737us; 501us; 737us; 503us; 737us; 514us; 737us; 522us; 737us; 529us; 737us; 573us; 737us; 575us; 737us; 576us; 737us; 577us; 737us; 578us; 737us; 579us; 737us; 580us; 737us; 581us; 737us; 582us; 737us; 583us; 737us; 584us; 737us; 585us; 737us; 586us; 737us; 587us; 737us; 588us; 737us; 589us; 737us; 590us; 737us; 591us; 737us; 592us; 737us; 593us; 737us; 594us; 737us; 617us; 737us; 639us; 737us; 640us; 737us; 644us; 737us; 646us; 737us; 650us; 737us; 652us; 737us; 656us; 737us; 659us; 737us; 660us; 737us; 661us; 737us; 662us; 737us; 664us; 737us; 665us; 737us; 667us; 737us; 668us; 737us; 672us; 737us; 676us; 737us; 678us; 737us; 679us; 737us; 682us; 737us; 688us; 737us; 689us; 737us; 692us; 737us; 693us; 737us; 706us; 737us; 716us; 737us; 719us; 737us; 727us; 737us; 728us; 737us; 738us; 737us; 745us; 737us; 751us; 737us; 752us; 737us; 765us; 737us; 777us; 737us; 778us; 737us; 780us; 737us; 782us; 737us; 786us; 737us; 787us; 737us; 791us; 737us; 795us; 737us; 800us; 737us; 825us; 737us; 106us; 65535us; 54us; 736us; 58us; 736us; 63us; 736us; 122us; 736us; 127us; 736us; 130us; 736us; 157us; 736us; 233us; 736us; 243us; 736us; 259us; 736us; 263us; 736us; 273us; 736us; 290us; 736us; 295us; 736us; 398us; 736us; 403us; 736us; 415us; 736us; 417us; 736us; 420us; 736us; 423us; 736us; 437us; 736us; 444us; 736us; 451us; 736us; 454us; 736us; 458us; 736us; 466us; 736us; 469us; 736us; 472us; 736us; 474us; 736us; 478us; 736us; 480us; 736us; 485us; 736us; 488us; 736us; 492us; 736us; 496us; 736us; 501us; 736us; 503us; 736us; 514us; 736us; 522us; 736us; 529us; 736us; 573us; 736us; 575us; 736us; 576us; 736us; 577us; 736us; 578us; 736us; 579us; 736us; 580us; 736us; 581us; 736us; 582us; 736us; 583us; 736us; 584us; 736us; 585us; 736us; 586us; 736us; 587us; 736us; 588us; 736us; 589us; 736us; 590us; 736us; 591us; 736us; 592us; 736us; 593us; 736us; 594us; 736us; 617us; 736us; 639us; 736us; 640us; 736us; 644us; 736us; 646us; 736us; 650us; 736us; 652us; 736us; 656us; 736us; 659us; 736us; 660us; 736us; 661us; 736us; 662us; 736us; 664us; 736us; 665us; 736us; 667us; 736us; 668us; 736us; 672us; 736us; 676us; 736us; 678us; 736us; 679us; 736us; 682us; 736us; 688us; 736us; 689us; 736us; 692us; 736us; 693us; 736us; 706us; 736us; 716us; 736us; 719us; 736us; 727us; 736us; 728us; 736us; 738us; 736us; 745us; 736us; 751us; 736us; 752us; 736us; 765us; 736us; 777us; 736us; 778us; 736us; 780us; 736us; 782us; 736us; 786us; 736us; 787us; 736us; 791us; 736us; 795us; 736us; 800us; 736us; 825us; 736us; 106us; 65535us; 54us; 731us; 58us; 731us; 63us; 731us; 122us; 731us; 127us; 731us; 130us; 731us; 157us; 731us; 233us; 731us; 243us; 731us; 259us; 731us; 263us; 731us; 273us; 731us; 290us; 731us; 295us; 731us; 398us; 731us; 403us; 731us; 415us; 731us; 417us; 731us; 420us; 731us; 423us; 731us; 437us; 731us; 444us; 731us; 451us; 731us; 454us; 731us; 458us; 731us; 466us; 731us; 469us; 731us; 472us; 731us; 474us; 731us; 478us; 731us; 480us; 731us; 485us; 731us; 488us; 731us; 492us; 731us; 496us; 731us; 501us; 731us; 503us; 731us; 514us; 731us; 522us; 731us; 529us; 731us; 573us; 731us; 575us; 731us; 576us; 731us; 577us; 731us; 578us; 731us; 579us; 731us; 580us; 731us; 581us; 731us; 582us; 731us; 583us; 731us; 584us; 731us; 585us; 731us; 586us; 731us; 587us; 731us; 588us; 731us; 589us; 731us; 590us; 731us; 591us; 731us; 592us; 731us; 593us; 731us; 594us; 731us; 617us; 731us; 639us; 731us; 640us; 731us; 644us; 731us; 646us; 731us; 650us; 731us; 652us; 731us; 656us; 731us; 659us; 731us; 660us; 731us; 661us; 731us; 662us; 731us; 664us; 731us; 665us; 731us; 667us; 731us; 668us; 731us; 672us; 731us; 676us; 731us; 678us; 731us; 679us; 731us; 682us; 731us; 688us; 731us; 689us; 731us; 692us; 731us; 693us; 731us; 706us; 731us; 716us; 731us; 719us; 731us; 727us; 731us; 728us; 731us; 738us; 731us; 745us; 731us; 751us; 731us; 752us; 731us; 765us; 731us; 777us; 731us; 778us; 731us; 780us; 731us; 782us; 731us; 786us; 731us; 787us; 731us; 791us; 731us; 795us; 731us; 800us; 731us; 825us; 731us; 2us; 65535us; 751us; 754us; 752us; 754us; 0us; 65535us; 0us; 65535us; 106us; 65535us; 54us; 732us; 58us; 732us; 63us; 732us; 122us; 732us; 127us; 732us; 130us; 732us; 157us; 732us; 233us; 732us; 243us; 732us; 259us; 732us; 263us; 732us; 273us; 732us; 290us; 732us; 295us; 732us; 398us; 732us; 403us; 732us; 415us; 732us; 417us; 732us; 420us; 732us; 423us; 732us; 437us; 732us; 444us; 732us; 451us; 732us; 454us; 732us; 458us; 732us; 466us; 732us; 469us; 732us; 472us; 732us; 474us; 732us; 478us; 732us; 480us; 732us; 485us; 732us; 488us; 732us; 492us; 732us; 496us; 732us; 501us; 732us; 503us; 732us; 514us; 732us; 522us; 732us; 529us; 732us; 573us; 732us; 575us; 732us; 576us; 732us; 577us; 732us; 578us; 732us; 579us; 732us; 580us; 732us; 581us; 732us; 582us; 732us; 583us; 732us; 584us; 732us; 585us; 732us; 586us; 732us; 587us; 732us; 588us; 732us; 589us; 732us; 590us; 732us; 591us; 732us; 592us; 732us; 593us; 732us; 594us; 732us; 617us; 732us; 639us; 732us; 640us; 732us; 644us; 732us; 646us; 732us; 650us; 732us; 652us; 732us; 656us; 732us; 659us; 732us; 660us; 732us; 661us; 732us; 662us; 732us; 664us; 732us; 665us; 732us; 667us; 732us; 668us; 732us; 672us; 732us; 676us; 732us; 678us; 732us; 679us; 732us; 682us; 732us; 688us; 732us; 689us; 732us; 692us; 732us; 693us; 732us; 706us; 732us; 716us; 732us; 719us; 732us; 727us; 732us; 728us; 732us; 738us; 732us; 745us; 732us; 751us; 732us; 752us; 732us; 765us; 732us; 777us; 732us; 778us; 732us; 780us; 732us; 782us; 732us; 786us; 732us; 787us; 732us; 791us; 732us; 795us; 732us; 800us; 732us; 825us; 732us; 1us; 65535us; 765us; 766us; 0us; 65535us; 2us; 65535us; 706us; 707us; 745us; 746us; 3us; 65535us; 706us; 774us; 745us; 774us; 765us; 773us; 4us; 65535us; 706us; 776us; 745us; 776us; 765us; 776us; 782us; 783us; 1us; 65535us; 535us; 536us; 1us; 65535us; 512us; 513us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 512us; 521us; 0us; 65535us; 4us; 65535us; 54us; 55us; 58us; 59us; 63us; 64us; 791us; 792us; 1us; 65535us; 765us; 772us; 6us; 65535us; 793us; 794us; 797us; 798us; 802us; 803us; 806us; 807us; 808us; 809us; 812us; 813us; 6us; 65535us; 793us; 816us; 797us; 816us; 802us; 816us; 806us; 816us; 808us; 815us; 812us; 816us; 3us; 65535us; 804us; 824us; 808us; 824us; 816us; 824us; 5us; 65535us; 792us; 793us; 796us; 797us; 801us; 802us; 805us; 806us; 811us; 812us; 3us; 65535us; 804us; 805us; 808us; 811us; 816us; 823us; 1us; 65535us; 569us; 787us; 2us; 65535us; 380us; 381us; 410us; 411us; 2us; 65535us; 153us; 154us; 833us; 834us; 4us; 65535us; 120us; 121us; 124us; 129us; 125us; 126us; 257us; 258us; 4us; 65535us; 153us; 832us; 196us; 197us; 833us; 832us; 836us; 837us; 4us; 65535us; 153us; 835us; 196us; 835us; 833us; 835us; 836us; 835us; 2us; 65535us; 839us; 840us; 842us; 843us; 6us; 65535us; 153us; 838us; 196us; 838us; 833us; 838us; 836us; 838us; 839us; 841us; 842us; 841us; 12us; 65535us; 222us; 223us; 279us; 280us; 380us; 831us; 410us; 831us; 571us; 572us; 852us; 853us; 886us; 923us; 887us; 923us; 904us; 950us; 908us; 950us; 938us; 950us; 940us; 950us; 12us; 65535us; 222us; 851us; 279us; 851us; 380us; 851us; 410us; 851us; 571us; 851us; 852us; 851us; 886us; 851us; 887us; 851us; 904us; 851us; 908us; 851us; 938us; 851us; 940us; 851us; 5us; 65535us; 855us; 856us; 857us; 858us; 859us; 860us; 862us; 863us; 864us; 865us; 2us; 65535us; 213us; 214us; 867us; 868us; 43us; 65535us; 153us; 871us; 193us; 871us; 196us; 871us; 209us; 871us; 212us; 870us; 213us; 871us; 222us; 871us; 279us; 871us; 380us; 871us; 410us; 871us; 571us; 871us; 670us; 871us; 789us; 871us; 833us; 871us; 836us; 871us; 839us; 871us; 842us; 871us; 844us; 870us; 845us; 871us; 846us; 870us; 849us; 871us; 850us; 870us; 852us; 871us; 854us; 870us; 855us; 871us; 857us; 871us; 859us; 871us; 861us; 870us; 862us; 871us; 864us; 871us; 866us; 870us; 867us; 871us; 874us; 871us; 875us; 870us; 877us; 870us; 886us; 871us; 887us; 871us; 890us; 870us; 891us; 870us; 904us; 871us; 908us; 871us; 938us; 871us; 940us; 871us; 43us; 65535us; 153us; 921us; 193us; 921us; 196us; 921us; 209us; 921us; 212us; 884us; 213us; 921us; 222us; 921us; 279us; 921us; 380us; 921us; 410us; 921us; 571us; 921us; 670us; 921us; 789us; 921us; 833us; 921us; 836us; 921us; 839us; 921us; 842us; 921us; 844us; 884us; 845us; 921us; 846us; 884us; 849us; 921us; 850us; 884us; 852us; 921us; 854us; 884us; 855us; 921us; 857us; 921us; 859us; 921us; 861us; 884us; 862us; 921us; 864us; 921us; 866us; 884us; 867us; 921us; 874us; 921us; 875us; 884us; 877us; 885us; 886us; 921us; 887us; 921us; 890us; 892us; 891us; 893us; 904us; 921us; 908us; 921us; 938us; 921us; 940us; 921us; 32us; 65535us; 153us; 844us; 193us; 212us; 196us; 844us; 209us; 212us; 213us; 866us; 222us; 854us; 279us; 854us; 380us; 854us; 410us; 854us; 571us; 854us; 670us; 877us; 789us; 877us; 833us; 844us; 836us; 844us; 839us; 844us; 842us; 844us; 845us; 846us; 849us; 850us; 852us; 854us; 855us; 861us; 857us; 861us; 859us; 861us; 862us; 861us; 864us; 861us; 867us; 866us; 874us; 875us; 886us; 854us; 887us; 854us; 904us; 854us; 908us; 854us; 938us; 854us; 940us; 854us; 11us; 65535us; 212us; 878us; 844us; 878us; 846us; 878us; 850us; 878us; 854us; 878us; 861us; 878us; 866us; 878us; 875us; 878us; 877us; 879us; 880us; 882us; 881us; 883us; 2us; 65535us; 886us; 889us; 887us; 888us; 2us; 65535us; 905us; 906us; 941us; 907us; 32us; 65535us; 153us; 894us; 193us; 894us; 196us; 894us; 209us; 894us; 213us; 894us; 222us; 894us; 279us; 894us; 380us; 894us; 410us; 894us; 571us; 894us; 670us; 894us; 789us; 894us; 833us; 894us; 836us; 894us; 839us; 894us; 842us; 894us; 845us; 894us; 849us; 894us; 852us; 894us; 855us; 894us; 857us; 894us; 859us; 894us; 862us; 894us; 864us; 894us; 867us; 894us; 874us; 894us; 886us; 894us; 887us; 894us; 904us; 894us; 908us; 894us; 938us; 894us; 940us; 894us; 2us; 65535us; 670us; 671us; 789us; 790us; 2us; 65535us; 670us; 920us; 789us; 920us; 32us; 65535us; 153us; 910us; 193us; 910us; 196us; 910us; 209us; 910us; 213us; 910us; 222us; 910us; 279us; 910us; 380us; 910us; 410us; 910us; 571us; 910us; 670us; 911us; 789us; 911us; 833us; 910us; 836us; 910us; 839us; 910us; 842us; 910us; 845us; 910us; 849us; 910us; 852us; 910us; 855us; 910us; 857us; 910us; 859us; 910us; 862us; 910us; 864us; 910us; 867us; 910us; 874us; 910us; 886us; 910us; 887us; 910us; 904us; 910us; 908us; 910us; 938us; 910us; 940us; 910us; 1us; 65535us; 871us; 932us; 3us; 65535us; 690us; 691us; 871us; 935us; 936us; 937us; 6us; 65535us; 886us; 903us; 887us; 903us; 904us; 905us; 908us; 909us; 938us; 945us; 940us; 951us; 2us; 65535us; 938us; 939us; 940us; 941us; 1us; 65535us; 307us; 308us; 6us; 65535us; 952us; 961us; 958us; 961us; 967us; 961us; 973us; 961us; 974us; 961us; 975us; 961us; 6us; 65535us; 952us; 967us; 958us; 967us; 967us; 967us; 973us; 967us; 974us; 967us; 975us; 967us; 6us; 65535us; 952us; 969us; 958us; 969us; 967us; 968us; 973us; 969us; 974us; 969us; 975us; 969us; 5us; 65535us; 952us; 953us; 958us; 959us; 973us; 970us; 974us; 971us; 975us; 972us; 2us; 65535us; 271us; 278us; 275us; 278us; 2us; 65535us; 271us; 978us; 275us; 978us; 214us; 65535us; 5us; 984us; 40us; 69us; 51us; 69us; 56us; 984us; 60us; 984us; 74us; 984us; 77us; 984us; 80us; 984us; 88us; 984us; 119us; 1033us; 122us; 1031us; 124us; 1033us; 127us; 1031us; 130us; 1031us; 137us; 1033us; 143us; 206us; 153us; 984us; 157us; 1031us; 169us; 1033us; 186us; 1031us; 189us; 1031us; 193us; 984us; 196us; 984us; 209us; 984us; 212us; 984us; 213us; 984us; 220us; 221us; 222us; 984us; 233us; 1031us; 243us; 1031us; 256us; 1033us; 259us; 1031us; 263us; 1031us; 273us; 1031us; 279us; 984us; 288us; 1033us; 290us; 1031us; 293us; 1033us; 295us; 1031us; 317us; 318us; 319us; 1033us; 320us; 1033us; 324us; 1033us; 325us; 1033us; 326us; 1033us; 327us; 1033us; 329us; 1033us; 331us; 1033us; 333us; 1033us; 336us; 1033us; 338us; 1033us; 340us; 1033us; 342us; 984us; 345us; 1033us; 348us; 1033us; 357us; 1033us; 375us; 376us; 377us; 1033us; 380us; 984us; 382us; 1033us; 384us; 1033us; 385us; 1033us; 386us; 1033us; 387us; 1033us; 391us; 984us; 394us; 1033us; 396us; 1033us; 398us; 1031us; 403us; 1031us; 410us; 984us; 415us; 1031us; 417us; 1031us; 420us; 1031us; 423us; 1031us; 437us; 1031us; 444us; 1031us; 451us; 1031us; 454us; 1031us; 458us; 1031us; 466us; 1031us; 469us; 1031us; 472us; 1031us; 474us; 1031us; 478us; 1031us; 480us; 1031us; 485us; 1031us; 488us; 1031us; 492us; 1031us; 496us; 1031us; 501us; 1031us; 503us; 1031us; 512us; 1033us; 514us; 1031us; 522us; 1031us; 529us; 1031us; 571us; 984us; 573us; 1031us; 575us; 1031us; 576us; 1031us; 577us; 1031us; 578us; 1031us; 579us; 1031us; 580us; 1031us; 581us; 1031us; 582us; 1031us; 583us; 1031us; 584us; 1031us; 585us; 1031us; 586us; 1031us; 587us; 1031us; 588us; 1031us; 589us; 1031us; 590us; 1031us; 591us; 1031us; 592us; 1031us; 593us; 1031us; 594us; 1031us; 617us; 1031us; 620us; 1033us; 622us; 1033us; 627us; 1033us; 634us; 1033us; 639us; 1031us; 640us; 1031us; 644us; 1031us; 646us; 1031us; 650us; 1031us; 652us; 1031us; 656us; 1031us; 659us; 1031us; 660us; 1031us; 661us; 1031us; 662us; 1031us; 664us; 1031us; 665us; 1031us; 667us; 1031us; 668us; 1031us; 670us; 984us; 676us; 1031us; 678us; 1031us; 679us; 1031us; 682us; 1031us; 688us; 1031us; 689us; 1031us; 692us; 1031us; 693us; 1031us; 694us; 1031us; 697us; 1031us; 699us; 1031us; 700us; 1031us; 706us; 1031us; 716us; 1031us; 719us; 1031us; 727us; 1031us; 728us; 1031us; 738us; 1031us; 745us; 1031us; 751us; 1031us; 752us; 1031us; 765us; 1031us; 777us; 1031us; 778us; 1031us; 780us; 1031us; 782us; 1031us; 786us; 1031us; 787us; 1031us; 789us; 984us; 795us; 1031us; 800us; 1031us; 804us; 984us; 808us; 984us; 816us; 984us; 825us; 1031us; 833us; 984us; 836us; 984us; 839us; 984us; 842us; 984us; 844us; 984us; 845us; 984us; 846us; 984us; 847us; 848us; 849us; 984us; 850us; 984us; 852us; 984us; 854us; 984us; 855us; 984us; 857us; 984us; 859us; 984us; 861us; 984us; 862us; 984us; 864us; 984us; 866us; 984us; 867us; 984us; 874us; 984us; 875us; 984us; 877us; 984us; 886us; 984us; 887us; 984us; 890us; 984us; 891us; 984us; 904us; 984us; 908us; 984us; 938us; 984us; 940us; 984us; 952us; 984us; 958us; 984us; 967us; 984us; 973us; 984us; 974us; 984us; 975us; 984us; 976us; 977us; 979us; 980us; 985us; 986us; 1036us; 1033us; 63us; 65535us; 5us; 6us; 40us; 53us; 51us; 53us; 56us; 57us; 60us; 61us; 74us; 184us; 77us; 184us; 80us; 81us; 88us; 184us; 153us; 869us; 193us; 869us; 196us; 869us; 209us; 869us; 212us; 869us; 213us; 869us; 222us; 869us; 279us; 869us; 342us; 393us; 380us; 869us; 391us; 393us; 410us; 869us; 571us; 869us; 670us; 869us; 789us; 869us; 804us; 821us; 808us; 821us; 816us; 821us; 833us; 869us; 836us; 869us; 839us; 869us; 842us; 869us; 844us; 869us; 845us; 869us; 846us; 869us; 849us; 869us; 850us; 869us; 852us; 869us; 854us; 869us; 855us; 869us; 857us; 869us; 859us; 869us; 861us; 869us; 862us; 869us; 864us; 869us; 866us; 869us; 867us; 869us; 874us; 869us; 875us; 869us; 877us; 869us; 886us; 869us; 887us; 869us; 890us; 869us; 891us; 869us; 904us; 869us; 908us; 869us; 938us; 869us; 940us; 869us; 952us; 957us; 958us; 957us; 967us; 957us; 973us; 957us; 974us; 957us; 975us; 957us; 144us; 65535us; 119us; 1034us; 122us; 1032us; 124us; 1034us; 127us; 1032us; 130us; 1032us; 137us; 1034us; 143us; 1032us; 157us; 1032us; 169us; 1034us; 186us; 1032us; 189us; 1032us; 233us; 1032us; 243us; 1032us; 256us; 1034us; 259us; 1032us; 263us; 1032us; 273us; 1032us; 288us; 1034us; 290us; 1032us; 293us; 1034us; 295us; 1032us; 319us; 1034us; 320us; 1034us; 324us; 1034us; 325us; 1034us; 326us; 1034us; 327us; 1034us; 329us; 1034us; 331us; 1034us; 333us; 1034us; 336us; 1034us; 338us; 1034us; 340us; 1034us; 345us; 1034us; 348us; 1034us; 357us; 1034us; 377us; 1034us; 382us; 1034us; 384us; 1034us; 385us; 1034us; 386us; 1034us; 387us; 1034us; 394us; 1034us; 396us; 1034us; 398us; 1032us; 403us; 1032us; 415us; 1032us; 417us; 1032us; 420us; 1032us; 423us; 1032us; 437us; 1032us; 444us; 1032us; 451us; 1032us; 454us; 1032us; 458us; 1032us; 466us; 1032us; 469us; 1032us; 472us; 1032us; 474us; 1032us; 478us; 1032us; 480us; 1032us; 485us; 1032us; 488us; 1032us; 492us; 1032us; 496us; 1032us; 501us; 1032us; 503us; 1032us; 512us; 1034us; 514us; 1032us; 522us; 1032us; 529us; 1032us; 573us; 1032us; 575us; 1032us; 576us; 1032us; 577us; 1032us; 578us; 1032us; 579us; 1032us; 580us; 1032us; 581us; 1032us; 582us; 1032us; 583us; 1032us; 584us; 1032us; 585us; 1032us; 586us; 1032us; 587us; 1032us; 588us; 1032us; 589us; 1032us; 590us; 1032us; 591us; 1032us; 592us; 1032us; 593us; 1032us; 594us; 1032us; 617us; 1032us; 620us; 1034us; 622us; 1034us; 627us; 1034us; 634us; 1034us; 639us; 1032us; 640us; 1032us; 644us; 1032us; 646us; 1032us; 650us; 1032us; 652us; 1032us; 656us; 1032us; 659us; 1032us; 660us; 1032us; 661us; 1032us; 662us; 1032us; 664us; 1032us; 665us; 1032us; 667us; 1032us; 668us; 1032us; 676us; 1032us; 678us; 1032us; 679us; 1032us; 682us; 1032us; 688us; 1032us; 689us; 1032us; 692us; 1032us; 693us; 1032us; 694us; 1032us; 697us; 1032us; 699us; 1032us; 700us; 1032us; 706us; 1032us; 716us; 1032us; 719us; 1032us; 727us; 1032us; 728us; 1032us; 738us; 1032us; 745us; 1032us; 751us; 1032us; 752us; 1032us; 765us; 1032us; 777us; 1032us; 778us; 1032us; 780us; 1032us; 782us; 1032us; 786us; 1032us; 787us; 1032us; 795us; 1032us; 800us; 1032us; 825us; 1032us; 1036us; 1034us; 5us; 65535us; 200us; 989us; 357us; 989us; 716us; 989us; 752us; 989us; 988us; 989us; 2us; 65535us; 995us; 1030us; 1028us; 1029us; 5us; 65535us; 200us; 994us; 357us; 994us; 716us; 994us; 752us; 994us; 988us; 994us; 108us; 65535us; 122us; 1039us; 127us; 1039us; 130us; 1039us; 143us; 1039us; 157us; 1039us; 186us; 1039us; 189us; 1039us; 233us; 1039us; 243us; 1039us; 259us; 1039us; 263us; 1039us; 273us; 1039us; 290us; 1039us; 295us; 1039us; 398us; 1039us; 403us; 1039us; 415us; 1039us; 417us; 1039us; 420us; 1039us; 423us; 1039us; 437us; 1039us; 444us; 1039us; 451us; 1039us; 454us; 1039us; 458us; 1039us; 466us; 1039us; 469us; 1039us; 472us; 1039us; 474us; 1039us; 478us; 1039us; 480us; 1039us; 485us; 1039us; 488us; 1039us; 492us; 1039us; 496us; 1039us; 501us; 1039us; 503us; 1039us; 514us; 1039us; 522us; 1039us; 529us; 1039us; 573us; 1039us; 575us; 1039us; 576us; 1039us; 577us; 1039us; 578us; 1039us; 579us; 1039us; 580us; 1039us; 581us; 1039us; 582us; 1039us; 583us; 1039us; 584us; 1039us; 585us; 1039us; 586us; 1039us; 587us; 1039us; 588us; 1039us; 589us; 1039us; 590us; 1039us; 591us; 1039us; 592us; 1039us; 593us; 1039us; 594us; 1039us; 617us; 1039us; 639us; 1039us; 640us; 1039us; 644us; 1039us; 646us; 1039us; 650us; 1039us; 652us; 1039us; 656us; 1039us; 659us; 1039us; 660us; 1039us; 661us; 1039us; 662us; 1039us; 664us; 1039us; 665us; 1039us; 667us; 1039us; 668us; 1039us; 676us; 1039us; 678us; 1039us; 679us; 1039us; 682us; 1039us; 688us; 1039us; 689us; 1039us; 692us; 1039us; 693us; 1039us; 694us; 713us; 697us; 713us; 699us; 1039us; 700us; 1039us; 706us; 1039us; 716us; 1039us; 719us; 1039us; 727us; 1039us; 728us; 1039us; 738us; 1039us; 745us; 1039us; 751us; 1039us; 752us; 1039us; 765us; 1039us; 777us; 1039us; 778us; 1039us; 780us; 1039us; 782us; 1039us; 786us; 1039us; 787us; 1039us; 795us; 1039us; 800us; 1039us; 825us; 1039us; 36us; 65535us; 119us; 139us; 124us; 139us; 137us; 138us; 169us; 139us; 256us; 139us; 288us; 139us; 293us; 139us; 319us; 139us; 320us; 139us; 324us; 139us; 325us; 139us; 326us; 139us; 327us; 139us; 329us; 139us; 331us; 139us; 333us; 139us; 336us; 139us; 338us; 139us; 340us; 139us; 345us; 139us; 348us; 139us; 357us; 139us; 377us; 139us; 382us; 139us; 384us; 139us; 385us; 139us; 386us; 139us; 387us; 139us; 394us; 139us; 396us; 139us; 512us; 139us; 620us; 139us; 622us; 139us; 627us; 139us; 634us; 139us; 1036us; 1037us; 106us; 65535us; 122us; 705us; 127us; 705us; 130us; 705us; 143us; 199us; 157us; 705us; 186us; 199us; 189us; 199us; 233us; 705us; 243us; 705us; 259us; 705us; 263us; 705us; 273us; 705us; 290us; 705us; 295us; 705us; 398us; 705us; 403us; 705us; 415us; 705us; 417us; 705us; 420us; 705us; 423us; 705us; 437us; 705us; 444us; 705us; 451us; 705us; 454us; 705us; 458us; 705us; 466us; 705us; 469us; 705us; 472us; 705us; 474us; 705us; 478us; 705us; 480us; 705us; 485us; 705us; 488us; 705us; 492us; 705us; 496us; 705us; 501us; 705us; 503us; 705us; 514us; 705us; 522us; 705us; 529us; 705us; 573us; 705us; 575us; 705us; 576us; 705us; 577us; 705us; 578us; 705us; 579us; 705us; 580us; 705us; 581us; 705us; 582us; 705us; 583us; 705us; 584us; 705us; 585us; 705us; 586us; 705us; 587us; 705us; 588us; 705us; 589us; 705us; 590us; 705us; 591us; 705us; 592us; 705us; 593us; 705us; 594us; 705us; 617us; 705us; 639us; 705us; 640us; 705us; 644us; 705us; 646us; 705us; 650us; 705us; 652us; 705us; 656us; 705us; 659us; 705us; 660us; 705us; 661us; 705us; 662us; 705us; 664us; 705us; 665us; 705us; 667us; 705us; 668us; 705us; 676us; 705us; 678us; 705us; 679us; 705us; 682us; 705us; 688us; 705us; 689us; 705us; 692us; 705us; 693us; 705us; 699us; 701us; 700us; 701us; 706us; 705us; 716us; 705us; 719us; 705us; 727us; 705us; 728us; 705us; 738us; 705us; 745us; 705us; 751us; 705us; 752us; 705us; 765us; 705us; 777us; 705us; 778us; 705us; 780us; 705us; 782us; 705us; 786us; 705us; 787us; 705us; 795us; 705us; 800us; 705us; 825us; 705us; 5us; 65535us; 16us; 1043us; 23us; 1043us; 28us; 1043us; 32us; 1043us; 1043us; 1043us; 5us; 65535us; 16us; 34us; 23us; 34us; 28us; 30us; 32us; 34us; 1043us; 1044us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 8us; 65535us; 41us; 51us; 115us; 1054us; 215us; 216us; 372us; 396us; 389us; 391us; 412us; 415us; 413us; 415us; 414us; 415us; 1us; 65535us; 141us; 142us; 0us; 65535us; 5us; 65535us; 134us; 135us; 161us; 162us; 164us; 165us; 166us; 167us; 170us; 171us; 0us; 65535us; 12us; 65535us; 20us; 21us; 43us; 44us; 46us; 47us; 95us; 96us; 100us; 101us; 150us; 151us; 188us; 208us; 191us; 192us; 194us; 195us; 197us; 198us; 206us; 207us; 513us; 535us; 5us; 65535us; 41us; 42us; 115us; 116us; 215us; 218us; 372us; 395us; 389us; 390us; 4us; 65535us; 227us; 228us; 230us; 231us; 235us; 236us; 239us; 240us; 0us; 65535us; 9us; 65535us; 118us; 119us; 133us; 118us; 160us; 118us; 163us; 124us; 228us; 255us; 231us; 255us; 236us; 255us; 240us; 255us; 250us; 255us; 1us; 65535us; 255us; 256us; 4us; 65535us; 146us; 220us; 151us; 220us; 178us; 220us; 216us; 220us; 4us; 65535us; 428us; 529us; 502us; 503us; 513us; 514us; 521us; 522us; 9us; 65535us; 425us; 511us; 426us; 518us; 427us; 526us; 429us; 533us; 504us; 505us; 507us; 508us; 515us; 516us; 523us; 524us; 530us; 531us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 5us; 65535us; 53us; 54us; 57us; 58us; 62us; 63us; 671us; 672us; 790us; 791us; 0us; 65535us; 13us; 65535us; 0us; 77us; 7us; 77us; 16us; 77us; 18us; 77us; 23us; 77us; 28us; 77us; 30us; 77us; 32us; 77us; 34us; 77us; 40us; 67us; 51us; 67us; 1069us; 1071us; 1070us; 1071us; 5us; 65535us; 0us; 5us; 40us; 65us; 51us; 65us; 1076us; 1078us; 1077us; 1078us; 8us; 65535us; 147us; 148us; 179us; 180us; 182us; 183us; 343us; 344us; 435us; 769us; 765us; 771us; 766us; 767us; 1081us; 1082us; 21us; 65535us; 201us; 202us; 204us; 205us; 358us; 359us; 361us; 362us; 433us; 757us; 434us; 758us; 618us; 619us; 717us; 718us; 751us; 753us; 752us; 753us; 754us; 755us; 888us; 890us; 889us; 891us; 923us; 924us; 930us; 931us; 959us; 960us; 989us; 990us; 991us; 992us; 995us; 996us; 998us; 999us; 1085us; 1086us; 14us; 65535us; 19us; 20us; 23us; 24us; 61us; 62us; 97us; 98us; 102us; 103us; 108us; 110us; 264us; 265us; 399us; 400us; 404us; 405us; 421us; 422us; 455us; 456us; 647us; 648us; 653us; 654us; 1089us; 1090us; 1us; 65535us; 754us; 756us; 13us; 65535us; 40us; 49us; 42us; 48us; 373us; 785us; 512us; 532us; 513us; 520us; 514us; 519us; 515us; 517us; 782us; 784us; 824us; 828us; 825us; 827us; 933us; 934us; 940us; 944us; 985us; 987us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 176us; 178us; 180us; 183us; 187us; 193us; 203us; 213us; 223us; 234us; 245us; 247us; 250us; 253us; 263us; 264us; 265us; 266us; 267us; 268us; 269us; 271us; 272us; 273us; 274us; 278us; 282us; 286us; 288us; 290us; 292us; 294us; 299us; 304us; 307us; 309us; 311us; 312us; 317us; 318us; 353us; 362us; 367us; 368us; 369us; 370us; 371us; 372us; 374us; 376us; 378us; 381us; 383us; 385us; 388us; 391us; 394us; 395us; 399us; 400us; 402us; 406us; 410us; 414us; 416us; 418us; 421us; 424us; 427us; 432us; 442us; 452us; 540us; 628us; 630us; 718us; 807us; 895us; 896us; 903us; 908us; 911us; 917us; 923us; 925us; 928us; 930us; 932us; 934us; 937us; 1110us; 1198us; 1339us; 1343us; 1345us; 1356us; 1367us; 1378us; 1405us; 1407us; 1416us; 1451us; 1453us; 1470us; 1487us; 1504us; 1506us; 1509us; 1512us; 1516us; 1517us; 1538us; 1542us; 1546us; 1587us; 1633us; 1698us; 1790us; 1878us; 1883us; 1972us; 2060us; 2062us; 2064us; 2067us; 2072us; 2077us; 2079us; 2081us; 2082us; 2085us; 2088us; 2090us; 2091us; 2179us; 2274us; 2369us; 2372us; 2474us; 2477us; 2479us; 2586us; 2693us; 2800us; 2907us; 2910us; 2911us; 2912us; 3019us; 3021us; 3022us; 3025us; 3029us; 3034us; 3036us; 3038us; 3039us; 3040us; 3042us; 3043us; 3048us; 3050us; 3057us; 3064us; 3068us; 3074us; 3078us; 3080us; 3083us; 3086us; 3091us; 3096us; 3101us; 3104us; 3111us; 3124us; 3137us; 3143us; 3146us; 3190us; 3234us; 3267us; 3279us; 3282us; 3285us; 3318us; 3321us; 3324us; 3357us; 3359us; 3363us; 3370us; 3373us; 3375us; 3382us; 3389us; 3396us; 3402us; 3405us; 3408us; 3623us; 3687us; 3832us; 3838us; 3841us; 3847us; 3956us; 3993us; 4100us; 4106us; 4112us; 4113us; 4114us; 4115us; 4116us; 4125us; 4127us; 4128us; 4134us; 4135us; 4148us; 4154us; 4159us; 4160us; 4170us; 4172us; 4177us; 4182us; 4192us; 4193us; 4194us; 4195us; 4196us; 4202us; 4203us; 4217us; 4223us; 4232us; 4254us; 4269us; 4271us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 3us; 4us; 640us; 641us; 4us; 5us; 7us; 8us; 9us; 1us; 5us; 1us; 6us; 1us; 6us; 3us; 7us; 8us; 9us; 1us; 7us; 2us; 8us; 9us; 2us; 8us; 9us; 1us; 10us; 4us; 11us; 21us; 24us; 278us; 1us; 11us; 3us; 12us; 13us; 14us; 2us; 12us; 13us; 1us; 12us; 1us; 12us; 1us; 13us; 3us; 14us; 21us; 24us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 18us; 4us; 19us; 20us; 22us; 23us; 1us; 19us; 2us; 20us; 23us; 1us; 20us; 2us; 21us; 24us; 1us; 21us; 1us; 24us; 1us; 24us; 1us; 25us; 1us; 26us; 2us; 28us; 29us; 1us; 29us; 4us; 30us; 31us; 32us; 33us; 3us; 30us; 32us; 35us; 2us; 30us; 32us; 1us; 30us; 1us; 30us; 2us; 31us; 278us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 2us; 35us; 714us; 1us; 35us; 3us; 36us; 640us; 641us; 1us; 36us; 1us; 36us; 2us; 37us; 38us; 3us; 37us; 640us; 641us; 1us; 37us; 1us; 37us; 1us; 38us; 3us; 38us; 640us; 641us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 39us; 1us; 39us; 1us; 40us; 1us; 40us; 2us; 41us; 639us; 1us; 41us; 2us; 42us; 43us; 1us; 42us; 1us; 43us; 2us; 44us; 749us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 45us; 2us; 46us; 160us; 3us; 46us; 640us; 641us; 1us; 47us; 1us; 48us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 77us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 80us; 1us; 80us; 1us; 80us; 2us; 81us; 82us; 1us; 81us; 1us; 81us; 1us; 81us; 1us; 81us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 84us; 2us; 85us; 86us; 2us; 85us; 86us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 89us; 1us; 91us; 1us; 91us; 1us; 91us; 1us; 92us; 1us; 92us; 1us; 92us; 1us; 92us; 1us; 92us; 1us; 92us; 2us; 93us; 94us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 94us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 100us; 1us; 100us; 1us; 100us; 1us; 101us; 1us; 103us; 1us; 103us; 1us; 103us; 2us; 114us; 115us; 1us; 114us; 1us; 115us; 2us; 116us; 117us; 2us; 116us; 117us; 1us; 116us; 1us; 117us; 2us; 118us; 119us; 1us; 119us; 1us; 119us; 1us; 120us; 1us; 120us; 1us; 121us; 1us; 121us; 1us; 121us; 1us; 121us; 3us; 122us; 123us; 124us; 1us; 122us; 1us; 122us; 1us; 122us; 2us; 123us; 124us; 1us; 123us; 1us; 123us; 1us; 124us; 1us; 124us; 1us; 125us; 1us; 125us; 1us; 125us; 1us; 125us; 1us; 126us; 1us; 126us; 1us; 127us; 2us; 128us; 129us; 1us; 129us; 1us; 129us; 3us; 130us; 131us; 132us; 2us; 130us; 131us; 1us; 130us; 1us; 131us; 1us; 132us; 1us; 132us; 3us; 135us; 640us; 641us; 1us; 138us; 1us; 139us; 1us; 139us; 2us; 140us; 150us; 2us; 141us; 142us; 1us; 141us; 3us; 143us; 144us; 145us; 1us; 143us; 1us; 144us; 1us; 144us; 1us; 144us; 1us; 145us; 1us; 145us; 1us; 145us; 1us; 146us; 6us; 147us; 148us; 642us; 643us; 645us; 646us; 1us; 147us; 1us; 147us; 1us; 148us; 1us; 148us; 1us; 148us; 3us; 149us; 151us; 676us; 1us; 149us; 1us; 150us; 1us; 151us; 1us; 151us; 1us; 152us; 5us; 153us; 154us; 574us; 575us; 576us; 1us; 153us; 1us; 153us; 2us; 155us; 156us; 2us; 155us; 714us; 1us; 155us; 1us; 156us; 1us; 157us; 1us; 158us; 1us; 158us; 1us; 158us; 1us; 158us; 1us; 159us; 1us; 159us; 1us; 160us; 1us; 161us; 1us; 161us; 1us; 161us; 1us; 162us; 1us; 162us; 1us; 162us; 1us; 163us; 1us; 163us; 1us; 164us; 1us; 164us; 1us; 164us; 1us; 164us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 166us; 1us; 166us; 1us; 166us; 1us; 171us; 1us; 172us; 1us; 173us; 1us; 173us; 1us; 174us; 1us; 174us; 1us; 174us; 1us; 176us; 1us; 177us; 3us; 178us; 179us; 180us; 3us; 178us; 179us; 180us; 3us; 178us; 179us; 180us; 3us; 178us; 179us; 180us; 2us; 178us; 179us; 1us; 178us; 1us; 179us; 1us; 180us; 2us; 181us; 182us; 2us; 181us; 182us; 1us; 181us; 1us; 182us; 1us; 183us; 1us; 184us; 2us; 184us; 185us; 1us; 185us; 1us; 187us; 2us; 187us; 188us; 1us; 187us; 1us; 187us; 1us; 188us; 1us; 188us; 1us; 189us; 2us; 190us; 191us; 1us; 190us; 1us; 190us; 1us; 191us; 1us; 192us; 1us; 193us; 1us; 194us; 1us; 195us; 1us; 196us; 1us; 197us; 2us; 198us; 199us; 2us; 198us; 199us; 2us; 198us; 199us; 1us; 198us; 1us; 199us; 6us; 200us; 201us; 202us; 203us; 204us; 205us; 5us; 200us; 201us; 202us; 203us; 204us; 4us; 200us; 201us; 202us; 203us; 2us; 200us; 201us; 1us; 200us; 1us; 201us; 1us; 202us; 1us; 202us; 1us; 203us; 1us; 204us; 1us; 204us; 1us; 205us; 1us; 205us; 2us; 206us; 207us; 1us; 207us; 1us; 207us; 6us; 208us; 210us; 211us; 212us; 217us; 219us; 6us; 209us; 210us; 211us; 212us; 217us; 219us; 6us; 210us; 211us; 211us; 212us; 217us; 219us; 6us; 210us; 211us; 212us; 212us; 217us; 219us; 6us; 210us; 211us; 212us; 216us; 217us; 219us; 6us; 210us; 211us; 212us; 217us; 217us; 219us; 6us; 210us; 211us; 212us; 217us; 218us; 219us; 6us; 210us; 211us; 212us; 217us; 219us; 219us; 1us; 210us; 1us; 210us; 1us; 211us; 1us; 212us; 2us; 213us; 216us; 2us; 214us; 218us; 1us; 215us; 1us; 216us; 1us; 217us; 1us; 218us; 1us; 219us; 4us; 220us; 221us; 222us; 233us; 3us; 220us; 221us; 222us; 1us; 220us; 1us; 221us; 1us; 221us; 1us; 222us; 1us; 222us; 1us; 223us; 4us; 225us; 226us; 227us; 228us; 1us; 225us; 1us; 226us; 1us; 226us; 1us; 227us; 1us; 227us; 1us; 229us; 1us; 229us; 1us; 229us; 1us; 230us; 1us; 230us; 1us; 230us; 1us; 231us; 1us; 231us; 1us; 231us; 1us; 232us; 1us; 233us; 1us; 234us; 1us; 235us; 1us; 236us; 1us; 237us; 8us; 238us; 239us; 240us; 241us; 642us; 643us; 645us; 646us; 2us; 238us; 239us; 1us; 238us; 1us; 239us; 3us; 240us; 278us; 643us; 2us; 240us; 643us; 1us; 241us; 7us; 242us; 244us; 245us; 248us; 249us; 252us; 254us; 7us; 244us; 245us; 245us; 248us; 249us; 252us; 254us; 7us; 244us; 245us; 248us; 249us; 249us; 252us; 254us; 7us; 244us; 245us; 248us; 249us; 251us; 252us; 254us; 7us; 244us; 245us; 248us; 249us; 252us; 252us; 254us; 7us; 244us; 245us; 248us; 249us; 252us; 253us; 254us; 7us; 244us; 245us; 248us; 249us; 252us; 254us; 254us; 7us; 244us; 245us; 248us; 249us; 252us; 254us; 258us; 8us; 244us; 245us; 248us; 249us; 252us; 254us; 260us; 261us; 13us; 244us; 245us; 248us; 249us; 252us; 254us; 335us; 336us; 502us; 503us; 504us; 505us; 513us; 7us; 244us; 245us; 248us; 249us; 252us; 254us; 391us; 1us; 244us; 1us; 244us; 1us; 245us; 2us; 246us; 251us; 2us; 247us; 253us; 1us; 248us; 1us; 248us; 1us; 249us; 1us; 250us; 1us; 251us; 1us; 252us; 1us; 253us; 1us; 254us; 1us; 255us; 2us; 256us; 257us; 1us; 256us; 2us; 257us; 714us; 1us; 257us; 3us; 258us; 640us; 641us; 1us; 258us; 1us; 260us; 2us; 261us; 714us; 1us; 261us; 2us; 263us; 264us; 2us; 263us; 264us; 1us; 263us; 1us; 264us; 1us; 265us; 1us; 266us; 1us; 266us; 1us; 266us; 44us; 267us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 2us; 268us; 269us; 1us; 268us; 2us; 270us; 271us; 1us; 270us; 1us; 270us; 48us; 272us; 273us; 274us; 275us; 276us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 50us; 272us; 273us; 274us; 275us; 276us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 452us; 453us; 51us; 272us; 273us; 274us; 275us; 276us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 498us; 499us; 500us; 2us; 272us; 273us; 1us; 272us; 1us; 275us; 1us; 275us; 1us; 276us; 1us; 276us; 1us; 276us; 1us; 276us; 5us; 277us; 300us; 302us; 304us; 306us; 1us; 278us; 2us; 278us; 322us; 2us; 278us; 325us; 2us; 278us; 330us; 2us; 278us; 333us; 2us; 278us; 335us; 2us; 278us; 439us; 2us; 278us; 449us; 2us; 278us; 470us; 2us; 278us; 475us; 3us; 278us; 475us; 643us; 2us; 278us; 488us; 1us; 279us; 4us; 280us; 281us; 282us; 283us; 2us; 280us; 282us; 2us; 280us; 282us; 45us; 281us; 283us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 2us; 281us; 283us; 1us; 282us; 1us; 283us; 4us; 284us; 285us; 286us; 287us; 2us; 284us; 286us; 2us; 284us; 286us; 45us; 285us; 287us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 2us; 285us; 287us; 1us; 286us; 1us; 287us; 1us; 288us; 44us; 288us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 2us; 289us; 290us; 2us; 289us; 290us; 2us; 289us; 290us; 1us; 289us; 1us; 290us; 2us; 291us; 292us; 2us; 291us; 292us; 2us; 291us; 292us; 1us; 292us; 1us; 293us; 1us; 294us; 1us; 295us; 1us; 296us; 1us; 296us; 1us; 296us; 2us; 297us; 298us; 2us; 297us; 298us; 1us; 297us; 1us; 298us; 4us; 299us; 301us; 303us; 305us; 1us; 299us; 4us; 300us; 302us; 304us; 306us; 1us; 300us; 1us; 301us; 1us; 302us; 2us; 303us; 305us; 1us; 303us; 2us; 304us; 306us; 1us; 304us; 1us; 305us; 1us; 306us; 1us; 307us; 1us; 308us; 1us; 308us; 1us; 308us; 1us; 309us; 1us; 309us; 1us; 309us; 1us; 310us; 2us; 311us; 312us; 2us; 311us; 312us; 1us; 311us; 1us; 312us; 4us; 313us; 314us; 315us; 316us; 46us; 313us; 314us; 315us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 2us; 313us; 314us; 1us; 315us; 1us; 316us; 6us; 317us; 318us; 319us; 320us; 321us; 322us; 47us; 317us; 318us; 319us; 320us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 3us; 317us; 318us; 319us; 2us; 317us; 318us; 1us; 317us; 1us; 318us; 1us; 319us; 1us; 319us; 1us; 320us; 1us; 321us; 1us; 322us; 15us; 323us; 324us; 325us; 326us; 327us; 328us; 329us; 330us; 331us; 332us; 333us; 334us; 335us; 336us; 337us; 6us; 323us; 324us; 325us; 326us; 327us; 337us; 4us; 323us; 324us; 325us; 326us; 2us; 323us; 324us; 1us; 323us; 1us; 324us; 1us; 325us; 1us; 326us; 1us; 327us; 5us; 328us; 329us; 330us; 331us; 332us; 4us; 328us; 329us; 330us; 331us; 2us; 328us; 329us; 1us; 328us; 1us; 329us; 1us; 330us; 1us; 331us; 1us; 332us; 1us; 333us; 1us; 333us; 1us; 333us; 1us; 334us; 1us; 335us; 2us; 336us; 773us; 1us; 337us; 1us; 337us; 44us; 338us; 339us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 397us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 402us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 406us; 414us; 45us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 409us; 410us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 413us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 414us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 452us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 454us; 47us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 498us; 499us; 500us; 502us; 45us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 498us; 499us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 499us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 513us; 44us; 338us; 339us; 341us; 342us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 366us; 367us; 368us; 369us; 370us; 371us; 372us; 373us; 374us; 375us; 376us; 377us; 378us; 379us; 380us; 414us; 513us; 1us; 338us; 1us; 338us; 1us; 339us; 2us; 340us; 413us; 2us; 341us; 361us; 2us; 342us; 362us; 2us; 343us; 363us; 2us; 344us; 364us; 2us; 345us; 365us; 2us; 346us; 366us; 2us; 347us; 367us; 2us; 348us; 368us; 2us; 349us; 369us; 2us; 350us; 370us; 2us; 351us; 371us; 2us; 352us; 372us; 2us; 353us; 373us; 2us; 354us; 374us; 2us; 355us; 375us; 2us; 356us; 376us; 2us; 357us; 377us; 2us; 358us; 378us; 2us; 359us; 379us; 2us; 360us; 380us; 1us; 361us; 1us; 362us; 1us; 363us; 1us; 364us; 1us; 365us; 1us; 366us; 1us; 367us; 1us; 368us; 1us; 369us; 1us; 370us; 1us; 371us; 1us; 372us; 1us; 373us; 1us; 374us; 1us; 375us; 1us; 376us; 1us; 377us; 1us; 378us; 1us; 379us; 1us; 380us; 1us; 381us; 1us; 382us; 1us; 383us; 1us; 383us; 1us; 383us; 1us; 384us; 1us; 384us; 2us; 385us; 386us; 2us; 385us; 386us; 1us; 385us; 1us; 386us; 1us; 387us; 2us; 388us; 389us; 1us; 388us; 1us; 389us; 1us; 390us; 1us; 391us; 5us; 392us; 393us; 394us; 395us; 396us; 4us; 392us; 393us; 394us; 395us; 2us; 393us; 394us; 1us; 393us; 1us; 394us; 1us; 395us; 1us; 396us; 1us; 397us; 1us; 399us; 1us; 399us; 1us; 401us; 1us; 401us; 1us; 402us; 2us; 403us; 404us; 2us; 403us; 404us; 2us; 403us; 404us; 1us; 403us; 1us; 404us; 1us; 406us; 2us; 407us; 408us; 2us; 407us; 408us; 2us; 407us; 408us; 1us; 407us; 1us; 408us; 2us; 409us; 410us; 1us; 409us; 1us; 410us; 1us; 413us; 1us; 414us; 1us; 415us; 2us; 415us; 657us; 1us; 415us; 1us; 416us; 2us; 416us; 653us; 1us; 416us; 1us; 417us; 2us; 417us; 669us; 1us; 417us; 3us; 418us; 419us; 420us; 2us; 418us; 419us; 2us; 418us; 419us; 1us; 418us; 1us; 419us; 1us; 420us; 1us; 421us; 1us; 421us; 2us; 422us; 423us; 6us; 422us; 423us; 519us; 523us; 524us; 525us; 1us; 423us; 6us; 424us; 427us; 428us; 429us; 431us; 434us; 1us; 425us; 6us; 425us; 427us; 428us; 429us; 431us; 434us; 6us; 426us; 427us; 428us; 429us; 431us; 434us; 6us; 427us; 427us; 428us; 429us; 431us; 434us; 6us; 427us; 428us; 428us; 429us; 431us; 434us; 6us; 427us; 428us; 429us; 430us; 431us; 434us; 1us; 427us; 1us; 428us; 1us; 429us; 1us; 429us; 1us; 430us; 2us; 430us; 647us; 1us; 431us; 1us; 431us; 1us; 432us; 1us; 432us; 1us; 432us; 1us; 433us; 2us; 433us; 663us; 1us; 433us; 1us; 434us; 1us; 434us; 1us; 435us; 1us; 436us; 4us; 437us; 438us; 439us; 440us; 2us; 437us; 438us; 1us; 437us; 1us; 438us; 1us; 439us; 1us; 440us; 1us; 441us; 1us; 442us; 1us; 443us; 1us; 445us; 5us; 446us; 642us; 643us; 645us; 646us; 1us; 446us; 1us; 446us; 5us; 447us; 448us; 449us; 450us; 451us; 2us; 447us; 448us; 1us; 447us; 1us; 448us; 1us; 449us; 1us; 450us; 1us; 451us; 1us; 451us; 2us; 452us; 453us; 1us; 454us; 1us; 455us; 1us; 456us; 1us; 457us; 1us; 458us; 1us; 459us; 1us; 460us; 1us; 461us; 1us; 462us; 1us; 463us; 4us; 464us; 465us; 466us; 467us; 2us; 464us; 465us; 1us; 464us; 1us; 465us; 1us; 466us; 1us; 466us; 1us; 467us; 4us; 468us; 469us; 470us; 471us; 2us; 468us; 469us; 1us; 468us; 1us; 469us; 1us; 470us; 1us; 471us; 9us; 472us; 473us; 474us; 475us; 476us; 477us; 478us; 479us; 480us; 13us; 472us; 473us; 474us; 475us; 476us; 477us; 478us; 479us; 480us; 642us; 643us; 645us; 646us; 1us; 472us; 2us; 473us; 474us; 1us; 473us; 1us; 474us; 1us; 475us; 2us; 475us; 643us; 1us; 476us; 1us; 477us; 1us; 478us; 1us; 479us; 1us; 480us; 1us; 481us; 5us; 486us; 487us; 488us; 489us; 490us; 2us; 486us; 487us; 1us; 486us; 1us; 487us; 1us; 488us; 1us; 489us; 1us; 490us; 1us; 491us; 1us; 492us; 1us; 494us; 1us; 496us; 1us; 497us; 3us; 498us; 499us; 500us; 1us; 499us; 1us; 500us; 1us; 501us; 1us; 501us; 3us; 502us; 503us; 504us; 1us; 503us; 1us; 504us; 1us; 505us; 1us; 513us; 1us; 513us; 1us; 517us; 1us; 518us; 1us; 518us; 1us; 518us; 1us; 518us; 2us; 518us; 534us; 1us; 518us; 1us; 519us; 1us; 519us; 2us; 519us; 534us; 1us; 519us; 3us; 520us; 521us; 522us; 2us; 521us; 522us; 1us; 522us; 2us; 522us; 534us; 1us; 522us; 1us; 523us; 1us; 523us; 2us; 523us; 534us; 1us; 523us; 2us; 524us; 525us; 1us; 524us; 1us; 524us; 1us; 525us; 2us; 525us; 534us; 1us; 525us; 1us; 525us; 1us; 526us; 2us; 526us; 534us; 2us; 528us; 531us; 2us; 529us; 530us; 1us; 530us; 1us; 531us; 3us; 532us; 640us; 641us; 1us; 533us; 1us; 534us; 5us; 536us; 537us; 538us; 539us; 540us; 3us; 536us; 537us; 538us; 1us; 536us; 1us; 538us; 1us; 540us; 1us; 541us; 1us; 542us; 1us; 543us; 1us; 544us; 1us; 546us; 1us; 546us; 2us; 547us; 548us; 1us; 547us; 1us; 547us; 2us; 549us; 550us; 1us; 549us; 1us; 549us; 2us; 551us; 552us; 1us; 551us; 1us; 551us; 7us; 553us; 555us; 556us; 558us; 574us; 575us; 576us; 2us; 553us; 556us; 5us; 553us; 556us; 574us; 575us; 576us; 2us; 554us; 557us; 2us; 554us; 557us; 2us; 554us; 557us; 5us; 554us; 557us; 574us; 575us; 576us; 2us; 559us; 560us; 1us; 559us; 1us; 559us; 6us; 561us; 563us; 564us; 574us; 575us; 576us; 1us; 561us; 1us; 561us; 1us; 562us; 1us; 562us; 1us; 563us; 1us; 563us; 6us; 565us; 566us; 567us; 574us; 575us; 576us; 1us; 565us; 1us; 565us; 1us; 566us; 1us; 566us; 5us; 568us; 569us; 574us; 575us; 576us; 1us; 568us; 1us; 568us; 3us; 570us; 640us; 641us; 2us; 571us; 572us; 4us; 571us; 572us; 606us; 607us; 1us; 571us; 1us; 571us; 1us; 573us; 4us; 573us; 574us; 575us; 576us; 1us; 573us; 6us; 574us; 575us; 576us; 589us; 590us; 591us; 1us; 574us; 2us; 574us; 589us; 1us; 575us; 2us; 575us; 590us; 1us; 575us; 2us; 575us; 590us; 1us; 576us; 2us; 576us; 591us; 5us; 577us; 592us; 599us; 600us; 605us; 4us; 577us; 599us; 600us; 605us; 1us; 577us; 2us; 577us; 592us; 1us; 577us; 2us; 577us; 592us; 1us; 577us; 2us; 577us; 592us; 1us; 578us; 4us; 579us; 580us; 581us; 582us; 1us; 579us; 3us; 580us; 581us; 582us; 1us; 580us; 2us; 581us; 582us; 1us; 581us; 1us; 582us; 1us; 582us; 1us; 583us; 1us; 583us; 1us; 583us; 2us; 583us; 584us; 3us; 584us; 610us; 611us; 1us; 584us; 1us; 584us; 3us; 586us; 587us; 588us; 6us; 586us; 587us; 588us; 594us; 595us; 596us; 2us; 587us; 588us; 4us; 587us; 588us; 595us; 596us; 1us; 587us; 2us; 587us; 595us; 1us; 588us; 2us; 588us; 596us; 1us; 588us; 2us; 588us; 596us; 1us; 593us; 1us; 597us; 1us; 598us; 3us; 599us; 600us; 617us; 1us; 599us; 1us; 600us; 1us; 601us; 1us; 602us; 1us; 603us; 1us; 604us; 1us; 605us; 1us; 605us; 1us; 606us; 1us; 607us; 1us; 607us; 1us; 608us; 1us; 609us; 1us; 609us; 7us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 3us; 610us; 611us; 612us; 3us; 610us; 611us; 612us; 2us; 610us; 611us; 1us; 610us; 1us; 611us; 1us; 612us; 3us; 613us; 614us; 618us; 1us; 613us; 1us; 614us; 1us; 615us; 1us; 616us; 1us; 617us; 1us; 618us; 2us; 619us; 620us; 3us; 619us; 630us; 631us; 1us; 619us; 1us; 620us; 1us; 620us; 3us; 621us; 640us; 641us; 1us; 622us; 3us; 622us; 630us; 631us; 1us; 622us; 3us; 623us; 624us; 625us; 2us; 624us; 625us; 1us; 624us; 1us; 625us; 1us; 625us; 1us; 626us; 2us; 627us; 628us; 1us; 628us; 1us; 629us; 3us; 630us; 630us; 631us; 3us; 630us; 631us; 631us; 3us; 630us; 631us; 632us; 1us; 630us; 1us; 631us; 1us; 632us; 1us; 633us; 1us; 633us; 1us; 634us; 1us; 635us; 1us; 635us; 1us; 636us; 1us; 637us; 1us; 638us; 1us; 639us; 2us; 640us; 641us; 1us; 640us; 1us; 641us; 4us; 642us; 643us; 645us; 646us; 1us; 642us; 1us; 642us; 1us; 643us; 1us; 643us; 1us; 644us; 3us; 645us; 646us; 675us; 3us; 645us; 646us; 675us; 1us; 645us; 1us; 646us; 1us; 646us; 1us; 646us; 1us; 647us; 1us; 648us; 1us; 649us; 1us; 650us; 1us; 651us; 1us; 652us; 1us; 653us; 1us; 654us; 1us; 655us; 1us; 656us; 1us; 657us; 1us; 658us; 1us; 659us; 1us; 660us; 1us; 661us; 1us; 662us; 1us; 663us; 1us; 664us; 1us; 665us; 1us; 666us; 1us; 667us; 1us; 668us; 1us; 669us; 2us; 670us; 671us; 1us; 671us; 1us; 672us; 1us; 672us; 1us; 673us; 1us; 674us; 1us; 674us; 1us; 675us; 1us; 676us; 1us; 677us; 3us; 678us; 681us; 682us; 1us; 679us; 1us; 680us; 2us; 681us; 682us; 1us; 681us; 1us; 682us; 1us; 683us; 1us; 684us; 1us; 685us; 1us; 686us; 2us; 687us; 688us; 1us; 688us; 2us; 697us; 699us; 2us; 698us; 700us; 1us; 699us; 1us; 700us; 1us; 701us; 1us; 702us; 1us; 703us; 1us; 708us; 1us; 712us; 1us; 714us; 1us; 716us; 1us; 720us; 1us; 721us; 1us; 722us; 1us; 723us; 1us; 724us; 1us; 726us; 1us; 728us; 1us; 730us; 1us; 731us; 1us; 732us; 1us; 733us; 1us; 741us; 1us; 742us; 1us; 746us; 2us; 746us; 768us; 1us; 746us; 1us; 747us; 1us; 748us; 1us; 749us; 1us; 750us; 1us; 751us; 2us; 751us; 769us; 1us; 751us; 1us; 752us; 1us; 753us; 1us; 754us; 1us; 754us; 1us; 755us; 1us; 756us; 1us; 757us; 1us; 757us; 1us; 758us; 1us; 759us; 1us; 760us; 1us; 760us; 1us; 761us; 1us; 762us; 1us; 763us; 1us; 764us; 1us; 765us; 1us; 766us; 1us; 767us; 1us; 768us; 1us; 769us; 1us; 770us; 1us; 771us; 1us; 772us; 1us; 773us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 16us; 21us; 23us; 25us; 27us; 31us; 33us; 36us; 39us; 41us; 46us; 48us; 52us; 55us; 57us; 59us; 61us; 65us; 67us; 69us; 71us; 73us; 78us; 80us; 83us; 85us; 88us; 90us; 92us; 94us; 96us; 98us; 101us; 103us; 108us; 112us; 115us; 117us; 119us; 122us; 124us; 126us; 128us; 130us; 132us; 135us; 137us; 141us; 143us; 145us; 148us; 152us; 154us; 156us; 158us; 162us; 164us; 166us; 168us; 170us; 172us; 174us; 176us; 179us; 181us; 184us; 186us; 188us; 191us; 193us; 195us; 197us; 199us; 201us; 204us; 208us; 210us; 212us; 214us; 216us; 218us; 220us; 222us; 224us; 226us; 228us; 230us; 232us; 235us; 237us; 239us; 241us; 243us; 245us; 247us; 249us; 251us; 253us; 255us; 257us; 259us; 262us; 265us; 267us; 269us; 271us; 273us; 275us; 277us; 279us; 281us; 283us; 285us; 287us; 289us; 291us; 293us; 295us; 298us; 300us; 302us; 304us; 306us; 308us; 310us; 312us; 314us; 316us; 318us; 320us; 322us; 324us; 326us; 328us; 330us; 332us; 334us; 337us; 339us; 341us; 344us; 347us; 349us; 351us; 354us; 356us; 358us; 360us; 362us; 364us; 366us; 368us; 370us; 374us; 376us; 378us; 380us; 383us; 385us; 387us; 389us; 391us; 393us; 395us; 397us; 399us; 401us; 403us; 405us; 408us; 410us; 412us; 416us; 419us; 421us; 423us; 425us; 427us; 431us; 433us; 435us; 437us; 440us; 443us; 445us; 449us; 451us; 453us; 455us; 457us; 459us; 461us; 463us; 465us; 472us; 474us; 476us; 478us; 480us; 482us; 486us; 488us; 490us; 492us; 494us; 496us; 502us; 504us; 506us; 509us; 512us; 514us; 516us; 518us; 520us; 522us; 524us; 526us; 528us; 530us; 532us; 534us; 536us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 552us; 554us; 556us; 558us; 560us; 562us; 564us; 566us; 568us; 570us; 572us; 574us; 576us; 578us; 580us; 582us; 584us; 586us; 588us; 592us; 596us; 600us; 604us; 607us; 609us; 611us; 613us; 616us; 619us; 621us; 623us; 625us; 627us; 630us; 632us; 634us; 637us; 639us; 641us; 643us; 645us; 647us; 650us; 652us; 654us; 656us; 658us; 660us; 662us; 664us; 666us; 668us; 671us; 674us; 677us; 679us; 681us; 688us; 694us; 699us; 702us; 704us; 706us; 708us; 710us; 712us; 714us; 716us; 718us; 720us; 723us; 725us; 727us; 734us; 741us; 748us; 755us; 762us; 769us; 776us; 783us; 785us; 787us; 789us; 791us; 794us; 797us; 799us; 801us; 803us; 805us; 807us; 812us; 816us; 818us; 820us; 822us; 824us; 826us; 828us; 833us; 835us; 837us; 839us; 841us; 843us; 845us; 847us; 849us; 851us; 853us; 855us; 857us; 859us; 861us; 863us; 865us; 867us; 869us; 871us; 873us; 882us; 885us; 887us; 889us; 893us; 896us; 898us; 906us; 914us; 922us; 930us; 938us; 946us; 954us; 962us; 971us; 985us; 993us; 995us; 997us; 999us; 1002us; 1005us; 1007us; 1009us; 1011us; 1013us; 1015us; 1017us; 1019us; 1021us; 1023us; 1026us; 1028us; 1031us; 1033us; 1037us; 1039us; 1041us; 1044us; 1046us; 1049us; 1052us; 1054us; 1056us; 1058us; 1060us; 1062us; 1064us; 1109us; 1112us; 1114us; 1117us; 1119us; 1121us; 1170us; 1221us; 1273us; 1276us; 1278us; 1280us; 1282us; 1284us; 1286us; 1288us; 1290us; 1296us; 1298us; 1301us; 1304us; 1307us; 1310us; 1313us; 1316us; 1319us; 1322us; 1325us; 1329us; 1332us; 1334us; 1339us; 1342us; 1345us; 1391us; 1394us; 1396us; 1398us; 1403us; 1406us; 1409us; 1455us; 1458us; 1460us; 1462us; 1464us; 1509us; 1512us; 1515us; 1518us; 1520us; 1522us; 1525us; 1528us; 1531us; 1533us; 1535us; 1537us; 1539us; 1541us; 1543us; 1545us; 1548us; 1551us; 1553us; 1555us; 1560us; 1562us; 1567us; 1569us; 1571us; 1573us; 1576us; 1578us; 1581us; 1583us; 1585us; 1587us; 1589us; 1591us; 1593us; 1595us; 1597us; 1599us; 1601us; 1603us; 1606us; 1609us; 1611us; 1613us; 1618us; 1665us; 1668us; 1670us; 1672us; 1679us; 1727us; 1731us; 1734us; 1736us; 1738us; 1740us; 1742us; 1744us; 1746us; 1748us; 1764us; 1771us; 1776us; 1779us; 1781us; 1783us; 1785us; 1787us; 1789us; 1795us; 1800us; 1803us; 1805us; 1807us; 1809us; 1811us; 1813us; 1815us; 1817us; 1819us; 1821us; 1823us; 1826us; 1828us; 1830us; 1875us; 1920us; 1965us; 2010us; 2055us; 2100us; 2145us; 2190us; 2235us; 2280us; 2325us; 2370us; 2415us; 2460us; 2505us; 2550us; 2595us; 2640us; 2685us; 2730us; 2775us; 2820us; 2865us; 2910us; 2956us; 3001us; 3046us; 3091us; 3136us; 3184us; 3230us; 3275us; 3320us; 3365us; 3367us; 3369us; 3371us; 3374us; 3377us; 3380us; 3383us; 3386us; 3389us; 3392us; 3395us; 3398us; 3401us; 3404us; 3407us; 3410us; 3413us; 3416us; 3419us; 3422us; 3425us; 3428us; 3431us; 3434us; 3436us; 3438us; 3440us; 3442us; 3444us; 3446us; 3448us; 3450us; 3452us; 3454us; 3456us; 3458us; 3460us; 3462us; 3464us; 3466us; 3468us; 3470us; 3472us; 3474us; 3476us; 3478us; 3480us; 3482us; 3484us; 3486us; 3488us; 3491us; 3494us; 3496us; 3498us; 3500us; 3503us; 3505us; 3507us; 3509us; 3511us; 3517us; 3522us; 3525us; 3527us; 3529us; 3531us; 3533us; 3535us; 3537us; 3539us; 3541us; 3543us; 3545us; 3548us; 3551us; 3554us; 3556us; 3558us; 3560us; 3563us; 3566us; 3569us; 3571us; 3573us; 3576us; 3578us; 3580us; 3582us; 3584us; 3586us; 3589us; 3591us; 3593us; 3596us; 3598us; 3600us; 3603us; 3605us; 3609us; 3612us; 3615us; 3617us; 3619us; 3621us; 3623us; 3625us; 3628us; 3635us; 3637us; 3644us; 3646us; 3653us; 3660us; 3667us; 3674us; 3681us; 3683us; 3685us; 3687us; 3689us; 3691us; 3694us; 3696us; 3698us; 3700us; 3702us; 3704us; 3706us; 3709us; 3711us; 3713us; 3715us; 3717us; 3719us; 3724us; 3727us; 3729us; 3731us; 3733us; 3735us; 3737us; 3739us; 3741us; 3743us; 3749us; 3751us; 3753us; 3759us; 3762us; 3764us; 3766us; 3768us; 3770us; 3772us; 3774us; 3777us; 3779us; 3781us; 3783us; 3785us; 3787us; 3789us; 3791us; 3793us; 3795us; 3797us; 3802us; 3805us; 3807us; 3809us; 3811us; 3813us; 3815us; 3820us; 3823us; 3825us; 3827us; 3829us; 3831us; 3841us; 3855us; 3857us; 3860us; 3862us; 3864us; 3866us; 3869us; 3871us; 3873us; 3875us; 3877us; 3879us; 3881us; 3887us; 3890us; 3892us; 3894us; 3896us; 3898us; 3900us; 3902us; 3904us; 3906us; 3908us; 3910us; 3914us; 3916us; 3918us; 3920us; 3922us; 3926us; 3928us; 3930us; 3932us; 3934us; 3936us; 3938us; 3940us; 3942us; 3944us; 3946us; 3949us; 3951us; 3953us; 3955us; 3958us; 3960us; 3964us; 3967us; 3969us; 3972us; 3974us; 3976us; 3978us; 3981us; 3983us; 3986us; 3988us; 3990us; 3992us; 3995us; 3997us; 3999us; 4001us; 4004us; 4007us; 4010us; 4012us; 4014us; 4018us; 4020us; 4022us; 4028us; 4032us; 4034us; 4036us; 4038us; 4040us; 4042us; 4044us; 4046us; 4048us; 4050us; 4053us; 4055us; 4057us; 4060us; 4062us; 4064us; 4067us; 4069us; 4071us; 4079us; 4082us; 4088us; 4091us; 4094us; 4097us; 4103us; 4106us; 4108us; 4110us; 4117us; 4119us; 4121us; 4123us; 4125us; 4127us; 4129us; 4136us; 4138us; 4140us; 4142us; 4144us; 4150us; 4152us; 4154us; 4158us; 4161us; 4166us; 4168us; 4170us; 4172us; 4177us; 4179us; 4186us; 4188us; 4191us; 4193us; 4196us; 4198us; 4201us; 4203us; 4206us; 4212us; 4217us; 4219us; 4222us; 4224us; 4227us; 4229us; 4232us; 4234us; 4239us; 4241us; 4245us; 4247us; 4250us; 4252us; 4254us; 4256us; 4258us; 4260us; 4262us; 4265us; 4269us; 4271us; 4273us; 4277us; 4284us; 4287us; 4292us; 4294us; 4297us; 4299us; 4302us; 4304us; 4307us; 4309us; 4311us; 4313us; 4317us; 4319us; 4321us; 4323us; 4325us; 4327us; 4329us; 4331us; 4333us; 4335us; 4337us; 4339us; 4341us; 4343us; 4345us; 4353us; 4357us; 4361us; 4364us; 4366us; 4368us; 4370us; 4374us; 4376us; 4378us; 4380us; 4382us; 4384us; 4386us; 4389us; 4393us; 4395us; 4397us; 4399us; 4403us; 4405us; 4409us; 4411us; 4415us; 4418us; 4420us; 4422us; 4424us; 4426us; 4429us; 4431us; 4433us; 4437us; 4441us; 4445us; 4447us; 4449us; 4451us; 4453us; 4455us; 4457us; 4459us; 4461us; 4463us; 4465us; 4467us; 4469us; 4472us; 4474us; 4476us; 4481us; 4483us; 4485us; 4487us; 4489us; 4491us; 4495us; 4499us; 4501us; 4503us; 4505us; 4507us; 4509us; 4511us; 4513us; 4515us; 4517us; 4519us; 4521us; 4523us; 4525us; 4527us; 4529us; 4531us; 4533us; 4535us; 4537us; 4539us; 4541us; 4543us; 4545us; 4547us; 4549us; 4551us; 4553us; 4556us; 4558us; 4560us; 4562us; 4564us; 4566us; 4568us; 4570us; 4572us; 4574us; 4578us; 4580us; 4582us; 4585us; 4587us; 4589us; 4591us; 4593us; 4595us; 4597us; 4600us; 4602us; 4605us; 4608us; 4610us; 4612us; 4614us; 4616us; 4618us; 4620us; 4622us; 4624us; 4626us; 4628us; 4630us; 4632us; 4634us; 4636us; 4638us; 4640us; 4642us; 4644us; 4646us; 4648us; 4650us; 4652us; 4654us; 4657us; 4659us; 4661us; 4663us; 4665us; 4667us; 4669us; 4672us; 4674us; 4676us; 4678us; 4680us; 4682us; 4684us; 4686us; 4688us; 4690us; 4692us; 4694us; 4696us; 4698us; 4700us; 4702us; 4704us; 4706us; 4708us; 4710us; 4712us; 4714us; 4716us; 4718us; 4720us; 4722us; |]
let _fsyacc_action_rows = 1104
let _fsyacc_actionTableElements = [|16us; 16401us; 10us; 436us; 21us; 18us; 38us; 16411us; 43us; 1069us; 44us; 1072us; 45us; 1076us; 46us; 1079us; 88us; 40us; 116us; 224us; 117us; 80us; 125us; 1073us; 131us; 74us; 137us; 1075us; 163us; 16411us; 175us; 1080us; 223us; 16us; 0us; 49152us; 0us; 16385us; 0us; 16386us; 0us; 16387us; 3us; 32768us; 48us; 983us; 60us; 982us; 216us; 981us; 1us; 16388us; 92us; 985us; 13us; 16401us; 10us; 8us; 21us; 18us; 38us; 16411us; 43us; 1069us; 44us; 1072us; 88us; 40us; 116us; 224us; 117us; 80us; 125us; 1073us; 131us; 74us; 137us; 1075us; 163us; 16411us; 223us; 32us; 0us; 16389us; 1us; 32768us; 10us; 10us; 0us; 16390us; 2us; 32768us; 10us; 12us; 223us; 13us; 0us; 16391us; 1us; 32768us; 10us; 14us; 0us; 16392us; 0us; 16394us; 14us; 16411us; 10us; 17us; 20us; 1042us; 43us; 1069us; 44us; 1072us; 83us; 1041us; 88us; 40us; 99us; 1040us; 116us; 224us; 117us; 80us; 125us; 1073us; 131us; 74us; 137us; 1075us; 223us; 32us; 225us; 16662us; 0us; 16395us; 11us; 16401us; 38us; 16411us; 43us; 1069us; 44us; 1072us; 88us; 40us; 116us; 224us; 117us; 80us; 125us; 1073us; 131us; 74us; 137us; 1075us; 163us; 16411us; 223us; 23us; 5us; 32768us; 10us; 436us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 223us; 424us; 1us; 17097us; 20us; 1053us; 0us; 16396us; 0us; 16397us; 15us; 16411us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 20us; 1042us; 43us; 1069us; 44us; 1072us; 83us; 1041us; 88us; 40us; 99us; 1040us; 116us; 224us; 117us; 80us; 125us; 1073us; 131us; 74us; 137us; 1075us; 223us; 32us; 0us; 16398us; 0us; 16399us; 0us; 16400us; 0us; 16402us; 14us; 16406us; 20us; 1042us; 38us; 16411us; 43us; 1069us; 44us; 1072us; 83us; 1041us; 88us; 40us; 99us; 1040us; 116us; 224us; 117us; 80us; 125us; 1073us; 131us; 74us; 137us; 1075us; 163us; 16411us; 223us; 32us; 0us; 16403us; 11us; 16407us; 38us; 16411us; 43us; 1069us; 44us; 1072us; 88us; 40us; 116us; 224us; 117us; 80us; 125us; 1073us; 131us; 74us; 137us; 1075us; 163us; 16411us; 223us; 32us; 0us; 16404us; 12us; 16411us; 20us; 1042us; 43us; 1069us; 44us; 1072us; 83us; 1041us; 88us; 40us; 99us; 1040us; 116us; 224us; 117us; 80us; 125us; 1073us; 131us; 74us; 137us; 1075us; 223us; 32us; 0us; 16405us; 9us; 16411us; 43us; 1069us; 44us; 1072us; 88us; 40us; 116us; 224us; 117us; 80us; 125us; 1073us; 131us; 74us; 137us; 1075us; 223us; 32us; 0us; 16408us; 0us; 16409us; 0us; 16410us; 1us; 16412us; 88us; 40us; 0us; 16413us; 16us; 32768us; 10us; 436us; 15us; 1102us; 43us; 1070us; 44us; 1072us; 45us; 1077us; 46us; 1079us; 48us; 983us; 60us; 982us; 75us; 1100us; 109us; 1101us; 125us; 1073us; 131us; 1074us; 137us; 1075us; 175us; 1080us; 216us; 981us; 223us; 45us; 2us; 17099us; 20us; 1045us; 99us; 1046us; 8us; 32768us; 10us; 436us; 15us; 1102us; 43us; 1098us; 45us; 1099us; 69us; 43us; 75us; 1100us; 109us; 1101us; 223us; 424us; 1us; 17097us; 20us; 1053us; 0us; 16414us; 1us; 16662us; 69us; 46us; 1us; 17097us; 20us; 1053us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 11us; 17098us; 43us; 1069us; 44us; 1072us; 45us; 1076us; 46us; 1079us; 48us; 983us; 60us; 982us; 125us; 1073us; 131us; 1074us; 137us; 1075us; 175us; 1080us; 216us; 981us; 0us; 16419us; 3us; 17127us; 41us; 1068us; 42us; 1067us; 92us; 985us; 14us; 16900us; 87us; 745us; 89us; 765us; 107us; 751us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 217us; 4us; 218us; 3us; 0us; 16420us; 4us; 32768us; 21us; 60us; 48us; 983us; 60us; 982us; 216us; 981us; 3us; 17127us; 41us; 1068us; 42us; 1067us; 92us; 985us; 14us; 16900us; 87us; 745us; 89us; 765us; 107us; 751us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 217us; 4us; 218us; 3us; 0us; 16421us; 3us; 32768us; 48us; 983us; 60us; 982us; 216us; 981us; 4us; 32768us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 92us; 985us; 2us; 17127us; 41us; 1068us; 42us; 1067us; 14us; 16900us; 87us; 745us; 89us; 765us; 107us; 751us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 217us; 4us; 218us; 3us; 0us; 16422us; 1us; 32768us; 93us; 66us; 0us; 16423us; 1us; 32768us; 93us; 68us; 0us; 16424us; 1us; 17023us; 93us; 70us; 0us; 16425us; 2us; 32768us; 38us; 239us; 163us; 233us; 0us; 16426us; 0us; 16427us; 3us; 17133us; 48us; 983us; 60us; 982us; 216us; 981us; 1us; 16463us; 157us; 88us; 0us; 16428us; 3us; 32768us; 48us; 983us; 60us; 982us; 216us; 981us; 1us; 16463us; 157us; 88us; 0us; 16429us; 4us; 32768us; 48us; 983us; 60us; 982us; 216us; 981us; 218us; 226us; 1us; 16430us; 92us; 985us; 0us; 16431us; 0us; 16432us; 0us; 16449us; 0us; 16450us; 0us; 16451us; 0us; 16461us; 3us; 32768us; 48us; 983us; 60us; 982us; 216us; 981us; 1us; 16463us; 157us; 88us; 0us; 16462us; 1us; 32768us; 85us; 92us; 1us; 32768us; 21us; 94us; 0us; 16464us; 0us; 16486us; 1us; 17097us; 20us; 1053us; 1us; 16488us; 102us; 140us; 3us; 32768us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 1us; 16488us; 102us; 140us; 0us; 16465us; 1us; 17097us; 20us; 1053us; 1us; 16488us; 102us; 140us; 3us; 32768us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 1us; 16488us; 102us; 140us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 4us; 16474us; 47us; 16486us; 48us; 16486us; 62us; 16486us; 223us; 113us; 5us; 32768us; 10us; 436us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 223us; 424us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 4us; 16474us; 47us; 16486us; 48us; 16486us; 62us; 16486us; 223us; 113us; 0us; 16473us; 2us; 17099us; 20us; 1045us; 99us; 1046us; 4us; 16474us; 47us; 16486us; 48us; 16486us; 62us; 16486us; 223us; 113us; 0us; 16475us; 5us; 17109us; 127us; 1056us; 132us; 1057us; 133us; 1058us; 138us; 1060us; 139us; 1059us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 16929us; 93us; 833us; 1us; 32768us; 85us; 122us; 43us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16476us; 20us; 16929us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 93us; 833us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 16929us; 93us; 833us; 1us; 32768us; 85us; 127us; 43us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16477us; 1us; 32768us; 85us; 130us; 43us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16478us; 3us; 32768us; 47us; 85us; 48us; 86us; 62us; 84us; 5us; 17109us; 127us; 1056us; 132us; 1057us; 133us; 1058us; 138us; 1060us; 139us; 1059us; 1us; 17093us; 18us; 1052us; 0us; 16481us; 1us; 32768us; 92us; 137us; 4us; 32768us; 48us; 1035us; 107us; 988us; 115us; 993us; 216us; 981us; 0us; 16484us; 0us; 16485us; 5us; 16474us; 21us; 107us; 47us; 16486us; 48us; 16486us; 62us; 16486us; 223us; 113us; 3us; 32768us; 18us; 1049us; 19us; 1050us; 168us; 1051us; 0us; 16487us; 4us; 32768us; 89us; 146us; 107us; 200us; 115us; 993us; 216us; 981us; 0us; 16498us; 0us; 16499us; 4us; 16486us; 38us; 168us; 68us; 172us; 144us; 1062us; 216us; 17113us; 5us; 32768us; 10us; 436us; 74us; 1084us; 75us; 1081us; 76us; 1083us; 223us; 424us; 0us; 16500us; 0us; 16501us; 7us; 16502us; 20us; 1053us; 38us; 17097us; 47us; 17097us; 48us; 17097us; 68us; 17097us; 144us; 17097us; 216us; 17097us; 4us; 16486us; 38us; 168us; 68us; 172us; 144us; 1062us; 216us; 17113us; 0us; 16503us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 90us; 847us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16504us; 1us; 32768us; 93us; 153us; 1us; 32768us; 85us; 157us; 43us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16505us; 2us; 32768us; 47us; 160us; 48us; 163us; 5us; 17109us; 127us; 1056us; 132us; 1057us; 133us; 1058us; 138us; 1060us; 139us; 1059us; 1us; 17093us; 18us; 1052us; 0us; 16506us; 5us; 17109us; 127us; 1056us; 132us; 1057us; 133us; 1058us; 138us; 1060us; 139us; 1059us; 1us; 17093us; 18us; 1052us; 0us; 16507us; 1us; 17093us; 18us; 1052us; 0us; 16508us; 0us; 16486us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 17093us; 18us; 1052us; 0us; 16509us; 1us; 32768us; 216us; 175us; 0us; 16510us; 0us; 16511us; 1us; 16512us; 112us; 176us; 1us; 32768us; 216us; 175us; 0us; 16513us; 2us; 17113us; 144us; 1062us; 223us; 182us; 5us; 32768us; 10us; 436us; 74us; 1084us; 75us; 1081us; 76us; 1083us; 223us; 424us; 0us; 16514us; 0us; 16515us; 3us; 32768us; 74us; 1084us; 75us; 1081us; 76us; 1083us; 0us; 16516us; 1us; 16519us; 92us; 985us; 0us; 16522us; 3us; 32768us; 107us; 200us; 115us; 993us; 216us; 981us; 0us; 16523us; 4us; 16524us; 20us; 1053us; 107us; 17097us; 115us; 17097us; 216us; 17097us; 3us; 16526us; 107us; 200us; 115us; 993us; 216us; 981us; 0us; 16525us; 3us; 17097us; 20us; 1053us; 93us; 196us; 146us; 193us; 0us; 16527us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 89us; 178us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 17097us; 20us; 1053us; 0us; 16528us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 90us; 847us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 17097us; 20us; 1053us; 0us; 16529us; 0us; 16530us; 29us; 32768us; 72us; 1028us; 77us; 1010us; 78us; 1008us; 85us; 1012us; 86us; 203us; 90us; 1016us; 94us; 201us; 98us; 1020us; 104us; 1017us; 105us; 1018us; 111us; 1011us; 118us; 1013us; 169us; 1023us; 170us; 1019us; 180us; 1025us; 183us; 1022us; 185us; 1014us; 186us; 1015us; 206us; 1021us; 207us; 1009us; 208us; 1006us; 209us; 1005us; 210us; 1007us; 211us; 1000us; 212us; 1004us; 213us; 1003us; 214us; 1002us; 215us; 1001us; 223us; 991us; 3us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 0us; 16531us; 1us; 32768us; 73us; 204us; 3us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 0us; 16532us; 2us; 17060us; 20us; 1053us; 146us; 209us; 0us; 16533us; 0us; 16534us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 89us; 178us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16535us; 0us; 16536us; 6us; 16538us; 42us; 880us; 48us; 983us; 60us; 982us; 86us; 895us; 111us; 213us; 216us; 981us; 16us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16537us; 2us; 17099us; 20us; 1045us; 99us; 1046us; 2us; 17098us; 144us; 1062us; 216us; 17113us; 0us; 16539us; 0us; 16540us; 0us; 16541us; 1us; 32768us; 216us; 981us; 1us; 32768us; 93us; 222us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16542us; 1us; 32768us; 218us; 225us; 0us; 16543us; 0us; 16544us; 1us; 17101us; 119us; 1055us; 6us; 17109us; 127us; 1056us; 132us; 1057us; 133us; 1058us; 138us; 1060us; 139us; 1059us; 223us; 254us; 0us; 16545us; 1us; 17101us; 119us; 1055us; 6us; 17109us; 127us; 1056us; 132us; 1057us; 133us; 1058us; 138us; 1060us; 139us; 1059us; 223us; 254us; 0us; 16546us; 43us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16547us; 1us; 17101us; 119us; 1055us; 6us; 17109us; 127us; 1056us; 132us; 1057us; 133us; 1058us; 138us; 1060us; 139us; 1059us; 223us; 254us; 3us; 32768us; 10us; 436us; 18us; 246us; 223us; 424us; 0us; 16548us; 1us; 17101us; 119us; 1055us; 6us; 17109us; 127us; 1056us; 132us; 1057us; 133us; 1058us; 138us; 1060us; 139us; 1059us; 223us; 254us; 3us; 32768us; 10us; 436us; 18us; 246us; 223us; 424us; 0us; 16549us; 43us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 3us; 32768us; 10us; 436us; 18us; 246us; 223us; 424us; 0us; 16550us; 0us; 16555us; 0us; 16556us; 1us; 16559us; 157us; 250us; 0us; 16557us; 6us; 17109us; 127us; 1056us; 132us; 1057us; 133us; 1058us; 138us; 1060us; 139us; 1059us; 223us; 254us; 1us; 16559us; 157us; 250us; 0us; 16558us; 0us; 16560us; 0us; 16561us; 1us; 17111us; 143us; 1061us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 16929us; 93us; 833us; 3us; 32768us; 10us; 436us; 85us; 259us; 223us; 424us; 44us; 32768us; 21us; 263us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 261us; 0us; 16562us; 0us; 16563us; 0us; 16564us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 5us; 32768us; 10us; 436us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 223us; 424us; 0us; 16565us; 0us; 16566us; 0us; 16567us; 0us; 16570us; 1us; 16568us; 100us; 271us; 0us; 16569us; 2us; 32768us; 106us; 976us; 213us; 979us; 2us; 32768us; 85us; 273us; 157us; 275us; 43us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16571us; 2us; 32768us; 106us; 976us; 213us; 979us; 0us; 16572us; 0us; 16573us; 2us; 32768us; 70us; 281us; 93us; 279us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16574us; 0us; 16575us; 0us; 16576us; 0us; 16577us; 0us; 16578us; 0us; 16579us; 0us; 16580us; 0us; 16581us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 32768us; 113us; 290us; 44us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 292us; 0us; 16582us; 0us; 16583us; 20us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 304us; 2us; 32768us; 113us; 295us; 223us; 302us; 45us; 32768us; 10us; 436us; 17us; 299us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 424us; 3us; 32768us; 10us; 436us; 19us; 297us; 223us; 424us; 0us; 16584us; 0us; 16585us; 1us; 32768us; 19us; 300us; 0us; 16586us; 0us; 16587us; 1us; 32768us; 19us; 303us; 0us; 16588us; 1us; 32768us; 19us; 305us; 0us; 16589us; 1us; 16590us; 40us; 307us; 1us; 32768us; 185us; 952us; 0us; 16591us; 5us; 16592us; 72us; 319us; 94us; 320us; 104us; 327us; 112us; 325us; 158us; 317us; 5us; 16593us; 72us; 319us; 94us; 320us; 104us; 327us; 112us; 325us; 158us; 317us; 3us; 16595us; 94us; 320us; 104us; 327us; 112us; 325us; 1us; 16596us; 94us; 320us; 2us; 16600us; 94us; 320us; 104us; 327us; 2us; 16601us; 94us; 320us; 104us; 327us; 1us; 16602us; 94us; 320us; 1us; 16603us; 94us; 320us; 1us; 32768us; 216us; 981us; 0us; 16594us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 16597us; 112us; 324us; 0us; 16598us; 0us; 16599us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 25us; 16608us; 10us; 16617us; 15us; 16617us; 20us; 16617us; 43us; 16617us; 45us; 16617us; 72us; 16617us; 73us; 16617us; 74us; 16617us; 75us; 16617us; 76us; 16617us; 80us; 16617us; 85us; 16617us; 93us; 16617us; 94us; 16617us; 99us; 16617us; 100us; 16617us; 104us; 16617us; 108us; 16617us; 109us; 16617us; 110us; 16617us; 112us; 16617us; 113us; 16617us; 153us; 16617us; 158us; 16617us; 223us; 16617us; 21us; 32768us; 41us; 331us; 42us; 333us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16604us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16605us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16606us; 0us; 16607us; 21us; 16612us; 41us; 340us; 42us; 338us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16609us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16610us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16611us; 3us; 32768us; 48us; 983us; 60us; 982us; 216us; 981us; 3us; 32768us; 74us; 1084us; 75us; 1081us; 76us; 1083us; 0us; 16613us; 19us; 16643us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 32768us; 73us; 347us; 0us; 16614us; 19us; 16643us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 32768us; 80us; 350us; 0us; 16615us; 0us; 16616us; 0us; 16617us; 0us; 16618us; 0us; 16619us; 0us; 16620us; 0us; 16621us; 47us; 16627us; 10us; 436us; 48us; 1035us; 60us; 136us; 72us; 1028us; 77us; 1010us; 78us; 1008us; 82us; 351us; 85us; 1012us; 86us; 345us; 87us; 348us; 89us; 342us; 90us; 1016us; 98us; 1020us; 104us; 1017us; 105us; 1018us; 107us; 357us; 111us; 1011us; 115us; 993us; 118us; 1013us; 123us; 355us; 148us; 354us; 169us; 1023us; 170us; 1019us; 173us; 356us; 180us; 1025us; 183us; 1022us; 185us; 1014us; 186us; 1015us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 206us; 1021us; 207us; 1009us; 208us; 1006us; 209us; 1005us; 210us; 1007us; 211us; 1000us; 212us; 1004us; 213us; 1003us; 214us; 1002us; 215us; 1001us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 361us; 5us; 32768us; 10us; 436us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 223us; 424us; 0us; 16622us; 0us; 16623us; 3us; 16662us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 0us; 16624us; 0us; 16625us; 6us; 16626us; 72us; 377us; 93us; 380us; 94us; 382us; 104us; 387us; 112us; 385us; 158us; 375us; 4us; 16629us; 93us; 380us; 94us; 382us; 104us; 387us; 112us; 385us; 2us; 16633us; 93us; 380us; 94us; 382us; 3us; 16635us; 93us; 380us; 94us; 382us; 104us; 387us; 3us; 16636us; 93us; 380us; 94us; 382us; 104us; 387us; 2us; 16637us; 93us; 380us; 94us; 382us; 2us; 16638us; 93us; 380us; 94us; 382us; 6us; 16642us; 72us; 377us; 93us; 380us; 94us; 382us; 104us; 387us; 112us; 385us; 158us; 375us; 8us; 17099us; 20us; 1045us; 72us; 377us; 93us; 380us; 94us; 382us; 99us; 1046us; 104us; 387us; 112us; 385us; 158us; 375us; 15us; 32768us; 10us; 436us; 15us; 1102us; 43us; 1098us; 45us; 1099us; 72us; 377us; 75us; 1100us; 85us; 786us; 93us; 380us; 94us; 382us; 104us; 387us; 109us; 1101us; 112us; 385us; 153us; 782us; 158us; 375us; 223us; 429us; 7us; 16782us; 72us; 377us; 93us; 380us; 94us; 382us; 100us; 639us; 104us; 387us; 112us; 385us; 158us; 375us; 1us; 32768us; 216us; 981us; 0us; 16628us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 16630us; 112us; 384us; 1us; 16631us; 104us; 386us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16632us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16634us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16639us; 2us; 17099us; 20us; 1045us; 99us; 1046us; 0us; 16640us; 3us; 17098us; 48us; 983us; 60us; 982us; 216us; 981us; 0us; 16641us; 2us; 32768us; 85us; 394us; 92us; 985us; 19us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16644us; 19us; 16643us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16645us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 5us; 32768us; 10us; 436us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 223us; 424us; 0us; 16647us; 0us; 16648us; 0us; 16649us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 3us; 32768us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 0us; 16650us; 23us; 16651us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 1us; 16653us; 17us; 408us; 0us; 16652us; 1us; 16655us; 93us; 410us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16654us; 27us; 16658us; 20us; 1045us; 28us; 419us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 99us; 1046us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 120us; 417us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 28us; 16658us; 20us; 1045us; 28us; 419us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 99us; 1046us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 120us; 417us; 154us; 575us; 169us; 727us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 28us; 16658us; 20us; 1045us; 28us; 419us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 99us; 1046us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 120us; 417us; 154us; 575us; 169us; 777us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 42us; 16657us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16656us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16659us; 1us; 32768us; 21us; 420us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 3us; 32768us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 0us; 16660us; 45us; 16661us; 20us; 480us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 477us; 0us; 16662us; 2us; 16662us; 18us; 1066us; 164us; 1065us; 2us; 16662us; 18us; 1066us; 164us; 1065us; 2us; 16662us; 18us; 1066us; 164us; 1065us; 2us; 16662us; 30us; 1064us; 163us; 1063us; 2us; 16662us; 18us; 1066us; 164us; 1065us; 1us; 16662us; 73us; 710us; 1us; 16662us; 73us; 723us; 1us; 16662us; 80us; 749us; 3us; 16662us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 3us; 16662us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 3us; 16662us; 74us; 1084us; 75us; 1081us; 76us; 1083us; 0us; 16663us; 43us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 82us; 438us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 2us; 32768us; 27us; 453us; 121us; 451us; 1us; 16664us; 52us; 437us; 25us; 32768us; 27us; 453us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 121us; 451us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 1us; 16665us; 52us; 437us; 0us; 16666us; 0us; 16667us; 43us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 82us; 445us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 2us; 32768us; 27us; 453us; 121us; 451us; 1us; 16668us; 52us; 437us; 25us; 32768us; 27us; 453us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 121us; 451us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 1us; 16669us; 52us; 437us; 0us; 16670us; 0us; 16671us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 23us; 16672us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 1us; 32768us; 21us; 454us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 5us; 32768us; 10us; 436us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 223us; 424us; 0us; 16673us; 0us; 16674us; 43us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 3us; 32768us; 10us; 436us; 18us; 246us; 223us; 424us; 1us; 16675us; 35us; 458us; 0us; 16676us; 0us; 16677us; 0us; 16678us; 0us; 16679us; 1us; 32768us; 153us; 466us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16680us; 1us; 32768us; 153us; 469us; 43us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 471us; 0us; 16681us; 0us; 16682us; 45us; 32768us; 20us; 478us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 476us; 0us; 16683us; 45us; 32768us; 20us; 480us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 477us; 0us; 16684us; 0us; 16685us; 0us; 16686us; 44us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 482us; 0us; 16687us; 44us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 483us; 0us; 16688us; 0us; 16689us; 0us; 16690us; 0us; 16691us; 43us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 3us; 32768us; 10us; 436us; 18us; 246us; 223us; 424us; 0us; 16692us; 43us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 3us; 32768us; 10us; 436us; 18us; 246us; 223us; 424us; 0us; 16693us; 0us; 16694us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 4us; 32768us; 10us; 436us; 25us; 622us; 102us; 620us; 223us; 424us; 0us; 16695us; 0us; 16696us; 44us; 32768us; 10us; 436us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 424us; 27us; 32768us; 10us; 436us; 28us; 645us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 120us; 644us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 223us; 424us; 0us; 16697us; 0us; 16699us; 0us; 16700us; 44us; 32768us; 10us; 436us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 425us; 27us; 32768us; 10us; 436us; 30us; 1064us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 163us; 1063us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 223us; 424us; 44us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 507us; 4us; 32768us; 10us; 436us; 18us; 1066us; 164us; 1065us; 223us; 424us; 0us; 16701us; 0us; 16702us; 2us; 32768us; 18us; 1066us; 164us; 1065us; 0us; 16703us; 0us; 16704us; 0us; 16705us; 0us; 16706us; 26us; 32768us; 10us; 436us; 15us; 1102us; 43us; 1098us; 45us; 1099us; 48us; 1035us; 60us; 136us; 75us; 1100us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 109us; 1101us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 428us; 10us; 17097us; 10us; 436us; 15us; 1102us; 20us; 1053us; 30us; 1064us; 43us; 1098us; 45us; 1099us; 75us; 1100us; 109us; 1101us; 163us; 1063us; 223us; 424us; 50us; 32768us; 10us; 436us; 15us; 1102us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 43us; 1098us; 45us; 1099us; 52us; 437us; 54us; 444us; 60us; 704us; 75us; 1100us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 109us; 1101us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 426us; 9us; 32768us; 10us; 436us; 15us; 1102us; 18us; 1066us; 43us; 1098us; 45us; 1099us; 75us; 1100us; 109us; 1101us; 164us; 1065us; 223us; 424us; 0us; 16707us; 0us; 16708us; 0us; 16709us; 0us; 16710us; 0us; 16711us; 4us; 32768us; 10us; 436us; 30us; 1064us; 163us; 1063us; 223us; 424us; 45us; 32768us; 10us; 436us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 427us; 4us; 32768us; 10us; 436us; 18us; 1066us; 164us; 1065us; 223us; 424us; 0us; 16712us; 0us; 16713us; 0us; 16714us; 0us; 16715us; 0us; 16716us; 43us; 32768us; 21us; 398us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 2us; 32768us; 18us; 1066us; 164us; 1065us; 0us; 16717us; 0us; 16718us; 0us; 16719us; 0us; 16720us; 1us; 32768us; 113us; 780us; 0us; 16721us; 23us; 16723us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 18us; 16725us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 104us; 579us; 105us; 580us; 111us; 592us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 18us; 16726us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 104us; 579us; 105us; 580us; 111us; 592us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 8us; 16727us; 77us; 591us; 94us; 589us; 111us; 592us; 183us; 588us; 208us; 590us; 210us; 593us; 213us; 587us; 215us; 594us; 18us; 16728us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 104us; 579us; 105us; 580us; 111us; 592us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 16us; 16729us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 111us; 592us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 16us; 16730us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 111us; 592us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 8us; 16731us; 77us; 591us; 94us; 589us; 111us; 592us; 183us; 588us; 208us; 590us; 210us; 593us; 213us; 587us; 215us; 594us; 8us; 16732us; 77us; 591us; 94us; 589us; 111us; 592us; 183us; 588us; 208us; 590us; 210us; 593us; 213us; 587us; 215us; 594us; 8us; 16733us; 77us; 591us; 94us; 589us; 111us; 592us; 183us; 588us; 208us; 590us; 210us; 593us; 213us; 587us; 215us; 594us; 8us; 16734us; 77us; 591us; 94us; 589us; 111us; 592us; 183us; 588us; 208us; 590us; 210us; 593us; 213us; 587us; 215us; 594us; 8us; 16735us; 77us; 591us; 94us; 589us; 111us; 592us; 183us; 588us; 208us; 590us; 210us; 593us; 213us; 587us; 215us; 594us; 8us; 16736us; 77us; 591us; 94us; 589us; 111us; 592us; 183us; 588us; 208us; 590us; 210us; 593us; 213us; 587us; 215us; 594us; 8us; 16737us; 77us; 591us; 94us; 589us; 111us; 592us; 183us; 588us; 208us; 590us; 210us; 593us; 213us; 587us; 215us; 594us; 1us; 16738us; 215us; 594us; 7us; 16739us; 77us; 591us; 94us; 589us; 111us; 592us; 183us; 588us; 208us; 590us; 210us; 593us; 215us; 594us; 4us; 16740us; 111us; 592us; 183us; 588us; 210us; 593us; 215us; 594us; 4us; 16741us; 111us; 592us; 183us; 588us; 210us; 593us; 215us; 594us; 1us; 16742us; 215us; 594us; 1us; 16743us; 215us; 594us; 1us; 16744us; 215us; 594us; 23us; 16781us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 23us; 16786us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 23us; 16790us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 27us; 32768us; 10us; 436us; 28us; 645us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 120us; 644us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 223us; 424us; 21us; 16797us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 104us; 579us; 105us; 580us; 111us; 592us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 21us; 16798us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 104us; 579us; 105us; 580us; 111us; 592us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 23us; 16836us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 23us; 16838us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 24us; 16886us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 169us; 777us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 24us; 16882us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 169us; 778us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 23us; 16883us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 25us; 32768us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 122us; 829us; 154us; 575us; 165us; 830us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 23us; 16897us; 77us; 591us; 78us; 584us; 85us; 582us; 94us; 589us; 95us; 571us; 98us; 573us; 104us; 579us; 105us; 580us; 111us; 592us; 112us; 660us; 118us; 578us; 154us; 575us; 170us; 576us; 183us; 588us; 185us; 585us; 186us; 586us; 208us; 590us; 209us; 581us; 210us; 593us; 212us; 577us; 213us; 587us; 214us; 583us; 215us; 594us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16722us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 16724us; 112us; 659us; 43us; 32768us; 15us; 595us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 596us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 597us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 598us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 599us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 600us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 601us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 602us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 603us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 604us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 605us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 606us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 607us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 608us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 609us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 610us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 611us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 612us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 613us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 43us; 32768us; 15us; 614us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16745us; 0us; 16746us; 0us; 16747us; 0us; 16748us; 0us; 16749us; 0us; 16750us; 0us; 16751us; 0us; 16752us; 0us; 16753us; 0us; 16754us; 0us; 16755us; 0us; 16756us; 0us; 16757us; 0us; 16758us; 0us; 16759us; 0us; 16760us; 0us; 16761us; 0us; 16762us; 0us; 16763us; 0us; 16764us; 0us; 16765us; 0us; 16766us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 3us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 0us; 16767us; 21us; 32768us; 48us; 1035us; 60us; 136us; 72us; 627us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 630us; 0us; 16768us; 21us; 32768us; 48us; 1035us; 60us; 136us; 72us; 627us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 630us; 3us; 32768us; 10us; 436us; 19us; 624us; 223us; 424us; 0us; 16769us; 0us; 16770us; 0us; 16771us; 20us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 629us; 0us; 16772us; 0us; 16773us; 0us; 16774us; 0us; 16775us; 2us; 32768us; 113us; 640us; 223us; 638us; 2us; 16776us; 72us; 634us; 223us; 637us; 20us; 32768us; 48us; 1035us; 60us; 136us; 82us; 351us; 86us; 345us; 87us; 348us; 89us; 342us; 107us; 357us; 115us; 993us; 123us; 355us; 148us; 354us; 173us; 356us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 636us; 0us; 16777us; 0us; 16778us; 0us; 16779us; 0us; 16780us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16783us; 3us; 16789us; 26us; 651us; 166us; 650us; 167us; 656us; 0us; 16785us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 32768us; 21us; 646us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 5us; 32768us; 10us; 436us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 223us; 424us; 0us; 16787us; 0us; 16788us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 32768us; 21us; 652us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 5us; 32768us; 10us; 436us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 223us; 424us; 0us; 16791us; 0us; 16792us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16793us; 0us; 16794us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 26us; 32768us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 145us; 670us; 148us; 734us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 26us; 17041us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 145us; 670us; 148us; 734us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16799us; 26us; 32768us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 145us; 670us; 148us; 734us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 26us; 17037us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 145us; 670us; 148us; 734us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16800us; 26us; 32768us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 145us; 670us; 148us; 734us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 26us; 17053us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 145us; 670us; 148us; 734us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16801us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 886us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 675us; 2us; 17127us; 41us; 1068us; 42us; 1067us; 15us; 32768us; 87us; 745us; 89us; 765us; 107us; 751us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 217us; 4us; 218us; 3us; 223us; 674us; 0us; 16802us; 0us; 16803us; 0us; 16804us; 26us; 32768us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 145us; 670us; 148us; 734us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16805us; 22us; 16806us; 60us; 704us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 179us; 696us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 207us; 682us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 25us; 16806us; 25us; 808us; 60us; 704us; 85us; 795us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 102us; 804us; 107us; 752us; 115us; 993us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 179us; 696us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 207us; 682us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16807us; 5us; 16808us; 40us; 690us; 41us; 689us; 42us; 688us; 90us; 702us; 92us; 694us; 21us; 32768us; 60us; 704us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 179us; 696us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 5us; 16809us; 40us; 690us; 41us; 689us; 42us; 688us; 90us; 702us; 92us; 694us; 5us; 16810us; 40us; 690us; 41us; 689us; 42us; 688us; 90us; 702us; 92us; 694us; 2us; 16811us; 40us; 690us; 41us; 689us; 1us; 16812us; 40us; 690us; 5us; 16814us; 40us; 690us; 41us; 689us; 42us; 688us; 90us; 702us; 92us; 694us; 21us; 32768us; 60us; 704us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 179us; 696us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 21us; 32768us; 60us; 704us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 179us; 696us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 1us; 32768us; 185us; 938us; 0us; 16813us; 21us; 32768us; 60us; 704us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 179us; 696us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 21us; 17031us; 60us; 704us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 107us; 752us; 115us; 993us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 179us; 696us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 7us; 16828us; 10us; 436us; 48us; 714us; 86us; 719us; 107us; 716us; 115us; 993us; 216us; 981us; 223us; 424us; 0us; 16815us; 1us; 32768us; 92us; 697us; 7us; 16828us; 10us; 436us; 48us; 714us; 86us; 719us; 107us; 716us; 115us; 993us; 216us; 981us; 223us; 424us; 0us; 16816us; 3us; 32768us; 107us; 988us; 115us; 993us; 216us; 981us; 3us; 17047us; 107us; 988us; 115us; 993us; 216us; 981us; 0us; 16817us; 2us; 32768us; 107us; 617us; 216us; 616us; 0us; 16818us; 0us; 16819us; 0us; 16820us; 44us; 16879us; 10us; 436us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 430us; 3us; 32768us; 10us; 436us; 73us; 708us; 223us; 424us; 0us; 16821us; 0us; 16822us; 0us; 16823us; 0us; 16824us; 0us; 16825us; 0us; 16826us; 0us; 16827us; 0us; 16829us; 64us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 72us; 1028us; 77us; 662us; 78us; 1008us; 85us; 1012us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 700us; 98us; 1020us; 101us; 501us; 104us; 1017us; 105us; 1018us; 107us; 752us; 111us; 1011us; 115us; 993us; 118us; 1013us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 169us; 1023us; 170us; 1019us; 171us; 676us; 173us; 733us; 179us; 696us; 180us; 1025us; 183us; 668us; 185us; 1014us; 186us; 1015us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 206us; 1021us; 207us; 1009us; 208us; 665us; 209us; 1005us; 210us; 1007us; 211us; 693us; 212us; 1004us; 213us; 1003us; 214us; 1002us; 215us; 1001us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 991us; 3us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 0us; 16830us; 46us; 32768us; 10us; 436us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 111us; 729us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 169us; 728us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 431us; 3us; 32768us; 10us; 436us; 73us; 721us; 223us; 424us; 0us; 16831us; 0us; 16832us; 0us; 16833us; 0us; 16834us; 1us; 32768us; 73us; 726us; 0us; 16835us; 42us; 16837us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16839us; 0us; 16840us; 0us; 16841us; 0us; 16842us; 0us; 16843us; 0us; 16844us; 0us; 16845us; 0us; 16846us; 0us; 16847us; 44us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 168us; 744us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 742us; 3us; 32768us; 10us; 436us; 168us; 740us; 223us; 424us; 0us; 16848us; 0us; 16849us; 1us; 32768us; 168us; 743us; 0us; 16850us; 0us; 16851us; 44us; 16879us; 10us; 436us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 432us; 3us; 32768us; 10us; 436us; 80us; 747us; 223us; 424us; 0us; 16852us; 0us; 16853us; 0us; 16854us; 0us; 16855us; 51us; 32768us; 10us; 436us; 15us; 762us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 43us; 759us; 45us; 760us; 52us; 437us; 54us; 444us; 60us; 704us; 75us; 761us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 433us; 72us; 32768us; 10us; 436us; 15us; 762us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 43us; 759us; 45us; 760us; 52us; 437us; 54us; 444us; 60us; 704us; 72us; 1028us; 75us; 761us; 77us; 662us; 78us; 1008us; 85us; 1012us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 700us; 98us; 1020us; 101us; 501us; 104us; 1017us; 105us; 1018us; 107us; 752us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 111us; 1011us; 115us; 993us; 118us; 1013us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 169us; 1023us; 170us; 1019us; 171us; 676us; 173us; 733us; 179us; 696us; 180us; 1025us; 183us; 668us; 185us; 1014us; 186us; 1015us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 206us; 1021us; 207us; 1009us; 208us; 665us; 209us; 1005us; 210us; 1007us; 211us; 693us; 212us; 1004us; 213us; 1003us; 214us; 1002us; 215us; 1001us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 434us; 0us; 16856us; 9us; 32768us; 10us; 436us; 15us; 1096us; 43us; 1093us; 45us; 1094us; 75us; 1095us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 223us; 424us; 0us; 16857us; 0us; 16858us; 0us; 16859us; 0us; 16859us; 0us; 16860us; 0us; 16861us; 0us; 16862us; 0us; 16863us; 0us; 16864us; 0us; 16865us; 49us; 32768us; 10us; 436us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 68us; 789us; 74us; 1084us; 75us; 1081us; 76us; 1083us; 77us; 661us; 82us; 799us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 435us; 5us; 32768us; 10us; 436us; 74us; 1084us; 75us; 1081us; 76us; 1083us; 223us; 424us; 0us; 16870us; 0us; 16871us; 0us; 16872us; 0us; 16873us; 0us; 16874us; 0us; 16875us; 0us; 16876us; 0us; 16878us; 0us; 16880us; 0us; 16881us; 44us; 32768us; 10us; 436us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 424us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16884us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16885us; 49us; 32768us; 10us; 436us; 15us; 1102us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 43us; 1098us; 45us; 1099us; 52us; 437us; 54us; 444us; 60us; 704us; 75us; 1100us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 109us; 1101us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 424us; 0us; 16887us; 0us; 16888us; 0us; 16889us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 42us; 32768us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16901us; 16us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 886us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 2us; 17127us; 41us; 1068us; 42us; 1067us; 14us; 16900us; 87us; 745us; 89us; 765us; 107us; 751us; 123us; 735us; 148us; 734us; 162us; 738us; 173us; 733us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 217us; 4us; 218us; 3us; 0us; 16919us; 2us; 16911us; 20us; 817us; 99us; 818us; 0us; 16902us; 43us; 32768us; 21us; 403us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16919us; 2us; 16911us; 20us; 817us; 99us; 818us; 0us; 16903us; 1us; 16904us; 85us; 800us; 43us; 16905us; 21us; 403us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 52us; 437us; 54us; 444us; 60us; 704us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16919us; 2us; 16911us; 20us; 817us; 99us; 818us; 0us; 16906us; 4us; 32768us; 48us; 983us; 60us; 982us; 82us; 822us; 216us; 981us; 0us; 16919us; 2us; 16911us; 20us; 817us; 99us; 818us; 0us; 16907us; 6us; 16911us; 20us; 817us; 48us; 983us; 60us; 982us; 82us; 822us; 99us; 818us; 216us; 981us; 1us; 32768us; 19us; 810us; 0us; 16908us; 0us; 16919us; 2us; 16911us; 20us; 817us; 99us; 818us; 1us; 32768us; 19us; 814us; 0us; 16909us; 0us; 16910us; 4us; 16910us; 48us; 983us; 60us; 982us; 82us; 822us; 216us; 981us; 1us; 16912us; 99us; 820us; 1us; 16913us; 20us; 819us; 0us; 16914us; 0us; 16915us; 1us; 16916us; 92us; 985us; 0us; 16917us; 0us; 16918us; 8us; 16923us; 10us; 436us; 15us; 1102us; 43us; 1098us; 45us; 1099us; 75us; 1100us; 85us; 825us; 109us; 1101us; 223us; 424us; 50us; 16921us; 10us; 436us; 15us; 1102us; 21us; 403us; 23us; 293us; 30us; 243us; 33us; 488us; 35us; 458us; 36us; 485us; 38us; 239us; 39us; 235us; 43us; 1098us; 45us; 1099us; 52us; 437us; 54us; 444us; 60us; 704us; 75us; 1100us; 77us; 661us; 86us; 706us; 87us; 745us; 89us; 765us; 90us; 699us; 101us; 501us; 107us; 752us; 109us; 1101us; 115us; 993us; 123us; 735us; 142us; 492us; 145us; 670us; 148us; 734us; 149us; 512us; 150us; 288us; 152us; 496us; 162us; 738us; 171us; 676us; 173us; 733us; 179us; 696us; 183us; 667us; 187us; 227us; 189us; 230us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 208us; 664us; 211us; 692us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 424us; 0us; 16920us; 0us; 16922us; 0us; 16924us; 0us; 16925us; 0us; 16926us; 0us; 16927us; 0us; 16928us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 90us; 847us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16930us; 1us; 16932us; 113us; 836us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 90us; 847us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16931us; 1us; 16934us; 111us; 839us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 90us; 847us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16933us; 1us; 16936us; 111us; 842us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 90us; 847us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16935us; 6us; 16939us; 42us; 880us; 48us; 983us; 60us; 982us; 86us; 895us; 93us; 845us; 216us; 981us; 16us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 5us; 16937us; 42us; 880us; 48us; 983us; 60us; 982us; 86us; 895us; 216us; 981us; 1us; 32768us; 216us; 981us; 1us; 32768us; 93us; 849us; 16us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 5us; 16938us; 42us; 880us; 48us; 983us; 60us; 982us; 86us; 895us; 216us; 981us; 1us; 16944us; 113us; 852us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16943us; 7us; 16948us; 42us; 880us; 48us; 983us; 60us; 982us; 86us; 895us; 111us; 855us; 210us; 859us; 216us; 981us; 16us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16945us; 16us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16946us; 16us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16947us; 7us; 16951us; 42us; 880us; 48us; 983us; 60us; 982us; 86us; 895us; 111us; 862us; 210us; 864us; 216us; 981us; 16us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16949us; 16us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16950us; 6us; 16953us; 42us; 880us; 48us; 983us; 60us; 982us; 86us; 895us; 111us; 867us; 216us; 981us; 16us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16952us; 1us; 16954us; 92us; 985us; 1us; 16956us; 213us; 872us; 4us; 16956us; 40us; 936us; 92us; 933us; 185us; 938us; 213us; 872us; 1us; 32768us; 202us; 873us; 0us; 16955us; 16us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 216us; 981us; 217us; 4us; 218us; 3us; 6us; 32768us; 42us; 880us; 48us; 983us; 60us; 982us; 73us; 876us; 86us; 895us; 216us; 981us; 0us; 16957us; 5us; 32768us; 42us; 881us; 48us; 983us; 60us; 982us; 86us; 895us; 216us; 981us; 0us; 16958us; 22us; 16958us; 10us; 16973us; 20us; 16973us; 41us; 16973us; 74us; 16973us; 75us; 16973us; 76us; 16973us; 87us; 16973us; 89us; 16973us; 99us; 16973us; 107us; 16973us; 123us; 16973us; 148us; 16973us; 162us; 16973us; 173us; 16973us; 192us; 16973us; 193us; 16973us; 194us; 16973us; 200us; 16973us; 202us; 16973us; 217us; 16973us; 218us; 16973us; 223us; 16973us; 1us; 32768us; 86us; 895us; 1us; 32768us; 86us; 895us; 0us; 16959us; 22us; 16959us; 10us; 16974us; 20us; 16974us; 41us; 16974us; 74us; 16974us; 75us; 16974us; 76us; 16974us; 87us; 16974us; 89us; 16974us; 99us; 16974us; 107us; 16974us; 123us; 16974us; 148us; 16974us; 162us; 16974us; 173us; 16974us; 192us; 16974us; 193us; 16974us; 194us; 16974us; 200us; 16974us; 202us; 16974us; 217us; 16974us; 218us; 16974us; 223us; 16974us; 0us; 16960us; 22us; 16960us; 10us; 16975us; 20us; 16975us; 41us; 16975us; 74us; 16975us; 75us; 16975us; 76us; 16975us; 87us; 16975us; 89us; 16975us; 99us; 16975us; 107us; 16975us; 123us; 16975us; 148us; 16975us; 162us; 16975us; 173us; 16975us; 192us; 16975us; 193us; 16975us; 194us; 16975us; 200us; 16975us; 202us; 16975us; 217us; 16975us; 218us; 16975us; 223us; 16975us; 18us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 930us; 18us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 930us; 3us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 3us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 3us; 32768us; 48us; 983us; 60us; 982us; 216us; 981us; 3us; 32768us; 48us; 983us; 60us; 982us; 216us; 981us; 0us; 16961us; 22us; 16961us; 10us; 16976us; 20us; 16976us; 41us; 16976us; 74us; 16976us; 75us; 16976us; 76us; 16976us; 87us; 16976us; 89us; 16976us; 99us; 16976us; 107us; 16976us; 123us; 16976us; 148us; 16976us; 162us; 16976us; 173us; 16976us; 192us; 16976us; 193us; 16976us; 194us; 16976us; 200us; 16976us; 202us; 16976us; 217us; 16976us; 218us; 16976us; 223us; 16976us; 0us; 16962us; 2us; 32768us; 73us; 896us; 112us; 897us; 0us; 16963us; 2us; 32768us; 73us; 898us; 112us; 899us; 0us; 16964us; 2us; 32768us; 73us; 900us; 112us; 901us; 0us; 16965us; 1us; 32768us; 73us; 902us; 0us; 16966us; 1us; 32768us; 112us; 904us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16969us; 1us; 16967us; 112us; 908us; 4us; 32768us; 10us; 436us; 112us; 908us; 186us; 942us; 223us; 424us; 17us; 32768us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 0us; 16968us; 1us; 16970us; 213us; 912us; 23us; 16970us; 10us; 16978us; 20us; 16978us; 41us; 16978us; 74us; 16978us; 75us; 16978us; 76us; 16978us; 87us; 16978us; 89us; 16978us; 99us; 16978us; 107us; 16978us; 123us; 16978us; 148us; 16978us; 162us; 16978us; 173us; 16978us; 192us; 16978us; 193us; 16978us; 194us; 16978us; 200us; 16978us; 202us; 16978us; 213us; 913us; 217us; 16978us; 218us; 16978us; 223us; 16978us; 2us; 32768us; 77us; 916us; 202us; 914us; 2us; 32768us; 77us; 917us; 202us; 915us; 0us; 16971us; 22us; 16971us; 10us; 16979us; 20us; 16979us; 41us; 16979us; 74us; 16979us; 75us; 16979us; 76us; 16979us; 87us; 16979us; 89us; 16979us; 99us; 16979us; 107us; 16979us; 123us; 16979us; 148us; 16979us; 162us; 16979us; 173us; 16979us; 192us; 16979us; 193us; 16979us; 194us; 16979us; 200us; 16979us; 202us; 16979us; 217us; 16979us; 218us; 16979us; 223us; 16979us; 1us; 32768us; 202us; 918us; 1us; 32768us; 202us; 919us; 0us; 16972us; 22us; 16972us; 10us; 16980us; 20us; 16980us; 41us; 16980us; 74us; 16980us; 75us; 16980us; 76us; 16980us; 87us; 16980us; 89us; 16980us; 99us; 16980us; 107us; 16980us; 123us; 16980us; 148us; 16980us; 162us; 16980us; 173us; 16980us; 192us; 16980us; 193us; 16980us; 194us; 16980us; 200us; 16980us; 202us; 16980us; 217us; 16980us; 218us; 16980us; 223us; 16980us; 0us; 16977us; 0us; 16981us; 0us; 16982us; 5us; 17001us; 10us; 436us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 223us; 424us; 0us; 16983us; 0us; 16984us; 0us; 16985us; 0us; 16986us; 0us; 16987us; 0us; 16988us; 3us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 0us; 16989us; 0us; 16990us; 7us; 32768us; 10us; 436us; 15us; 1102us; 43us; 1098us; 45us; 1099us; 75us; 1100us; 109us; 1101us; 223us; 424us; 0us; 16991us; 0us; 16992us; 1us; 32768us; 185us; 938us; 0us; 16993us; 20us; 32768us; 10us; 436us; 48us; 983us; 60us; 982us; 82us; 922us; 86us; 874us; 107us; 887us; 123us; 929us; 148us; 928us; 173us; 927us; 186us; 948us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 424us; 1us; 32768us; 112us; 940us; 24us; 32768us; 10us; 436us; 15us; 1102us; 43us; 1098us; 45us; 1099us; 48us; 983us; 60us; 982us; 75us; 1100us; 82us; 922us; 86us; 874us; 107us; 887us; 109us; 1101us; 123us; 929us; 148us; 928us; 173us; 927us; 192us; 286us; 193us; 285us; 194us; 284us; 200us; 282us; 202us; 283us; 210us; 857us; 216us; 981us; 217us; 4us; 218us; 3us; 223us; 424us; 0us; 16969us; 0us; 16994us; 0us; 16995us; 0us; 16996us; 3us; 17002us; 10us; 436us; 186us; 946us; 223us; 424us; 0us; 16997us; 0us; 16998us; 0us; 16999us; 0us; 17000us; 0us; 17001us; 0us; 17002us; 7us; 32768us; 48us; 983us; 60us; 982us; 82us; 955us; 107us; 958us; 202us; 966us; 210us; 975us; 216us; 981us; 3us; 32768us; 111us; 973us; 186us; 954us; 210us; 974us; 0us; 17003us; 1us; 32768us; 186us; 956us; 0us; 17004us; 1us; 17005us; 92us; 985us; 6us; 32768us; 48us; 983us; 60us; 982us; 107us; 958us; 202us; 966us; 210us; 975us; 216us; 981us; 5us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 111us; 973us; 210us; 974us; 0us; 17006us; 1us; 17007us; 213us; 962us; 2us; 32768us; 77us; 964us; 202us; 963us; 0us; 17008us; 1us; 32768us; 202us; 965us; 0us; 17009us; 0us; 17010us; 5us; 17011us; 48us; 983us; 60us; 982us; 107us; 958us; 202us; 966us; 216us; 981us; 0us; 17012us; 0us; 17013us; 0us; 17014us; 0us; 17015us; 0us; 17016us; 6us; 32768us; 48us; 983us; 60us; 982us; 107us; 958us; 202us; 966us; 210us; 975us; 216us; 981us; 6us; 32768us; 48us; 983us; 60us; 982us; 107us; 958us; 202us; 966us; 210us; 975us; 216us; 981us; 6us; 32768us; 48us; 983us; 60us; 982us; 107us; 958us; 202us; 966us; 210us; 975us; 216us; 981us; 1us; 32768us; 216us; 981us; 0us; 17017us; 0us; 17018us; 1us; 32768us; 216us; 981us; 0us; 17019us; 0us; 17020us; 0us; 17021us; 0us; 17022us; 0us; 17023us; 8us; 32768us; 10us; 436us; 15us; 1102us; 43us; 1098us; 45us; 1099us; 75us; 1100us; 109us; 1101us; 216us; 981us; 223us; 424us; 0us; 17024us; 0us; 17025us; 27us; 32768us; 72us; 1028us; 77us; 1010us; 78us; 1008us; 85us; 1012us; 90us; 1016us; 98us; 1020us; 104us; 1017us; 105us; 1018us; 111us; 1011us; 118us; 1013us; 169us; 1023us; 170us; 1019us; 180us; 1025us; 183us; 1022us; 185us; 1014us; 186us; 1015us; 206us; 1021us; 207us; 1009us; 208us; 1006us; 209us; 1005us; 210us; 1007us; 211us; 1000us; 212us; 1004us; 213us; 1003us; 214us; 1002us; 215us; 1001us; 223us; 991us; 3us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 0us; 17026us; 3us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 0us; 17027us; 0us; 17028us; 1us; 32768us; 72us; 995us; 5us; 32768us; 82us; 997us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 216us; 1027us; 0us; 17029us; 1us; 32768us; 72us; 998us; 3us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 0us; 17030us; 0us; 17031us; 0us; 17032us; 0us; 17033us; 0us; 17034us; 0us; 17035us; 0us; 17036us; 0us; 17037us; 0us; 17038us; 0us; 17039us; 0us; 17040us; 0us; 17041us; 0us; 17042us; 0us; 17043us; 0us; 17044us; 0us; 17045us; 0us; 17046us; 0us; 17047us; 0us; 17048us; 0us; 17049us; 0us; 17050us; 0us; 17051us; 0us; 17052us; 0us; 17053us; 1us; 17054us; 169us; 1024us; 0us; 17055us; 1us; 32768us; 181us; 1026us; 0us; 17056us; 0us; 17057us; 1us; 32768us; 216us; 1027us; 0us; 17058us; 0us; 17059us; 0us; 17060us; 0us; 17061us; 1us; 17062us; 92us; 1036us; 0us; 17063us; 0us; 17064us; 5us; 32768us; 48us; 1035us; 107us; 988us; 115us; 993us; 216us; 981us; 223us; 1038us; 0us; 17065us; 0us; 17066us; 0us; 17067us; 0us; 17068us; 0us; 17069us; 0us; 17070us; 3us; 17071us; 20us; 1042us; 83us; 1041us; 99us; 1040us; 0us; 17072us; 1us; 17081us; 99us; 1047us; 1us; 17082us; 20us; 1048us; 0us; 17083us; 0us; 17084us; 0us; 17085us; 0us; 17086us; 0us; 17087us; 0us; 17092us; 0us; 17096us; 0us; 17098us; 0us; 17100us; 0us; 17104us; 0us; 17105us; 0us; 17106us; 0us; 17107us; 0us; 17108us; 0us; 17110us; 0us; 17112us; 0us; 17114us; 0us; 17115us; 0us; 17116us; 0us; 17117us; 0us; 17125us; 0us; 17126us; 5us; 32768us; 43us; 1069us; 44us; 1072us; 125us; 1073us; 131us; 1074us; 137us; 1075us; 5us; 17152us; 43us; 1069us; 44us; 1072us; 125us; 1073us; 131us; 1074us; 137us; 1075us; 0us; 17130us; 0us; 17131us; 0us; 17132us; 0us; 17133us; 0us; 17134us; 3us; 32768us; 45us; 1076us; 46us; 1079us; 175us; 1080us; 3us; 17153us; 45us; 1076us; 46us; 1079us; 175us; 1080us; 0us; 17135us; 0us; 17136us; 0us; 17137us; 3us; 32768us; 74us; 1084us; 75us; 1081us; 76us; 1083us; 0us; 17138us; 0us; 17139us; 0us; 17140us; 3us; 32768us; 108us; 1088us; 109us; 1085us; 110us; 1087us; 0us; 17141us; 0us; 17142us; 0us; 17143us; 3us; 32768us; 14us; 1092us; 15us; 1089us; 16us; 1091us; 0us; 17144us; 0us; 17145us; 0us; 17146us; 0us; 17147us; 0us; 17148us; 0us; 17149us; 0us; 17150us; 0us; 17151us; 0us; 17152us; 0us; 17153us; 0us; 17154us; 0us; 17155us; 0us; 17156us; 0us; 17157us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 17us; 18us; 19us; 20us; 21us; 25us; 27us; 41us; 42us; 44us; 45us; 48us; 49us; 51us; 52us; 53us; 68us; 69us; 81us; 87us; 89us; 90us; 91us; 107us; 108us; 109us; 110us; 111us; 126us; 127us; 139us; 140us; 153us; 154us; 164us; 165us; 166us; 167us; 169us; 170us; 187us; 190us; 199us; 201us; 202us; 204us; 206us; 207us; 208us; 209us; 210us; 222us; 223us; 227us; 242us; 243us; 248us; 252us; 267us; 268us; 272us; 277us; 280us; 295us; 296us; 298us; 299us; 301us; 302us; 304us; 305us; 308us; 309us; 310us; 314us; 316us; 317us; 321us; 323us; 324us; 329us; 331us; 332us; 333us; 334us; 335us; 336us; 337us; 341us; 343us; 344us; 346us; 348us; 349us; 350us; 352us; 354us; 358us; 360us; 361us; 363us; 365us; 369us; 371us; 372us; 373us; 374us; 379us; 385us; 386us; 387us; 388us; 389us; 394us; 395us; 398us; 403us; 404us; 410us; 430us; 432us; 434us; 478us; 479us; 500us; 502us; 504us; 548us; 549us; 551us; 595us; 596us; 600us; 606us; 608us; 609us; 611us; 616us; 617us; 618us; 624us; 628us; 629us; 634us; 635us; 636us; 641us; 647us; 648us; 649us; 657us; 662us; 663us; 681us; 682us; 684us; 686us; 730us; 731us; 734us; 740us; 742us; 743us; 749us; 751us; 752us; 754us; 755us; 756us; 776us; 778us; 779us; 781us; 782us; 783us; 785us; 787us; 788us; 791us; 797us; 798us; 799us; 803us; 804us; 806us; 807us; 811us; 812us; 817us; 821us; 822us; 826us; 827us; 845us; 847us; 848us; 866us; 868us; 869us; 870us; 900us; 904us; 905us; 907us; 911us; 912us; 915us; 916us; 917us; 935us; 936us; 937us; 944us; 961us; 962us; 965us; 968us; 969us; 970us; 971us; 973us; 975us; 993us; 994us; 996us; 997us; 998us; 1000us; 1007us; 1008us; 1010us; 1017us; 1018us; 1062us; 1063us; 1065us; 1072us; 1076us; 1077us; 1079us; 1086us; 1090us; 1091us; 1135us; 1139us; 1140us; 1141us; 1142us; 1144us; 1145us; 1152us; 1154us; 1155us; 1156us; 1157us; 1159us; 1179us; 1181us; 1185us; 1230us; 1231us; 1232us; 1233us; 1276us; 1282us; 1283us; 1284us; 1285us; 1286us; 1288us; 1289us; 1292us; 1295us; 1339us; 1340us; 1343us; 1344us; 1345us; 1348us; 1366us; 1367us; 1368us; 1369us; 1370us; 1371us; 1372us; 1373us; 1374us; 1394us; 1396us; 1441us; 1442us; 1443us; 1464us; 1467us; 1513us; 1517us; 1518us; 1519us; 1521us; 1522us; 1523us; 1525us; 1526us; 1528us; 1529us; 1531us; 1533us; 1534us; 1540us; 1546us; 1550us; 1552us; 1555us; 1558us; 1560us; 1562us; 1564us; 1565us; 1585us; 1605us; 1607us; 1608us; 1609us; 1629us; 1649us; 1669us; 1689us; 1715us; 1737us; 1738us; 1758us; 1759us; 1779us; 1780us; 1781us; 1803us; 1804us; 1824us; 1825us; 1845us; 1846us; 1850us; 1854us; 1855us; 1875us; 1877us; 1878us; 1898us; 1900us; 1901us; 1902us; 1903us; 1904us; 1905us; 1906us; 1907us; 1955us; 1961us; 1962us; 1963us; 1967us; 1968us; 1969us; 1976us; 1981us; 1984us; 1988us; 1992us; 1995us; 1998us; 2005us; 2014us; 2030us; 2038us; 2040us; 2041us; 2061us; 2063us; 2065us; 2083us; 2084us; 2104us; 2105us; 2125us; 2145us; 2165us; 2185us; 2186us; 2189us; 2190us; 2194us; 2195us; 2198us; 2218us; 2219us; 2239us; 2240us; 2283us; 2289us; 2290us; 2291us; 2292us; 2335us; 2339us; 2340us; 2364us; 2366us; 2367us; 2369us; 2387us; 2388us; 2416us; 2445us; 2474us; 2517us; 2518us; 2561us; 2562us; 2564us; 2607us; 2611us; 2612us; 2658us; 2659us; 2662us; 2665us; 2668us; 2671us; 2674us; 2676us; 2678us; 2680us; 2684us; 2688us; 2692us; 2693us; 2737us; 2740us; 2742us; 2768us; 2770us; 2771us; 2772us; 2816us; 2819us; 2821us; 2847us; 2849us; 2850us; 2851us; 2894us; 2918us; 2920us; 2963us; 2969us; 2970us; 2971us; 3015us; 3019us; 3021us; 3022us; 3023us; 3024us; 3025us; 3027us; 3070us; 3071us; 3073us; 3117us; 3118us; 3119us; 3165us; 3166us; 3212us; 3213us; 3214us; 3215us; 3260us; 3261us; 3306us; 3307us; 3308us; 3309us; 3310us; 3354us; 3358us; 3359us; 3403us; 3407us; 3408us; 3409us; 3452us; 3457us; 3458us; 3459us; 3504us; 3532us; 3533us; 3534us; 3535us; 3580us; 3608us; 3653us; 3658us; 3659us; 3660us; 3663us; 3664us; 3665us; 3666us; 3667us; 3694us; 3705us; 3756us; 3766us; 3767us; 3768us; 3769us; 3770us; 3771us; 3776us; 3822us; 3827us; 3828us; 3829us; 3830us; 3831us; 3832us; 3876us; 3879us; 3880us; 3881us; 3882us; 3883us; 3885us; 3886us; 3910us; 3929us; 3948us; 3957us; 3976us; 3993us; 4010us; 4019us; 4028us; 4037us; 4046us; 4055us; 4064us; 4073us; 4075us; 4083us; 4088us; 4093us; 4095us; 4097us; 4099us; 4123us; 4147us; 4171us; 4199us; 4221us; 4243us; 4267us; 4291us; 4316us; 4341us; 4365us; 4391us; 4415us; 4433us; 4434us; 4477us; 4479us; 4523us; 4567us; 4611us; 4655us; 4699us; 4743us; 4787us; 4831us; 4875us; 4919us; 4963us; 5007us; 5051us; 5095us; 5139us; 5183us; 5227us; 5271us; 5315us; 5359us; 5360us; 5361us; 5362us; 5363us; 5364us; 5365us; 5366us; 5367us; 5368us; 5369us; 5370us; 5371us; 5372us; 5373us; 5374us; 5375us; 5376us; 5377us; 5378us; 5379us; 5380us; 5381us; 5424us; 5428us; 5429us; 5451us; 5452us; 5474us; 5478us; 5479us; 5480us; 5481us; 5502us; 5503us; 5504us; 5505us; 5506us; 5509us; 5512us; 5533us; 5534us; 5535us; 5536us; 5537us; 5580us; 5623us; 5624us; 5628us; 5629us; 5672us; 5674us; 5717us; 5723us; 5724us; 5725us; 5768us; 5770us; 5813us; 5819us; 5820us; 5821us; 5864us; 5865us; 5866us; 5909us; 5952us; 5979us; 6006us; 6007us; 6034us; 6061us; 6062us; 6089us; 6116us; 6117us; 6135us; 6138us; 6154us; 6155us; 6156us; 6157us; 6184us; 6185us; 6208us; 6234us; 6235us; 6241us; 6263us; 6269us; 6275us; 6278us; 6280us; 6286us; 6308us; 6330us; 6332us; 6333us; 6355us; 6377us; 6385us; 6386us; 6388us; 6396us; 6397us; 6401us; 6405us; 6406us; 6409us; 6410us; 6411us; 6412us; 6457us; 6461us; 6462us; 6463us; 6464us; 6465us; 6466us; 6467us; 6468us; 6469us; 6534us; 6538us; 6539us; 6586us; 6590us; 6591us; 6592us; 6593us; 6594us; 6596us; 6597us; 6640us; 6683us; 6684us; 6685us; 6686us; 6687us; 6688us; 6689us; 6690us; 6691us; 6692us; 6737us; 6741us; 6742us; 6743us; 6745us; 6746us; 6747us; 6792us; 6796us; 6797us; 6798us; 6799us; 6800us; 6852us; 6925us; 6926us; 6936us; 6937us; 6938us; 6939us; 6940us; 6941us; 6942us; 6943us; 6944us; 6945us; 6946us; 6996us; 7002us; 7003us; 7004us; 7005us; 7006us; 7007us; 7008us; 7009us; 7010us; 7011us; 7012us; 7057us; 7100us; 7101us; 7144us; 7145us; 7195us; 7196us; 7197us; 7198us; 7241us; 7284us; 7285us; 7302us; 7305us; 7320us; 7321us; 7324us; 7325us; 7369us; 7370us; 7373us; 7374us; 7376us; 7420us; 7421us; 7424us; 7425us; 7430us; 7431us; 7434us; 7435us; 7442us; 7444us; 7445us; 7446us; 7449us; 7451us; 7452us; 7453us; 7458us; 7460us; 7462us; 7463us; 7464us; 7466us; 7467us; 7468us; 7477us; 7528us; 7529us; 7530us; 7531us; 7532us; 7533us; 7534us; 7535us; 7553us; 7554us; 7556us; 7574us; 7575us; 7577us; 7595us; 7596us; 7598us; 7616us; 7617us; 7624us; 7641us; 7647us; 7649us; 7651us; 7668us; 7674us; 7676us; 7694us; 7695us; 7703us; 7720us; 7721us; 7738us; 7739us; 7756us; 7757us; 7765us; 7782us; 7783us; 7800us; 7801us; 7808us; 7825us; 7826us; 7828us; 7830us; 7835us; 7837us; 7838us; 7855us; 7862us; 7863us; 7869us; 7870us; 7893us; 7895us; 7897us; 7898us; 7921us; 7922us; 7945us; 7964us; 7983us; 7987us; 7991us; 7995us; 7999us; 8000us; 8023us; 8024us; 8027us; 8028us; 8031us; 8032us; 8035us; 8036us; 8038us; 8039us; 8041us; 8059us; 8060us; 8062us; 8067us; 8085us; 8086us; 8088us; 8112us; 8115us; 8118us; 8119us; 8142us; 8144us; 8146us; 8147us; 8170us; 8171us; 8172us; 8173us; 8179us; 8180us; 8181us; 8182us; 8183us; 8184us; 8185us; 8189us; 8190us; 8191us; 8199us; 8200us; 8201us; 8203us; 8204us; 8225us; 8227us; 8252us; 8253us; 8254us; 8255us; 8256us; 8260us; 8261us; 8262us; 8263us; 8264us; 8265us; 8266us; 8274us; 8278us; 8279us; 8281us; 8282us; 8284us; 8291us; 8297us; 8298us; 8300us; 8303us; 8304us; 8306us; 8307us; 8308us; 8314us; 8315us; 8316us; 8317us; 8318us; 8319us; 8326us; 8333us; 8340us; 8342us; 8343us; 8344us; 8346us; 8347us; 8348us; 8349us; 8350us; 8351us; 8360us; 8361us; 8362us; 8390us; 8394us; 8395us; 8399us; 8400us; 8401us; 8403us; 8409us; 8410us; 8412us; 8416us; 8417us; 8418us; 8419us; 8420us; 8421us; 8422us; 8423us; 8424us; 8425us; 8426us; 8427us; 8428us; 8429us; 8430us; 8431us; 8432us; 8433us; 8434us; 8435us; 8436us; 8437us; 8438us; 8439us; 8440us; 8442us; 8443us; 8445us; 8446us; 8447us; 8449us; 8450us; 8451us; 8452us; 8453us; 8455us; 8456us; 8457us; 8463us; 8464us; 8465us; 8466us; 8467us; 8468us; 8469us; 8473us; 8474us; 8476us; 8478us; 8479us; 8480us; 8481us; 8482us; 8483us; 8484us; 8485us; 8486us; 8487us; 8488us; 8489us; 8490us; 8491us; 8492us; 8493us; 8494us; 8495us; 8496us; 8497us; 8498us; 8499us; 8500us; 8506us; 8512us; 8513us; 8514us; 8515us; 8516us; 8517us; 8521us; 8525us; 8526us; 8527us; 8528us; 8532us; 8533us; 8534us; 8535us; 8539us; 8540us; 8541us; 8542us; 8546us; 8547us; 8548us; 8549us; 8550us; 8551us; 8552us; 8553us; 8554us; 8555us; 8556us; 8557us; 8558us; 8559us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 4us; 4us; 1us; 2us; 4us; 3us; 3us; 1us; 1us; 0us; 1us; 2us; 3us; 2us; 1us; 2us; 3us; 1us; 1us; 0us; 1us; 2us; 5us; 4us; 4us; 2us; 1us; 3us; 3us; 4us; 6us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 0us; 3us; 0us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 2us; 0us; 2us; 3us; 3us; 1us; 3us; 1us; 3us; 0us; 3us; 6us; 6us; 1us; 1us; 3us; 3us; 1us; 1us; 2us; 0us; 3us; 6us; 5us; 4us; 1us; 2us; 4us; 0us; 2us; 3us; 1us; 0us; 3us; 0us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 1us; 1us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 4us; 4us; 4us; 4us; 2us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 2us; 1us; 2us; 4us; 4us; 1us; 3us; 4us; 2us; 2us; 3us; 1us; 3us; 1us; 3us; 2us; 1us; 4us; 2us; 2us; 3us; 3us; 2us; 4us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 0us; 1us; 1us; 6us; 6us; 5us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 5us; 5us; 5us; 4us; 4us; 3us; 1us; 3us; 1us; 1us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 4us; 4us; 1us; 0us; 2us; 3us; 3us; 1us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 3us; 3us; 4us; 4us; 3us; 3us; 4us; 4us; 2us; 4us; 4us; 3us; 4us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 2us; 5us; 5us; 5us; 3us; 2us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 2us; 4us; 3us; 4us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 3us; 2us; 2us; 0us; 2us; 1us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 4us; 4us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 1us; 1us; 0us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 0us; 1us; 1us; 3us; 5us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 1us; 3us; 5us; 2us; 0us; 0us; 1us; 6us; 5us; 1us; 2us; 5us; 5us; 4us; 6us; 1us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 4us; 1us; 3us; 4us; 1us; 3us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 3us; 1us; 1us; 3us; 1us; 3us; 2us; 3us; 2us; 4us; 1us; 2us; 3us; 4us; 5us; 4us; 3us; 0us; 1us; 3us; 4us; 2us; 3us; 2us; 4us; 1us; 1us; 3us; 4us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 3us; 2us; 3us; 1us; 2us; 6us; 6us; 4us; 3us; 3us; 2us; 2us; 1us; 1us; 3us; 3us; 1us; 3us; 1us; 3us; 4us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 2us; 2us; 0us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 8us; 8us; 8us; 8us; 8us; 8us; 9us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 19us; 20us; 21us; 22us; 22us; 22us; 23us; 23us; 23us; 24us; 24us; 24us; 25us; 25us; 25us; 25us; 26us; 26us; 27us; 28us; 28us; 29us; 30us; 30us; 31us; 32us; 33us; 33us; 33us; 34us; 34us; 34us; 35us; 36us; 37us; 38us; 39us; 39us; 40us; 41us; 41us; 42us; 42us; 43us; 44us; 44us; 45us; 45us; 46us; 47us; 47us; 48us; 48us; 49us; 49us; 50us; 51us; 52us; 52us; 53us; 53us; 54us; 55us; 56us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 58us; 58us; 58us; 59us; 59us; 60us; 61us; 61us; 62us; 62us; 62us; 63us; 63us; 64us; 64us; 64us; 65us; 65us; 65us; 66us; 66us; 67us; 68us; 68us; 68us; 69us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 78us; 79us; 80us; 80us; 80us; 80us; 81us; 81us; 82us; 83us; 83us; 84us; 84us; 85us; 85us; 85us; 86us; 86us; 86us; 87us; 88us; 88us; 89us; 90us; 90us; 91us; 91us; 92us; 92us; 92us; 92us; 92us; 92us; 93us; 93us; 93us; 93us; 93us; 93us; 93us; 93us; 94us; 94us; 95us; 96us; 97us; 97us; 97us; 97us; 97us; 97us; 98us; 98us; 99us; 99us; 100us; 100us; 100us; 100us; 101us; 102us; 102us; 102us; 102us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 103us; 104us; 104us; 105us; 105us; 105us; 105us; 105us; 105us; 105us; 106us; 106us; 107us; 107us; 108us; 109us; 109us; 110us; 111us; 111us; 111us; 112us; 113us; 113us; 113us; 114us; 114us; 115us; 115us; 116us; 116us; 117us; 117us; 117us; 117us; 117us; 117us; 118us; 118us; 119us; 119us; 119us; 119us; 120us; 120us; 120us; 120us; 121us; 121us; 121us; 122us; 122us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 123us; 124us; 124us; 125us; 125us; 125us; 126us; 126us; 126us; 126us; 127us; 128us; 128us; 128us; 128us; 128us; 129us; 129us; 130us; 131us; 132us; 133us; 133us; 133us; 134us; 134us; 134us; 134us; 134us; 134us; 135us; 135us; 136us; 136us; 137us; 137us; 137us; 137us; 137us; 137us; 137us; 137us; 138us; 138us; 139us; 139us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 140us; 141us; 141us; 141us; 141us; 141us; 141us; 141us; 141us; 141us; 141us; 142us; 142us; 142us; 142us; 143us; 143us; 143us; 143us; 143us; 143us; 143us; 143us; 144us; 144us; 144us; 144us; 145us; 145us; 145us; 145us; 146us; 146us; 146us; 146us; 146us; 146us; 146us; 146us; 146us; 147us; 148us; 148us; 149us; 149us; 150us; 150us; 150us; 150us; 150us; 151us; 151us; 152us; 153us; 153us; 154us; 154us; 155us; 155us; 155us; 156us; 157us; 157us; 157us; 157us; 158us; 158us; 158us; 158us; 159us; 159us; 159us; 160us; 161us; 161us; 162us; 162us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 164us; 164us; 165us; 165us; 165us; 165us; 166us; 166us; 167us; 167us; 168us; 168us; 168us; 168us; 168us; 169us; 169us; 170us; 171us; 172us; 172us; 173us; 173us; 174us; 174us; 175us; 175us; 176us; 176us; 176us; 176us; 176us; 176us; 177us; 177us; 178us; 178us; 178us; 178us; 179us; 179us; 179us; 180us; 180us; 181us; 182us; 182us; 183us; 183us; 183us; 183us; 183us; 183us; 184us; 184us; 184us; 184us; 185us; 186us; 186us; 187us; 187us; 187us; 188us; 188us; 188us; 188us; 188us; 189us; 189us; 189us; 190us; 190us; 190us; 190us; 190us; 190us; 190us; 190us; 190us; 190us; 190us; 191us; 191us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 193us; 194us; 195us; 195us; 196us; 196us; 197us; 197us; 197us; 197us; 198us; 198us; 199us; 199us; 199us; 199us; 200us; 200us; 201us; 202us; 203us; 203us; 203us; 203us; 203us; 204us; 204us; 204us; 204us; 204us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 205us; 206us; 207us; 207us; 208us; 208us; 209us; 209us; 209us; 209us; 209us; 210us; 211us; 211us; 211us; 212us; 212us; 213us; 213us; 214us; 214us; 215us; 215us; 216us; 216us; 217us; 217us; 217us; 217us; 218us; 218us; 218us; 219us; 219us; 219us; 219us; 220us; 220us; 221us; 221us; 222us; 222us; 223us; 223us; 224us; 224us; 225us; 225us; 226us; 226us; 226us; 226us; 226us; 226us; 227us; 227us; 228us; 228us; 229us; 229us; 230us; 230us; 231us; 231us; 232us; 232us; 233us; 233us; 234us; 235us; 235us; 235us; 236us; 236us; 237us; 237us; 237us; 237us; 237us; 238us; 238us; 238us; 239us; 239us; 239us; 240us; 240us; 240us; 241us; 241us; 241us; 242us; 242us; 242us; 242us; 242us; 243us; 243us; 243us; 243us; 243us; 243us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 16386us; 16387us; 65535us; 65535us; 65535us; 16389us; 65535us; 16390us; 65535us; 16391us; 65535us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 16396us; 16397us; 65535us; 16398us; 16399us; 16400us; 16402us; 65535us; 16403us; 65535us; 16404us; 65535us; 16405us; 65535us; 16408us; 16409us; 16410us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 16415us; 16416us; 16417us; 16418us; 65535us; 16419us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 65535us; 65535us; 16422us; 65535us; 16423us; 65535us; 16424us; 65535us; 16425us; 65535us; 16426us; 16427us; 65535us; 65535us; 16428us; 65535us; 65535us; 16429us; 65535us; 65535us; 16431us; 16432us; 16449us; 16450us; 16451us; 16461us; 65535us; 65535us; 16462us; 65535us; 65535us; 16464us; 65535us; 65535us; 65535us; 65535us; 65535us; 16465us; 65535us; 65535us; 65535us; 65535us; 16466us; 16467us; 16468us; 65535us; 65535us; 16469us; 16470us; 16471us; 16472us; 65535us; 16473us; 65535us; 65535us; 16475us; 65535us; 65535us; 65535us; 65535us; 65535us; 16476us; 65535us; 65535us; 65535us; 65535us; 16477us; 65535us; 65535us; 16478us; 65535us; 65535us; 65535us; 16481us; 65535us; 65535us; 16484us; 16485us; 65535us; 65535us; 16487us; 65535us; 16498us; 16499us; 65535us; 65535us; 16500us; 16501us; 65535us; 65535us; 16503us; 65535us; 16504us; 65535us; 65535us; 65535us; 16505us; 65535us; 65535us; 65535us; 16506us; 65535us; 65535us; 16507us; 65535us; 16508us; 65535us; 65535us; 65535us; 16509us; 65535us; 16510us; 16511us; 65535us; 65535us; 16513us; 65535us; 65535us; 16514us; 16515us; 65535us; 16516us; 65535us; 16522us; 65535us; 16523us; 65535us; 65535us; 16525us; 65535us; 16527us; 65535us; 65535us; 16528us; 65535us; 65535us; 16529us; 16530us; 65535us; 65535us; 16531us; 65535us; 65535us; 16532us; 65535us; 16533us; 16534us; 65535us; 16535us; 16536us; 65535us; 65535us; 16537us; 65535us; 65535us; 16539us; 16540us; 16541us; 65535us; 65535us; 65535us; 16542us; 65535us; 16543us; 16544us; 65535us; 65535us; 16545us; 65535us; 65535us; 16546us; 65535us; 16547us; 65535us; 65535us; 65535us; 16548us; 65535us; 65535us; 65535us; 16549us; 65535us; 65535us; 16550us; 16555us; 16556us; 65535us; 16557us; 65535us; 65535us; 16558us; 16560us; 16561us; 65535us; 65535us; 65535us; 65535us; 65535us; 16562us; 16563us; 16564us; 65535us; 65535us; 16565us; 16566us; 16567us; 65535us; 65535us; 16569us; 65535us; 65535us; 65535us; 16571us; 65535us; 16572us; 16573us; 65535us; 65535us; 16574us; 16575us; 16576us; 16577us; 16578us; 16579us; 16580us; 16581us; 65535us; 65535us; 65535us; 16582us; 16583us; 65535us; 65535us; 65535us; 65535us; 16584us; 16585us; 65535us; 16586us; 16587us; 65535us; 16588us; 65535us; 16589us; 65535us; 65535us; 16591us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16594us; 65535us; 65535us; 65535us; 65535us; 16599us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16604us; 65535us; 16605us; 65535us; 16606us; 16607us; 65535us; 16609us; 65535us; 16610us; 65535us; 16611us; 65535us; 65535us; 16613us; 65535us; 65535us; 16614us; 65535us; 65535us; 16615us; 16616us; 16617us; 16618us; 16619us; 16620us; 16621us; 65535us; 65535us; 16622us; 16623us; 65535us; 65535us; 16625us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16628us; 65535us; 65535us; 65535us; 65535us; 16632us; 65535us; 16634us; 65535us; 65535us; 65535us; 65535us; 16639us; 65535us; 16640us; 65535us; 16641us; 65535us; 65535us; 16644us; 65535us; 16645us; 65535us; 65535us; 16647us; 16648us; 16649us; 65535us; 65535us; 16650us; 65535us; 65535us; 16652us; 65535us; 65535us; 16654us; 65535us; 65535us; 65535us; 65535us; 16656us; 65535us; 16659us; 65535us; 65535us; 65535us; 16660us; 65535us; 16662us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16663us; 65535us; 65535us; 65535us; 65535us; 65535us; 16666us; 16667us; 65535us; 65535us; 65535us; 65535us; 65535us; 16670us; 16671us; 65535us; 65535us; 65535us; 65535us; 65535us; 16673us; 16674us; 65535us; 65535us; 65535us; 16676us; 16677us; 16678us; 16679us; 65535us; 65535us; 16680us; 65535us; 65535us; 16681us; 16682us; 65535us; 16683us; 65535us; 16684us; 16685us; 16686us; 65535us; 16687us; 65535us; 16688us; 16689us; 16690us; 16691us; 65535us; 65535us; 16692us; 65535us; 65535us; 16693us; 16694us; 65535us; 65535us; 16695us; 16696us; 65535us; 65535us; 65535us; 16699us; 16700us; 65535us; 65535us; 65535us; 65535us; 16701us; 16702us; 65535us; 16703us; 16704us; 16705us; 16706us; 65535us; 65535us; 65535us; 65535us; 16707us; 16708us; 16709us; 16710us; 16711us; 65535us; 65535us; 65535us; 16712us; 16713us; 16714us; 16715us; 16716us; 65535us; 65535us; 16717us; 16718us; 16719us; 65535us; 65535us; 16721us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16722us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16745us; 16746us; 16747us; 16748us; 16749us; 16750us; 16751us; 16752us; 16753us; 16754us; 16755us; 16756us; 16757us; 16758us; 16759us; 16760us; 16761us; 16762us; 16763us; 16764us; 16765us; 16766us; 65535us; 65535us; 16767us; 65535us; 16768us; 65535us; 65535us; 16769us; 16770us; 16771us; 65535us; 16772us; 16773us; 16774us; 16775us; 65535us; 65535us; 65535us; 16777us; 16778us; 16779us; 16780us; 65535us; 65535us; 16783us; 65535us; 16785us; 65535us; 65535us; 65535us; 65535us; 16787us; 16788us; 65535us; 65535us; 65535us; 65535us; 16791us; 16792us; 65535us; 16793us; 16794us; 65535us; 65535us; 65535us; 65535us; 16799us; 65535us; 65535us; 16800us; 65535us; 65535us; 16801us; 65535us; 65535us; 65535us; 16802us; 16803us; 16804us; 65535us; 16805us; 65535us; 65535us; 16807us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16813us; 65535us; 65535us; 65535us; 16815us; 65535us; 65535us; 16816us; 65535us; 65535us; 16817us; 65535us; 16818us; 16819us; 16820us; 65535us; 65535us; 16821us; 16822us; 16823us; 16824us; 16825us; 16826us; 16827us; 16829us; 65535us; 65535us; 16830us; 65535us; 65535us; 16831us; 16832us; 16833us; 16834us; 65535us; 16835us; 65535us; 65535us; 16839us; 16840us; 16841us; 16842us; 16843us; 16844us; 16845us; 16846us; 16847us; 65535us; 65535us; 16848us; 16849us; 65535us; 16850us; 16851us; 65535us; 65535us; 16852us; 16853us; 16854us; 16855us; 65535us; 65535us; 16856us; 65535us; 16857us; 16858us; 16859us; 65535us; 16860us; 16861us; 16862us; 16863us; 16864us; 16865us; 65535us; 65535us; 16870us; 16871us; 16872us; 16873us; 16874us; 16875us; 16876us; 16878us; 16880us; 16881us; 65535us; 65535us; 16884us; 65535us; 16885us; 65535us; 16887us; 16888us; 16889us; 65535us; 65535us; 16901us; 65535us; 65535us; 65535us; 65535us; 65535us; 16902us; 65535us; 65535us; 65535us; 16903us; 65535us; 65535us; 65535us; 65535us; 16906us; 65535us; 65535us; 65535us; 16907us; 65535us; 65535us; 16908us; 65535us; 65535us; 65535us; 16909us; 16910us; 65535us; 65535us; 65535us; 16914us; 16915us; 65535us; 16917us; 16918us; 65535us; 65535us; 16920us; 16922us; 16924us; 16925us; 16926us; 16927us; 16928us; 65535us; 16930us; 65535us; 65535us; 16931us; 65535us; 65535us; 16933us; 65535us; 65535us; 16935us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16943us; 65535us; 65535us; 16945us; 65535us; 16946us; 65535us; 16947us; 65535us; 65535us; 16949us; 65535us; 16950us; 65535us; 65535us; 16952us; 65535us; 65535us; 65535us; 65535us; 16955us; 65535us; 65535us; 16957us; 65535us; 16958us; 65535us; 65535us; 65535us; 16959us; 65535us; 16960us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16961us; 65535us; 16962us; 65535us; 16963us; 65535us; 16964us; 65535us; 16965us; 65535us; 16966us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16968us; 65535us; 65535us; 65535us; 65535us; 16971us; 65535us; 65535us; 65535us; 16972us; 65535us; 16977us; 16981us; 16982us; 65535us; 16983us; 16984us; 16985us; 16986us; 16987us; 16988us; 65535us; 16989us; 16990us; 65535us; 16991us; 16992us; 65535us; 16993us; 65535us; 65535us; 65535us; 65535us; 16994us; 16995us; 16996us; 65535us; 16997us; 16998us; 16999us; 17000us; 17001us; 17002us; 65535us; 65535us; 17003us; 65535us; 17004us; 65535us; 65535us; 65535us; 17006us; 65535us; 65535us; 17008us; 65535us; 17009us; 17010us; 65535us; 17012us; 17013us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17017us; 17018us; 65535us; 17019us; 17020us; 17021us; 17022us; 17023us; 65535us; 17024us; 17025us; 65535us; 65535us; 17026us; 65535us; 17027us; 17028us; 65535us; 65535us; 17029us; 65535us; 65535us; 17030us; 17031us; 17032us; 17033us; 17034us; 17035us; 17036us; 17037us; 17038us; 17039us; 17040us; 17041us; 17042us; 17043us; 17044us; 17045us; 17046us; 17047us; 17048us; 17049us; 17050us; 17051us; 17052us; 17053us; 65535us; 17055us; 65535us; 17056us; 17057us; 65535us; 17058us; 17059us; 17060us; 17061us; 65535us; 17063us; 17064us; 65535us; 17065us; 17066us; 17067us; 17068us; 17069us; 17070us; 65535us; 17072us; 65535us; 65535us; 17083us; 17084us; 17085us; 17086us; 17087us; 17092us; 17096us; 17098us; 17100us; 17104us; 17105us; 17106us; 17107us; 17108us; 17110us; 17112us; 17114us; 17115us; 17116us; 17117us; 17125us; 17126us; 65535us; 65535us; 17130us; 17131us; 17132us; 17133us; 17134us; 65535us; 65535us; 17135us; 17136us; 17137us; 65535us; 17138us; 17139us; 17140us; 65535us; 17141us; 17142us; 17143us; 65535us; 17144us; 17145us; 17146us; 17147us; 17148us; 17149us; 17150us; 17151us; 17152us; 17153us; 17154us; 17155us; 17156us; 17157us; |]
let _fsyacc_reductions ()  =    [| 
# 2560 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Program)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 2569 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'casanovaModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 441 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                   _1 
                   )
# 441 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Program));
# 2580 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 445 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  _1 
                   )
# 445 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'stringOrKeywordString));
# 2591 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 446 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          _1 
                   )
# 446 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'stringOrKeywordString));
# 2602 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 451 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               _2 
                   )
# 451 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'cnvModuleIntro));
# 2614 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 455 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m = rhs parseState 1
                           {ModuleStatement = _1; WorldOrEntityDecls = []; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 455 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2627 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 459 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m = rhs parseState 1
                           {ModuleStatement = LongIdentWithDots([Ident("internal_module", Position.Empty)], []); 
                            WorldOrEntityDecls = _1; 
                            Range = m;
                            ReferencedLibraries = Seq.empty} 
                   )
# 459 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2643 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 467 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m2 = rhs parseState 1
                           let m = (m2, _2) ||> unionRangeWithListBy (fun modu -> modu.Range) 
                           {ModuleStatement = _1; WorldOrEntityDecls = _2; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 467 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2658 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 472 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m2 = rhs parseState 1
                           let m = (m2, _2) ||> unionRangeWithListBy (fun modu -> modu.Range) 
                           {ModuleStatement = _1; WorldOrEntityDecls = _2; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 472 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2673 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvModuleIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 477 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m2 = rhs parseState 1
                           let m = (m2, _2) ||> unionRangeWithListBy (fun modu -> modu.Range) 
                           {ModuleStatement = _1; WorldOrEntityDecls = _2; Range = m; ReferencedLibraries = Seq.empty} 
                   )
# 477 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2688 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 482 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           errorR(Error(FSComp.SR.buildMultiFileRequiresNamespaceOrModule(),rhs parseState 1))
                           Program.Empty() 
                   )
# 482 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2700 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 488 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            errorR(Error(FSComp.SR.buildMultiFileRequiresNamespaceOrModule(),rhs parseState 1))
                            Program.Empty() 
                   )
# 488 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'casanovaModuleImpl));
# 2712 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 494 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 494 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynModuleDecl list));
# 2725 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 496 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              _2 
                            
                   )
# 496 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynModuleDecl list));
# 2740 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 501 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                              [] 
                            
                   )
# 501 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynModuleDecl list));
# 2753 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 505 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 505 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynModuleDecl list));
# 2764 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 509 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 509 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 2775 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 511 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 511 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 2785 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 516 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 516 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefnsOrExpr));
# 2796 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 520 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 @ _2 
                   )
# 520 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2808 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 522 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _1 @ _3 
                   )
# 522 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2821 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 524 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 524 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2832 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 527 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 527 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2843 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 529 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 529 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2855 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 531 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 
                   )
# 531 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefns));
# 2867 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 535 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1  
                   )
# 535 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefnOrDirective));
# 2878 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 537 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                     _1 
                   )
# 537 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_attributes));
# 2889 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 538 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                     [] 
                   )
# 538 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_attributes));
# 2899 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 541 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 541 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributes));
# 2910 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 543 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 @ _2 
                   )
# 543 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributes));
# 2922 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 546 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                                     _2 
                   )
# 546 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeList));
# 2935 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 547 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                            [] 
                   )
# 547 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeList));
# 2946 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 549 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             _2 
                   )
# 549 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeList));
# 2960 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 552 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             [] 
                   )
# 552 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeList));
# 2972 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 557 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [_1] 
                   )
# 557 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeListElements));
# 2983 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 559 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 @ [_3] 
                   )
# 559 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeListElements));
# 2996 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 563 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let arg = match _3 with None -> mkSynUnit _1.Range | Some e -> e 
                            ({ TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=_1.Range } : SynAttribute) 
                   )
# 563 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attribute));
# 3010 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 566 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let arg = match _4 with None -> mkSynUnit _2.Range | Some e -> e 
                            ({ TypeName=_2; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_2.Range } : SynAttribute) 
                   )
# 566 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attribute));
# 3025 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 569 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let arg = match _6 with None -> mkSynUnit _3.Range | Some e -> e 
                            ({ TypeName=_3; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_3.Range } : SynAttribute) 
                   )
# 569 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attribute));
# 3041 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                Some(ident("module",(rhs parseState 1))) 
                   )
# 573 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeTarget));
# 3052 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 574 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              Some(ident("type",(rhs parseState 1))) 
                   )
# 574 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeTarget));
# 3063 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 575 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                       Some(_1) 
                   )
# 575 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attributeTarget));
# 3074 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 582 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let hwlb,m = _2
                             mkEntryPoint (m,hwlb,_1,m)  
                   )
# 582 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3087 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 586 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           printfn "Hello!"
                           let mWhole = rhs parseState 3 
                           mkEntryPoint (mWhole,_2,_1,mWhole) 
                   )
# 586 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3101 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 590 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let types = (_2, true) :: _3
                             [ SynModuleDecl.Types(types, (rhs parseState 1, (types |> List.map(fun e -> fst e))) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
# 590 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3114 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 593 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let types = (_2, _1) :: _3
                             [ SynModuleDecl.Types(types, (rhs parseState 1, (types |> List.map(fun e -> fst e))) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
# 593 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3128 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 599 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [SynModuleDecl.Open(_2, _2.Range)] 
                   )
# 599 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3139 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'importLibrary)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 602 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let elem, elem_range = _1
                             [SynModuleDecl.OpenLibrary(elem, elem_range)] 
                   )
# 602 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3151 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'importDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 606 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let elem, elem_range = _1
                             [SynModuleDecl.Import(elem, elem_range)] 
                   )
# 606 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moduleDefn));
# 3163 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 613 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _2.Lid 
                   )
# 613 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleAbbrevBlock));
# 3175 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 615 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _1.Lid  
                   )
# 615 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleAbbrevBlock));
# 3186 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 619 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                              Choice2Of2 _2 
                            
                   )
# 619 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3200 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 623 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              Choice2Of2 _2 
                            
                   )
# 623 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3214 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 627 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              Choice2Of2 _2 
                            
                   )
# 627 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3229 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 632 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                              Choice2Of2 [] 
                            
                   )
# 632 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3242 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 636 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                              Choice2Of2 _1 
                             
                   )
# 636 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3255 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 640 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                              Choice1Of2 _1.Lid
                             
                   )
# 640 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'namedModuleDefnBlock));
# 3268 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 646 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _2 
                   )
# 646 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'wrappedNamedModuleDefn));
# 3280 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 648 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct());  
                              _2 
                   )
# 648 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'wrappedNamedModuleDefn));
# 3294 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 651 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              [] 
                   )
# 651 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'wrappedNamedModuleDefn));
# 3305 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 655 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              None 
                   )
# 655 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_signature));
# 3315 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 659 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 659 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynMemberDefns));
# 3327 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 662 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           None 
                   )
# 662 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_literalValue));
# 3337 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 663 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           Some(_2) 
                   )
# 663 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_literalValue));
# 3348 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 664 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                 Some(_3) 
                   )
# 664 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_literalValue));
# 3360 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 667 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           (false,NonVirtualMemberFlags) 
                   )
# 667 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberFlags));
# 3370 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 668 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  (false,NonVirtualMemberFlags) 
                   )
# 668 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberFlags));
# 3380 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 669 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        (false,NonVirtualMemberFlags) 
                   )
# 669 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberFlags));
# 3390 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 672 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                       _1 
                   )
# 672 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberSpecFlags));
# 3401 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 673 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 673 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberSpecFlags));
# 3411 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 674 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 674 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberSpecFlags));
# 3421 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 678 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           None, MemberKind.Member 
                   )
# 678 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3431 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 680 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 680 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3442 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 682 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 682 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3453 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 684 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith());
                            Some (rhs2 parseState 1 2), _2 
                   )
# 684 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSet));
# 3465 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 690 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then MemberKind.PropertyGet 
                            else if id.idText = "set" then MemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
# 690 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSetElements));
# 3479 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 695 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired());
                           MemberKind.PropertyGetSet 
                   )
# 695 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classMemberSpfnGetSetElements));
# 3495 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 703 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 703 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeNameInfo));
# 3506 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 707 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (_2, false) :: _3 
                   )
# 707 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnList));
# 3518 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 709 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 709 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnList));
# 3528 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 713 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let nameRange = rhs parseState 1
                            let (tcDefRepr:SynTypeDefnRepr),members, inherits = _3 nameRange
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)    
                            TypeDefn(_1, tcDefRepr, members, inherits, mWhole) 
                   )
# 713 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefn));
# 3544 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvTyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 729 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m = unionRanges (rhs parseState 1) (match _6 with [] -> (match _4 with [] -> (rhs parseState 3) | _ -> (rhs parseState 4)) | _ -> (rhs parseState 6))
                            let fields,rules = _2
                            (fun nameRange -> fields nameRange (checkForMultipleAugmentations m (rules @ _4) _6)) 
                   )
# 729 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnRhsBlock));
# 3561 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 735 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m = unionRanges (rhs parseState 1) (match _6 with [] -> (match _4 with [] -> (rhs parseState 3) | _ -> (rhs parseState 4)) | _ -> (rhs parseState 6))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m _4 _6)) 
                   )
# 735 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnRhsBlock));
# 3577 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnOrSpfnCnvRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 747 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                            let inherits,m,rules = _1
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (m,m.Range),augmentation, inherits),rules 
                   )
# 747 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'cnvTyconDefnRhs));
# 3590 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 753 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m = _1.Range
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1,m),augmentation, [])
                   )
# 753 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnRhs));
# 3602 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 759 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition());
                             _2 
                   )
# 759 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBlock));
# 3615 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 762 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 762 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBlock));
# 3627 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 764 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 764 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBlock));
# 3638 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 779 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 779 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnMembers));
# 3649 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 782 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 782 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnMembers));
# 3660 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 784 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 784 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnMembers));
# 3670 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 788 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 @  _3 
                   )
# 788 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnMembersAtLeastOne));
# 3683 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 793 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                             
                             let mRhs = _6.Range 
                             let mWhole = unionRanges (rhs2 parseState 3 4) mRhs 
                             let optReturnType = _4
                             let bindingBuilder,mBindLhs = _3
                             let opt1 = 
                                 match _1 with
                                 | 1 -> [Flag.Master]
                                 | 2 -> [Flag.Slave]
                                 | 3 -> [Flag.Connected]
                                 | 4 -> [Flag.Connecting]
                                 | _ -> []
                             let opt2 = 
                                 match _2 with
                                 | 1 -> [Flag.Master]
                                 | 2 -> [Flag.Slave]
                                 | 3 -> [Flag.Connected]
                                 | 4 -> [Flag.Connecting]
                                 | _ -> []
                             (fun vis memFlagsBuilder -> 
                                  let b = bindingBuilder (mBindLhs,optReturnType,_6,Some(memFlagsBuilder MemberKind.Member))
                                  [ SynMemberDefn.Member (b,unionRanges mWhole mBindLhs, opt1 @ opt2) ]) 
                   )
# 793 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberCore));
# 3720 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'createBindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 822 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                             
                             let mRhs = _5.Range 
                             let mWhole = unionRanges (rhs2 parseState 3 4) mRhs 
                             let optReturnType = _3 
                             let bindingBuilder,mBindLhs = _2 
                             (fun vis memFlagsBuilder -> 
                                  let b = bindingBuilder (mBindLhs,optReturnType,_5,Some(memFlagsBuilder MemberKind.Member))             
                                  [ SynMemberDefn.Member(make_synexpr_create b,unionRanges mWhole mBindLhs, []) ]) 
                   )
# 822 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'createMemberCoreWithParams));
# 3742 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 836 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                             
                             let mRhs = _4.Range 
                             let mWhole = unionRanges (rhs2 parseState 2 3) mRhs 
                             let optReturnType = _2 
                             (fun vis memFlagsBuilder _range -> 
                                  let test = mkSynPatMaybeVar (LongIdentWithDots([Ident("Create",_range)],[])) _range
                                  [ SynMemberDefn.Member (mkSynBinding test (_range,optReturnType,_4,Some(memFlagsBuilder MemberKind.Member)),unionRanges mWhole _range, []) ]) 
                   )
# 836 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'createMemberCore));
# 3762 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 846 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   
                   )
# 846 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'abstractMemberFlags));
# 3772 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 847 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          
                   )
# 847 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'abstractMemberFlags));
# 3782 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 851 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let _,flags = _2
                            _3 _1 flags
                   )
# 851 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnMember));
# 3798 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 857 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        None 
                   )
# 857 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_typ));
# 3808 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 858 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      Some _2 
                   )
# 858 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_typ));
# 3819 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 863 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let (LongIdentWithDots(lid,dotms)) = _3 
                             (None,LongIdentWithDots(ident(MangledGlobalName,rhs parseState 1)::lid, rhs parseState 2::dotms)) 
                   )
# 863 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatternLongIdent));
# 3831 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 865 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  (None,_1) 
                   )
# 865 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatternLongIdent));
# 3842 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 869 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            None 
                   )
# 869 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_declVisibility));
# 3852 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 872 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                       _2 
                   )
# 872 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_classDefn));
# 3864 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 873 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                     [] 
                   )
# 873 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_classDefn));
# 3874 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 876 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  Some(_1) 
                   )
# 876 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optAsSpec));
# 3885 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 877 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  None 
                   )
# 877 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optAsSpec));
# 3895 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 880 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    _2 
                   )
# 880 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'asSpec));
# 3906 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 883 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    Some(_1) 
                   )
# 883 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optBaseSpec));
# 3917 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 884 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  None 
                   )
# 884 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optBaseSpec));
# 3927 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 888 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 888 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'baseSpec));
# 3940 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 893 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 893 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'baseSpec));
# 3951 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 897 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    
                   )
# 897 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberOrOverride));
# 3961 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 898 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      
                   )
# 898 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'memberOrOverride));
# 3971 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 903 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let _SynUnionCases : Choice<_,SynUnionCase> list = _2
                            let rangesOf3 = _SynUnionCases |> List.map (function |Choice1Of2(ec)->ec.Range | Choice2Of2(uc)->uc.Range)
                            let mWhole = (rhs parseState 1, rangesOf3) ||> List.fold unionRanges 
                            SynTypeDefnSimpleRepr.Union ( _SynUnionCases |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                          mWhole) 
                   )
# 903 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynTypeDefnSimpleRepr));
# 3987 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldOrRuleDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 911 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let inherits,fields,rules = _2
                            inherits,(SynTypeDefnSimpleRepr.Record (fields,lhs parseState)),rules 
                   )
# 911 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconDefnOrSpfnCnvRepr));
# 4000 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRuleList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 916 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let fieldsOrInherit,rules = split (fun x -> match x with CnvRule (_) -> false |_ -> true ) _2
                            let inherits, fields = split (fun x -> match x with CnvField (_) -> false |_ -> true ) fieldsOrInherit
                            let fields,rules = fields |> List.map(fun x -> x.GetField),rules |> List.map(fun x -> x.GetRule)
                            let inherits = inherits |> List.map(fun x -> x.GetInherit)
                            if (inherits.Length > 1) then failwith "Multiple inherits keywords definition per entity not allowed."
                            if inherits.Length = 1 then inherits.Head, fields,rules
                            else [], fields,rules
                   )
# 916 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceFieldOrRuleDeclList));
# 4018 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRuleList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 924 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()); 
                            let fieldsOrInherit,rules = split (fun x -> match x with CnvRule (_) -> false |_ -> true ) _2
                            let inherits, fields = split (fun x -> match x with CnvField (_) -> false |_ -> true ) fieldsOrInherit
                            let fields,rules = fields |> List.map(fun x -> x.GetField),rules |> List.map(fun x -> x.GetRule)
                            let inherits = inherits |> List.map(fun x -> x.GetInherit)
                            if (inherits.Length > 1) then failwith "Multiple inherits keywords definition per entity not allowed."
                            if inherits.Length = 1 then inherits.Head, fields,rules
                            else [], fields,rules
                   )
# 924 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceFieldOrRuleDeclList));
# 4037 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRule)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 936 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                       [_1] 
                   )
# 936 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRuleList));
# 4048 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRule)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldOrRuleList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 937 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                     _1 :: _3 
                   )
# 937 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRuleList));
# 4061 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 941 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let ty,arity = _2 
                            let arity = (match arity with SynValInfo([],rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty,arity),rhs parseState 2)) 
                   )
# 941 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topReturnTypeWithTypeConstraints));
# 4074 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 948 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mRhs = _4.Range 
                             let mWhole = unionRanges (rhs2 parseState 2 3) mRhs 
                             let optReturnType = _2 
                             let bindingBuilder,mBindLhs = _1 
                             (fun vis memFlagsBuilder -> 
                                  [ SynMemberDefn.Member (bindingBuilder (mBindLhs,optReturnType,_4,Some(memFlagsBuilder MemberKind.Member)),unionRanges mWhole mBindLhs, []) ]) 
                   )
# 948 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'cnvFieldInitCore));
# 4092 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 959 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let flags = NonVirtualMemberFlags
                            let res = _3 _1 flags
                            CnvRule (res.Head) 
                   )
# 959 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4108 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'createMemberCoreWithParams)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 965 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let flags = NonVirtualMemberFlags
                            let res = _3 _1 flags
                            CnvRule (res.Head) 
                   )
# 965 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4124 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'createMemberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 972 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if isSome _1 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 1));
                            let flags = StaticMemberFlags
                            let res = _3 _1 flags (rhs parseState 2)
                            CnvRule (res.Head) 
                   )
# 972 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4140 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cnvFieldInitCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 978 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let flags = NonVirtualMemberFlags
                            let res = _3 _2 flags
                            let res_head = res.Head
                            CnvRule (res_head) 
                   )
# 978 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4157 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'inherit_idents)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 983 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           CnvInherit _2 
                   )
# 983 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4168 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 985 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let (Field(c,d,is_ref,g)) = _1 
                            CnvField (Field(c,d,is_ref,g))  
                   )
# 985 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldOrRule));
# 4180 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 989 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 [Ident(_1, lhs parseState)] 
                   )
# 989 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'inherit_idents));
# 4191 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inherit_idents)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 990 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                      Ident(_1, lhs parseState) :: _3 
                   )
# 990 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'inherit_idents));
# 4203 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 994 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 994 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceFieldDeclList));
# 4215 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 996 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()); 
                            _2 
                   )
# 996 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceFieldDeclList));
# 4228 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 999 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 999 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceFieldDeclList));
# 4239 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1002 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 1002 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interfaceMember));
# 4249 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1003 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                
                   )
# 1003 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interfaceMember));
# 4259 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1007 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1.Lid 
                   )
# 1007 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tyconNameAndTyparDecls));
# 4270 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1010 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                             _3::_1 
                   )
# 1010 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typarAlts));
# 4282 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1011 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                [_1] 
                   )
# 1011 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typarAlts));
# 4293 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1017 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 1017 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionRepr));
# 4304 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1019 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 :: _2
                   )
# 1019 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionRepr));
# 4316 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1021 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [_1] 
                   )
# 1021 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionRepr));
# 4327 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1024 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                 _1 :: _2 
                   )
# 1024 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attrUnionCaseDecls));
# 4339 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1025 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                             [ _1 ] 
                   )
# 1025 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attrUnionCaseDecls));
# 4350 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1029 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mDecl = rhs parseState 1
                             Choice2Of2 (UnionCase (_1,UnionCaseFields [],mDecl)) 
                           
                   )
# 1029 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attrUnionCaseDecl));
# 4364 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1033 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mDecl = rhs2 parseState 1 3
                             Choice2Of2 (UnionCase (_1,UnionCaseFields _3,mDecl)) 
                           
                   )
# 1033 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attrUnionCaseDecl));
# 4379 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1037 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             libraryOnlyWarning(lhs parseState);
                             let mDecl = rhs2 parseState 1 3
                             Choice2Of2 (UnionCase (_1,UnionCaseFullType _3,mDecl))
                           
                   )
# 1037 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attrUnionCaseDecl));
# 4395 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1045 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1045 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseName));
# 4406 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1047 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              ident(opNameCons,rhs parseState 2) 
                   )
# 1047 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseName));
# 4417 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1049 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              ident(opNameNil,rhs2 parseState 2 3) 
                   )
# 1049 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseName));
# 4428 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1053 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                             Choice2Of2 (UnionCase (_1,UnionCaseFields [],rhs parseState 1)) 
                           
                   )
# 1053 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 4442 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1057 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1057 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 4454 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1061 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                            Choice2Of2 (UnionCase (_1,UnionCaseFields _3,rhs2 parseState 1 3))
                         
                   )
# 1061 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'firstUnionCaseDecl));
# 4468 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1067 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(),lhs parseState)); 
                            _1 
                   )
# 1067 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseRepr));
# 4480 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1070 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            List.map mkAnonField (_1 :: _3) 
                   )
# 1070 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseRepr));
# 4492 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1072 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [mkAnonField _1] 
                   )
# 1072 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'unionCaseRepr));
# 4503 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1076 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 :: _3 
                   )
# 1076 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdFieldDeclList));
# 4516 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1078 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [_1] 
                   )
# 1078 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdFieldDeclList));
# 4528 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1082 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let fld = _1
                            let (Field(c,d,is_ref,g)) = fld
                            Field(c,d,is_ref,g)  
                   )
# 1082 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdFieldDecl));
# 4541 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ref)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1088 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mRhs = rhs2 parseState 1 4
                            Field(Some _2,_4,_1,mRhs) 
                   )
# 1088 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fieldDecl));
# 4555 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1093 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          (_2, lhs parseState) 
                   )
# 1093 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'importDecl));
# 4566 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1096 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        (_2, lhs parseState) 
                   )
# 1096 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'importLibrary));
# 4577 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1100 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise Position of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate Position *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             let binds = localBindingsBuilder 
                             if not isRec && List.length binds > 1 then  
                                 reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs( mLetKwd,isRec,isUse,
                                                 binds, 
                                                 bindingSetRange, false) 
                   )
# 1100 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'defnBindings));
# 4606 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1120 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             printf "babababa "
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise Position of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate Position *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             let binds = localBindingsBuilder 
                             if not isRec && List.length binds > 1 then 
                                 reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs( mLetKwd,isRec,isUse,
                                                 binds, 
                                                 bindingSetRange, true) 
                   )
# 1120 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'defnBindingsWait));
# 4636 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1143 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mDoKwd = rhs parseState 1 
                             let mWhole = unionRanges mDoKwd _2.Range
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mDoKwd,false,false,[mkSynDoBinding (true,_2,mWhole)], mWhole, false) 
                   )
# 1143 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'doBinding));
# 4651 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1151 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd;  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise Position of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate Position *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             
                             let binds = localBindingsBuilder 
                             if not isRec && List.length binds > 1 then 
                                 reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                             
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,binds,bindingSetRange,true), (unionRanges mLetKwd bindingSetRange) 
                   )
# 1151 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'hardwhiteLetWaitBindings));
# 4683 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1173 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd;  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise Position of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate Position *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             
                             let binds = localBindingsBuilder 
                             if not isRec && List.length binds > 1 then 
                                 reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                             
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,binds,bindingSetRange,false), (unionRanges mLetKwd bindingSetRange) 
                   )
# 1173 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'hardwhiteLetBindings));
# 4715 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1196 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mLetKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mLetKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange, false), _2 
                   )
# 1196 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'hardwhiteDoBinding));
# 4732 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1204 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        _1 
                   )
# 1204 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBindings));
# 4743 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1205 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     _1 
                   )
# 1205 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBindings));
# 4754 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1206 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                let b,m = _1 in b 
                   )
# 1206 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBindings));
# 4765 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1207 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               fst _1 
                   )
# 1207 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'classDefnBindings));
# 4776 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1212 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (fun _ m -> ()) 
                   )
# 1212 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 4786 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1214 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (fun kwd m -> reportParseErrorAt m (match kwd with 
                                                                | "let!" -> FSComp.SR.parsUnmatchedLetBang() 
                                                                | "use!" -> FSComp.SR.parsUnmatchedUseBang() 
                                                                | "use" -> FSComp.SR.parsUnmatchedUse() 
                                                                | _ (*"let" *) -> FSComp.SR.parsUnmatchedLet()))  
                   )
# 1214 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 4801 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1222 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let (moreBindings, moreBindingRanges) = List.unzip _2
                             let moreLocalBindingsLastRange = if moreBindingRanges.IsEmpty then None else Some (last moreBindingRanges)
                             match _1 with 
                             | Some (localBindingRange,attrLocalBindingBuilder) -> 
                                let lastRange = 
                                    match moreLocalBindingsLastRange with 
                                    | None -> localBindingRange 
                                    | Some m -> m
                                Some lastRange, attrLocalBindingBuilder ::  moreBindings
                             | None -> 
                                moreLocalBindingsLastRange, moreBindings 
                   )
# 1222 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'localBindings));
# 4823 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1236 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mLetKwd = rhs parseState 1
                             (match _2 with 
                              | Some (localBindingRange,attrLocalBindingBuilder) -> (attrLocalBindingBuilder ,localBindingRange) :: _3 
                              | None -> _3) 
                   )
# 1236 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moreLocalBindings));
# 4838 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1241 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [] 
                   )
# 1241 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'moreLocalBindings));
# 4848 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1245 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let localBindingRange,localBindingBuilder = _1
                             let attrLocalBindingBuilder = localBindingBuilder
                             Some(localBindingRange,attrLocalBindingBuilder) 
                   )
# 1245 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attr_localBinding));
# 4861 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1249 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             None 
                   )
# 1249 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'attr_localBinding));
# 4871 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1253 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let (expr:SynExpr),opts = _6
                             let mRhs = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingRange = unionRanges (rhs2 parseState 3 5) mRhs
                             let localBindingBuilder = bindingBuilder (mBindLhs,optReturnType,expr,None)
                             localBindingRange,localBindingBuilder 
                   )
# 1253 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'localBinding));
# 4892 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1261 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWhole = rhs2 parseState 3 5 
                             let optReturnType = _4 
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = 
                                 let eqm = rhs parseState 5
                                 let zeroWidthAtEnd = eqm
                                 bindingBuilder (mBindLhs,optReturnType,arbExpr("localBinding1",zeroWidthAtEnd),None) 
                             mWhole,localBindingBuilder 
                   )
# 1261 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'localBinding));
# 4913 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1270 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 5) (FSComp.SR.parsUnexpectedEndOfFileDefinition())
                             let optReturnType = _4 
                             let mWhole = match optReturnType with None -> rhs parseState 3 | Some _ -> rhs2 parseState 3 4
                             let mRhs = mWhole  // zero-width Position at end of last good token
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = bindingBuilder (mBindLhs,optReturnType,arbExpr("localBinding2",mRhs),None)
                             mWhole,localBindingBuilder 
                   )
# 1270 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'localBinding));
# 4934 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1281 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1281 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 4946 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1283 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             let a,b = _2
                             (exprFromParseError a, b) 
                   )
# 1283 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 4960 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1287 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1287 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 4971 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1290 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                _1, List.rev _2 
                   )
# 1290 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedExprWithStaticOptimizations));
# 4983 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1293 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                      _2 :: _1 
                   )
# 1293 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_staticOptimizations));
# 4995 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1294 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           [] 
                   )
# 1294 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_staticOptimizations));
# 5005 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1297 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                      (_2,_4) 
                   )
# 1297 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticOptimization));
# 5017 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1300 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                        _3 :: _1 
                   )
# 1300 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticOptimizationConditions));
# 5029 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1301 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                       [_1 ] 
                   )
# 1301 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticOptimizationConditions));
# 5040 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1304 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           CasanovaCompiler.ParseAST.WhenTyparTyconEqualsTycon(_1,_3,lhs parseState) 
                   )
# 1304 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticOptimizationCondition));
# 5052 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1305 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        CasanovaCompiler.ParseAST.WhenTyparIsStruct(_1,lhs parseState) 
                   )
# 1305 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticOptimizationCondition));
# 5063 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1308 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 SynConst.Byte _1 
                   )
# 1308 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5074 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1309 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState));
                                 SynConst.Int32 (fst _1) 
                   )
# 1309 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5086 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1311 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  SynConst.Single _1 
                   )
# 1311 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5097 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1312 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  SynConst.Double _1 
                   )
# 1312 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5108 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1313 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                SynConst.Char _1 
                   )
# 1313 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5119 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1314 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 SynConst.String (_1,lhs parseState) 
                   )
# 1314 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rawConstant));
# 5130 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1318 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas false mAll _2 _4 
                   )
# 1318 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5143 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1321 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mAll = rhs2 parseState 1 3
                            mkSynFunMatchLambdas false mAll _2 (arbExpr("anonLambdaExpr1",(rhs parseState 4))) 
                   )
# 1321 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5155 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1324 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let e : SynExpr = _4
                            let mAll = unionRanges (rhs parseState 1) e.Range       
                            mkSynFunMatchLambdas false mAll _2 e 
                   )
# 1324 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5169 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1328 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody());
                            let e : SynExpr = _4 
                            let mAll = unionRanges (rhs parseState 1) e.Range
                            exprFromParseError (mkSynFunMatchLambdas false mAll _2 e) 
                   )
# 1328 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5185 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1333 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody())
                            mkSynFunMatchLambdas false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr2",(rhs parseState 4))) 
                   )
# 1333 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5197 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1337 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody())
                            exprFromParseError (mkSynFunMatchLambdas false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr3",(rhs parseState 4)))) 
                   )
# 1337 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5210 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1340 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            exprFromParseError (mkSynFunMatchLambdas false (rhs2 parseState 1 2) _2 (arbExpr("anonLambdaExpr4",(rhs parseState 3)))) 
                   )
# 1340 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5221 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1342 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            exprFromParseError (mkSynFunMatchLambdas false (rhs parseState 1) [] (arbExpr("anonLambdaExpr5",(rhs parseState 2)))) 
                   )
# 1342 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'anonLambdaExpr));
# 5231 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1345 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                       _1 
                   )
# 1345 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constant));
# 5242 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1346 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                            SynConst.Measure(_1, _3) 
                   )
# 1346 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constant));
# 5254 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1350 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynBinding _1, rhs parseState 1 
                   )
# 1350 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'bindingPattern));
# 5265 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1354 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                             let tuple = _1
                             let tuple1 = SynPat.LongIdent(LongIdentWithDots([Ident("Create", rhs parseState 1)],[]),None, [tuple], rhs parseState 1)
                             mkCreateSynBinding tuple1, rhs parseState 1 
                           
                   )
# 1354 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'createBindingPattern));
# 5280 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1363 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Named (_1,_3,false,rhs2 parseState 1 3) 
                   )
# 1363 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5292 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1365 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 1365 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5304 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1367 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]), None,[SynPat.Tuple ([_1;_3],rhs2 parseState 1 3)],lhs parseState) 
                   )
# 1367 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5316 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1369 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Tuple(List.rev _1, lhs parseState) 
                   )
# 1369 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5327 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1371 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Ands(List.rev _1, lhs parseState) 
                   )
# 1371 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5338 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1373 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1373 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynPat));
# 5349 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1376 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 
                   )
# 1376 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tuplePatternElements));
# 5361 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1378 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1378 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tuplePatternElements));
# 5373 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1382 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 
                   )
# 1382 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'conjPatternElements));
# 5385 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1384 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1384 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'conjPatternElements));
# 5397 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1388 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_3,lhs parseState) 
                   )
# 1388 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constrPattern));
# 5410 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1390 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_4,lhs parseState) 
                   )
# 1390 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constrPattern));
# 5423 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1392 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_4,lhs parseState) 
                   )
# 1392 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constrPattern));
# 5436 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1394 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1394 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'constrPattern));
# 5447 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1396 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                   None 
                   )
# 1396 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_explicitValTyparDecls2));
# 5457 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1400 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 :: _2 
                   )
# 1400 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatterns));
# 5469 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1402 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 1402 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatterns));
# 5482 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1405 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 1405 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatterns));
# 5495 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1407 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                         [_1] 
                   )
# 1407 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPatterns));
# 5506 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1412 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1412 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5518 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1414 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.ArrayOrList(false,_2,lhs parseState) 
                   )
# 1414 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5529 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1416 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.ArrayOrList(true,_2, lhs parseState) 
                   )
# 1416 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5540 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1418 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Wild (lhs parseState) 
                   )
# 1418 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5550 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1420 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let vis,lidwd = _1 
                             if List.length lidwd.Lid > 1 || (let c = (List.head lidwd.Lid).idText.[0] in Char.IsUpper(c) && not (Char.IsLower c)) 
                             then mkSynPatMaybeVar lidwd (lhs parseState)
                             else mkSynPatVar (List.head lidwd.Lid) 
                   )
# 1420 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5564 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1425 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Const (_1,_1.Range (lhs parseState)) 
                   )
# 1425 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5575 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1427 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Const(SynConst.Bool false,lhs parseState) 
                   )
# 1427 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5585 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1429 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Const(SynConst.Bool true,lhs parseState) 
                   )
# 1429 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5595 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1431 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Null(lhs parseState) 
                   )
# 1431 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5605 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1433 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let m = (lhs parseState)
                             SynPat.Paren(_2 m,m) 
                   )
# 1433 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5618 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1436 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             patFromParseError (_2 (rhs2 parseState 1 2)) 
                   )
# 1436 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5631 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1439 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
# 1439 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5642 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1441 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                              SynPat.Wild (lhs parseState)
                   )
# 1441 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicPattern));
# 5654 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1448 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun m -> _1) 
                   )
# 1448 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPatternBody));
# 5665 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1450 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit,m)) 
                   )
# 1450 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPatternBody));
# 5675 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1479 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Named (_1,_3,false,rhs2 parseState 1 3) 
                   )
# 1479 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5687 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1481 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 1481 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5699 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1483 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Tuple(List.rev _1,lhs parseState) 
                   )
# 1483 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5710 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1485 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.Ands(List.rev _1,rhs2 parseState 1 3) 
                   )
# 1485 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5721 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1487 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Typed(_1,_3,lhsm) 
                   )
# 1487 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5734 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1490 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]),None,[ SynPat.Tuple ([_1;_3],rhs2 parseState 1 3) ],lhs parseState) 
                   )
# 1490 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5746 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1491 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                         _1 
                   )
# 1491 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenPattern));
# 5757 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1495 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 
                   )
# 1495 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleParenPatternElements));
# 5769 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1497 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1497 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleParenPatternElements));
# 5781 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1501 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 
                   )
# 1501 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'conjParenPatternElements));
# 5793 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1503 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 :: [] 
                   )
# 1503 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'conjParenPatternElements));
# 5805 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1506 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                    let rs,m = _1 in SynPat.Record (rs,m) 
                   )
# 1506 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recordPatternElements));
# 5816 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1510 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_1],lhs parseState 
                   )
# 1510 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recordPatternElementsAux));
# 5828 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1512 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let r = _1 in let (rs,dropMark) = _3 in (r :: rs),lhs parseState 
                   )
# 1512 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recordPatternElementsAux));
# 5841 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1515 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                    (frontAndBack _1.Lid,_3) 
                   )
# 1515 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recordPatternElement));
# 5853 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1519 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [] 
                   )
# 1519 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'listPatternElements));
# 5863 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1521 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_1] 
                   )
# 1521 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'listPatternElements));
# 5875 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1523 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 :: _3 
                   )
# 1523 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'listPatternElements));
# 5888 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1528 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1528 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromAssignmentExprBlock));
# 5900 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1532 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1532 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 5912 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1534 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                             exprFromParseError _2 
                   )
# 1534 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 5925 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1537 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1537 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 5936 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1542 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1542 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 5948 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1544 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1544 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 5959 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1549 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                         _1 
                   )
# 1549 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedSeqExprBlockR));
# 5970 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1550 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        _1 
                   )
# 1550 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedSeqExprBlockR));
# 5981 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1553 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                               SynExpr.Typed (_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 1553 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedSeqExpr));
# 5993 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1554 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   _1 
                   )
# 1554 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typedSeqExpr));
# 6004 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1558 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,true,_1,_3,unionRanges _1.Range _3.Range) 
                   )
# 1558 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 6017 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1560 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1560 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 6029 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1562 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 1562 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 6040 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1564 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_3,unionRanges _1.Range _3.Range ) 
                   )
# 1564 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 6052 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1566 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_4,unionRanges _1.Range _4.Range) 
                   )
# 1566 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 6065 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1568 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            let mLetKwd,isUse = match hwlb with (BindingSetPreAttrs(m,_,isUse,_,_,_))  -> m,isUse
                            reportParseErrorAt mLetKwd (FSComp.SR.parsExpectedStatementAfterLet(if isUse then "use" else "let"))
                            let fauxRange = m // zero width Position at end of m
                            mkLocalBindings (m,hwlb,arbExpr("seqExpr",fauxRange)) 
                   )
# 1568 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seqExpr));
# 6080 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1579 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  debugPrint("recovering via error"); true 
                   )
# 1579 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recover));
# 6090 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1580 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                debugPrint("recovering via EOF"); false 
                   )
# 1580 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recover));
# 6101 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1584 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [SynExpr.Const(SynConst.Bool(true), mIf) ,_3,mIf] 
                   )
# 1584 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choices));
# 6113 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1587 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [_2,_3,mIf] 
                   )
# 1587 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choices));
# 6126 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1590 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (SynExpr.Const(SynConst.Bool(true), mIf) ,_3,mIf) :: _4 
                   )
# 1590 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choices));
# 6139 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1593 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (_2,_3,mIf) :: _4 
                   )
# 1593 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choices));
# 6153 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1598 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [SynExpr.Const(SynConst.Bool(true), mIf),_3,mIf] 
                   )
# 1598 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'intChoices));
# 6165 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1601 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1) 
                             [_2,_3,mIf] 
                   )
# 1601 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'intChoices));
# 6178 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1604 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (SynExpr.Const(SynConst.Bool(true), mIf),_3,mIf) :: _4 
                   )
# 1604 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'intChoices));
# 6191 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'choiceBody)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1607 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             (_2,_3,mIf) :: _4 
                   )
# 1607 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'intChoices));
# 6205 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1612 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1612 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choiceBody));
# 6216 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1614 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 
                   )
# 1614 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choiceBody));
# 6228 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1616 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen());
                             exprFromParseError _3 
                   )
# 1616 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'choiceBody));
# 6241 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1621 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWaitKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mWaitKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mWaitKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange,false), _2)
                             [(e,mWaitKwd)]
                   )
# 1621 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parallel));
# 6257 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'parallel)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1627 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWaitKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mWaitKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mWaitKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange,false), _2)
                             (e,mWaitKwd) :: _4 
                   )
# 1627 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parallel));
# 6274 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'choices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1635 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynExpr.Choice(false,_1) 
                   )
# 1635 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6285 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'intChoices)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1637 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynExpr.Choice(true,_1) 
                   )
# 1637 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6296 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parallel)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1639 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynExpr.Parallel(_1) 
                   )
# 1639 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6307 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindingsWait)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1641 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range,_1,_3) 
                   )
# 1641 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6319 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1643 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range,_1,_3) 
                   )
# 1643 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6331 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1645 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            mkLocalBindings (rhs2 parseState 1 2,_1,arbExpr("declExpr1",(rhs parseState 3))) 
                   )
# 1645 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6342 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetWaitBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1650 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _2.Range,hwlb,_2) 
                   )
# 1650 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6355 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1653 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _2.Range,hwlb,_2) 
                   )
# 1653 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6368 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetWaitBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1656 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m,hwlb,arbExpr("declExpr2",(rhs parseState 2))) 
                   )
# 1656 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6381 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1660 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m,hwlb,arbExpr("declExpr2",(rhs parseState 2))) 
                   )
# 1660 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6394 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetWaitBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1664 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _3.Range ,hwlb,_3) 
                   )
# 1664 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6407 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1667 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _3.Range ,hwlb,_3) 
                   )
# 1667 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6420 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetWaitBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1670 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3),hwlb,arbExpr("declExpr3",(rhs parseState 3))) 
                   )
# 1670 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6433 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1674 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let hwlb,m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3),hwlb,arbExpr("declExpr3",(rhs parseState 3))) 
                   )
# 1674 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6446 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1679 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let e = snd _1
                            SynExpr.Do(e,e.Range) 
                   )
# 1679 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6458 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1685 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWaitKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mWaitKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mWaitKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange,false), _2)
                             SynExpr.WaitStatement(e,e.Range) 
                   )
# 1685 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6474 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1693 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mYieldKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mYieldKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             let e = snd(BindingSetPreAttrs(mYieldKwd,false,false,[mkSynDoBinding (true,_2,bindingSetRange)],bindingSetRange,false), _2)
                             SynExpr.YieldStatement(e,e.Range) 
                   )
# 1693 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6490 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1700 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             printfn "anonLambdaExpr 1"
                             _1 
                   )
# 1700 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6502 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1704 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith,(clauses,mLast) = _3 
                             let spBind = SequencePointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.Match(spBind, _2,clauses,false,unionRanges mMatch mLast) 
                   )
# 1704 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6517 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1710 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch());
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
# 1710 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6531 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1715 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 1715 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6544 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1719 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 1719 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6557 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1724 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf()); 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             exprFromParseError _2 
                   )
# 1724 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6574 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1732 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf())
                             // Produce an approximate expression during error recovery. There can still be value in doing this even
                             // for this pathological case.
                             let m = (rhs parseState 1)
                             let mEnd = m
                             let spIfToThen = SequencePointAtBinding mEnd
                             exprFromParseError (SynExpr.IfThenElse(arbExpr("ifGuard1",mEnd),arbExpr("thenBody1",mEnd),None,spIfToThen,true,m,m)) 
                   )
# 1732 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6591 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1741 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.While(spWhile,_2,_4,mWhileAll) 
                   )
# 1741 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6608 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1747 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.While(spWhile,_2,_4,mWhileAll)) 
                   )
# 1747 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6626 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1754 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // silent recovery 
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = unionRanges (rhs parseState 4) (rhs parseState 5)
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 5)
                             SynExpr.While(spWhile,_2,arbExpr("whileBody1",mWhileBodyArb),mWhileAll) 
                   )
# 1754 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6644 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1762 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsWhileDoExpected())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,_2,arbExpr("whileBody2",mWhileBodyArb),mWhileAll))  
                   )
# 1762 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6661 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1770 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             arbExpr("whileLoop1",rhs parseState 1)  
                   )
# 1770 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6673 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1774 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             //silent recovery
                             let mWhileHeader = rhs parseState 1
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,arbExpr("whileGuard1",mWhileHeader),arbExpr("whileBody3",mWhileBodyArb),mWhileAll))  
                   )
# 1774 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6689 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1782 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 1782 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6705 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1787 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,mForLoopAll) 
                   )
# 1787 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6723 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1794 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // Silent recovery
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2a",mForLoopBodyArb),mForLoopAll) 
                   )
# 1794 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6742 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1803 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2",mForLoopBodyArb),mForLoopAll) 
                   )
# 1803 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6761 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1812 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let (a,b,ok) = _2 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsForDoExpected())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody1",mForLoopBodyArb),mForLoopAll) 
                   )
# 1812 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6779 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1821 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll) 
                   )
# 1821 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6797 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1828 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             // Still produce an expression
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll)) 
                   )
# 1828 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6817 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1837 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll) 
                   )
# 1837 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6836 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1846 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 1846 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6855 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1855 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = (rhs parseState 2)
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 1855 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6873 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1865 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 2
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             let spBind = SequencePointAtForLoop(mForLoopHeader)
                             SynExpr.For(spBind,mkSynId mForLoopHeader "_loopVar",arbExpr("startLoopRange1",mForLoopHeader),true,arbExpr("endLoopRange1",rhs parseState 3),_4,mForLoopAll) 
                   )
# 1865 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6890 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1884 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsIdentifierExpected())
                             arbExpr("declExpr12",(rhs parseState 1)) 
                   )
# 1884 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6902 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1888 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsInOrEqualExpected())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 4
                             let mForLoopAll = rhs2 parseState 1 4
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll) 
                   )
# 1888 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6919 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1896 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = (rhs parseState 2)
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll)) 
                   )
# 1896 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6936 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicSingleLineQualifiersThenArrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1904 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let spBind = SequencePointAtForLoop(rhs2 parseState 1 2)
                            let (a,b,_) = _2 in SynExpr.ForEach(spBind,SeqExprOnly true,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 1904 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6950 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1907 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                             SynExpr.Upcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 1907 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6962 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1910 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ":=" _3 
                   )
# 1910 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6974 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1912 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                        let exprs,commas = _1 in SynExpr.Tuple(List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ) 
                   )
# 1912 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6985 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1916 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    SynExpr.JoinIn(_1,rhs parseState 2,_3,unionRanges _1.Range _3.Range) 
                   )
# 1916 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 6997 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1917 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "||" _3 
                   )
# 1917 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7009 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1918 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1918 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7022 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1919 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "or" _3 
                   )
# 1919 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7034 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1920 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&" _3 
                   )
# 1920 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7046 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1921 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&&" _3 
                   )
# 1921 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7058 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1922 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1922 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7071 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1923 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "=" _3 
                   )
# 1923 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7083 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1924 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1924 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7096 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1925 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "$" _3 
                   )
# 1925 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7108 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1926 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "<" _3 
                   )
# 1926 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7121 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1927 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ">" _3 
                   )
# 1927 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7134 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1928 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1928 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7147 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1929 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1929 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7160 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1930 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;_3],[rhs parseState 2],unionRanges _1.Range _3.Range),unionRanges _1.Range _3.Range) 
                   )
# 1930 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7172 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1931 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1931 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7185 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1932 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "-" _3 
                   )
# 1932 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7197 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1933 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "*" _3 
                   )
# 1933 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7209 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1934 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1934 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7222 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1935 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 1935 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7235 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1937 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("in")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "@in" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1937 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7247 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1939 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("||")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "||" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1939 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7259 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1941 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1941 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7272 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1943 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("or")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "or" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1943 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7284 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1945 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1945 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7296 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1947 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&&" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1947 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7308 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1949 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1949 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7321 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1951 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("=")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "=" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1951 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7333 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1953 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1953 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7346 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1955 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("$")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "$" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1955 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7358 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1957 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1957 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7371 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1959 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(">")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 ">" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1959 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7384 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1961 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1961 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7397 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1963 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1963 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7410 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1965 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("::")); 
                                                                                 SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;(arbExpr("declExprInfix",(rhs parseState 3)))],[rhs parseState 2],unionRanges _1.Range (rhs parseState 3)),unionRanges _1.Range (rhs parseState 3)) 
                   )
# 1965 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7422 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1967 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1967 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7435 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1969 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("-")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "-" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1969 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7447 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1971 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("*")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "*" (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1971 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7459 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1973 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1973 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7472 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1975 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3)))) 
                   )
# 1975 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7485 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1978 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                  _1 
                   )
# 1978 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7496 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1983 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let con = SynConst.String (_1,rhs parseState 1)
                             let arg2 = SynExpr.Const (con,con.Range (rhs parseState 1)) 
                             arg2 
                   )
# 1983 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'dynamicArg));
# 7509 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1987 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 1987 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'dynamicArg));
# 7521 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1991 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             rhs parseState 1, _2 
                   )
# 1991 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withClauses));
# 7532 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1993 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             rhs parseState 1, _2 
                   )
# 1993 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withClauses));
# 7543 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1995 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWith());
                             rhs parseState 1, _2 
                   )
# 1995 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withClauses));
# 7556 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2000 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2000 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withPatternClauses));
# 7567 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2002 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _2 
                   )
# 2002 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withPatternClauses));
# 7578 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2004 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 2004 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withPatternClauses));
# 7590 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2008 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 2008 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'withPatternClauses));
# 7602 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2015 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1, _2, rhs parseState 1 
                   )
# 2015 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternAndGuard));
# 7614 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2019 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 2019 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternClauses));
# 7628 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2023 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let pat,guard,patm = _1 
                            let clauses,mLast = _4 
                            (Clause(pat,guard,_2,patm,SequencePointAtTarget) :: clauses), mLast 
                   )
# 2023 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternClauses));
# 7643 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2027 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 3 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 2027 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternClauses));
# 7658 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2032 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast 
                   )
# 2032 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternClauses));
# 7673 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2037 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 2
                            // silent recovery 
                            [Clause(pat,guard,SynExpr.Const(SynConst.Unit,mLast),patm,SequencePointAtTarget)], mLast 
                   )
# 2037 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternClauses));
# 7687 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2044 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            Some _2 
                   )
# 2044 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternGuard));
# 7698 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2046 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            None 
                   )
# 2046 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'patternGuard));
# 7708 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2050 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 2050 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7719 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromTupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2055 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                         let exprs = _1 
                                         exprs 
                   )
# 2055 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromExprCondition));
# 7731 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2063 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let exprThen,mThen = _1 
                             (fun exprGuard mIf -> 
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match _2 with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = SequencePointAtBinding(mIfToThen)
                                 SynExpr.IfThenElse(exprGuard,exprThen,_2,spIfToThen,false,mIfToThen,mIfToEndOfLastBranch)) 
                   )
# 2063 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprCases));
# 7749 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2073 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2, rhs parseState 1 
                   )
# 2073 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprThen));
# 7760 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2075 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3,rhs parseState 1 
                   )
# 2075 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprThen));
# 7772 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2077 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen());
                             exprFromParseError _3,rhs parseState 1 
                   )
# 2077 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprThen));
# 7785 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2082 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             None 
                   )
# 2082 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7795 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2084 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             Some _2 
                   )
# 2084 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7806 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2086 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             Some _3 
                   )
# 2086 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7818 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2088 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileElse());
                             Some (exprFromParseError _3) 
                   )
# 2088 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7831 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2091 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mElif = rhs parseState 1 
                             Some (_3 _2 mElif) 
                   )
# 2091 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7844 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2094 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             Some (exprFromParseError _2) 
                   )
# 2094 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ifExprElifs));
# 7856 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2099 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let patterns,commas = _1 in (_3 :: patterns),((rhs parseState 2)::commas) 
                   )
# 2099 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tuplePat));
# 7868 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2110 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
# 2110 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tuplePat));
# 7880 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2114 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let exprs,commas = _1 in (_3 :: exprs),((rhs parseState 2)::commas) 
                   )
# 2114 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleExpr));
# 7892 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2125 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
# 2125 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleExpr));
# 7904 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2129 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
# 2129 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7915 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2131 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 2131 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7928 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2134 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 2134 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7941 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2137 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.New(false,_2,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2137 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7954 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2139 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.New(false,_2,arbExpr("minusExpr",(rhs parseState 4)),unionRanges (rhs parseState 1) (_2).Range) 
                   )
# 2139 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7966 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2141 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             arbExpr("minusExpr2",(rhs parseState 1)) 
                   )
# 2141 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7976 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2143 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.InferredUpcast(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2143 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7987 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2145 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2145 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 7998 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2149 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, false, _1,_2,unionRanges _1.Range _2.Range)  
                   )
# 2149 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8010 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2151 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg,_ = _1 
                             arg 
                   )
# 2151 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8022 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2156 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~"^(_1)) arg2 
                   )
# 2156 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8037 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2161 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg,hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             arg 
                   )
# 2161 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8050 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2168 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 2168 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8064 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2173 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 2173 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8078 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * bool     * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2178 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1,_ = _1 
                             let mLessThan,mGreaterThan,_,args,commas,mTypeArgs = _3
                             let mWholeExpr = unionRanges arg1.Range mTypeArgs
                             SynExpr.TypeApp(arg1, mLessThan, args, commas, mGreaterThan, mTypeArgs, mWholeExpr), false 
                   )
# 2178 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8093 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2184 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2,hpa2 
                   )
# 2184 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8107 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2189 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1,hpa1 = _1 
                             _3 arg1 (lhs parseState) (rhs parseState 2),hpa1 
                   )
# 2189 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8120 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2192 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1 = SynExpr.Ident(ident("base",rhs parseState 1))
                             _3 arg1 (lhs parseState) (rhs parseState 2),false 
                   )
# 2192 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8132 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2195 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.LongIdent (true,LongIdentWithDots([_2],[]),None,rhs parseState 2),false 
                   )
# 2195 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8143 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2197 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let arg1,hpa1 = _1
                             mkSynInfix (rhs parseState 2) arg1 "?" _3, hpa1 
                   )
# 2197 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8156 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2200 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Ident (ident(MangledGlobalName,rhs parseState 1)), false 
                   )
# 2200 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8166 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2202 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Ident (_1),false 
                   )
# 2202 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8177 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2204 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 (lhs parseState) false,false 
                   )
# 2204 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8188 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2206 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) false), false 
                   )
# 2206 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8201 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2209 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList(false,[ ], lhs parseState),false  
                   )
# 2209 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8212 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2212 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             // silent recovery 
                             exprFromParseError (SynExpr.ArrayOrList(false,[ ], rhs parseState 1)),false  
                   )
# 2212 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8225 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2216 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1,false 
                   )
# 2216 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr * bool));
# 8236 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2220 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e _1) 
                   )
# 2220 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8248 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2223 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e (Ident("Create",idm))) 
                   )
# 2223 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8259 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2226 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm dotm // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
# 2226 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8272 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2231 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm dotm // previous lhsm is wrong after 'recover'
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterMissingQualificationAfterDot(e,fixedLhsm)) 
                   )
# 2231 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8287 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2237 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun e lhsm dotm -> 
                                 mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs parseState); 
                                 mkSynDotParenGet lhsm dotm e _2) 
                   )
# 2237 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8301 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2241 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e _2) 
                   )
# 2241 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8312 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2244 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e _2)) 
                   )
# 2244 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8325 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2248 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mArg = rhs2 parseState 1 3
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr1",mArg))) 
                   )
# 2248 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8336 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2251 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket())
                             let mArg = (rhs parseState 1) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr2",mArg)))) 
                   )
# 2251 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8349 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2255 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSliceGet lhsm dotm e _2) 
                   )
# 2255 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomicExprQualification));
# 8360 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2259 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 3) (Some _3) 
                   )
# 2259 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optRange));
# 8372 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2261 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 2) None 
                   )
# 2261 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optRange));
# 8383 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2263 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 2) (Some _2) 
                   )
# 2263 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optRange));
# 8394 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2265 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 1) None 
                   )
# 2265 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'optRange));
# 8404 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2271 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Const (_1,_1.Range (lhs parseState)) 
                   )
# 2271 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8415 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2273 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2273 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8426 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2275 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2275 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8437 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2277 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Null(lhs parseState) 
                   )
# 2277 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8447 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2279 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Const(SynConst.Bool false,lhs parseState) 
                   )
# 2279 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8457 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2281 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Const(SynConst.Bool true,lhs parseState) 
                   )
# 2281 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8467 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2283 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2283 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8478 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2285 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2285 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynExpr));
# 8489 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2289 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Paren(_2, rhs parseState 1, Some(rhs parseState 3), rhs2 parseState 1 3) 
                   )
# 2289 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'beginEndExpr));
# 8500 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2291 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); exprFromParseError _2 
                   )
# 2291 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'beginEndExpr));
# 8512 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2293 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (* silent recovery *) arbExpr("beginEndExpr",(lhs parseState))  
                   )
# 2293 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'beginEndExpr));
# 8522 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2295 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             mkSynUnit (lhs parseState) 
                   )
# 2295 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'beginEndExpr));
# 8532 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2299 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              _2 (lhs parseState) true 
                   )
# 2299 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayExpr));
# 8543 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2301 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) true) 
                   )
# 2301 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayExpr));
# 8556 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2304 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList(true,[ ], lhs parseState) 
                   )
# 2304 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayExpr));
# 8566 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2306 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar());  
                             (* silent recovery *) 
                             exprFromParseError (SynExpr.ArrayOrList(true,[ ], rhs parseState 1)) 
                   )
# 2306 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayExpr));
# 8579 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2312 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynExpr.Const(SynConst.Unit,(rhs2 parseState 1 2)) 
                   )
# 2312 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8590 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2314 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let m = rhs2 parseState 1 3
                             SynExpr.Paren(_2 m, rhs parseState 1, Some(rhs parseState 3), m) 
                   )
# 2314 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8603 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_other_than_rparen_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2317 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 3)
                             SynExpr.Paren(exprFromParseError (_2 lhsm), rhs parseState 1, None, lhsm) 
                   )
# 2317 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8617 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2321 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             // silent recovery
                             SynExpr.Paren(arbExpr("parenExpr1",(rhs parseState 1)),(rhs parseState 1),Some(rhs parseState 3),(rhs2 parseState 1 3)) 
                   )
# 2321 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8629 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2324 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2tcs", lhsm) 
                   )
# 2324 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8641 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2328 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2mcs", lhsm) 
                   )
# 2328 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8653 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2332 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2rbcs", lhsm) 
                   )
# 2332 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8665 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2336 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2)
                             arbExpr("parenExpr2obecs", lhsm) 
                   )
# 2336 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8677 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2340 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             arbExpr("parenExpr2",(lhs parseState))  
                   )
# 2340 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExpr));
# 8689 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2352 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (fun _m -> _1) 
                   )
# 2352 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'parenExprBody));
# 8700 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2356 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_1] 
                   )
# 2356 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticallyKnownHeadTypars));
# 8711 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2358 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             List.rev _2 
                   )
# 2358 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticallyKnownHeadTypars));
# 8723 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2362 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _3 :: _1
                   )
# 2362 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 8735 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2364 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_1] 
                   )
# 2364 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 8746 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2368 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let m,r = _2 in r (rhs2 parseState 1 3) 
                   )
# 2368 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExpr));
# 8758 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2370 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            let m,r = _2 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            r (unionRanges (rhs parseState 1) m) 
                   )
# 2370 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExpr));
# 8773 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2375 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            // silent recovery 
                            arbExpr("braceExpr",rhs2 parseState 1 3)  
                   )
# 2375 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExpr));
# 8785 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2378 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            SynExpr.Record(None,None,[],rhs parseState 1) 
                   )
# 2378 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExpr));
# 8798 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2382 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let m = rhs2 parseState 1 2 
                             SynExpr.Record(None,None,[],m) 
                   )
# 2382 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExpr));
# 8810 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2387 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (lhs parseState), (fun m -> let a,b,c = _1 in SynExpr.Record(a,b,c,m)) 
                   )
# 2387 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExprBody));
# 8821 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2389 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m,r = _1 in (m, r false) 
                   )
# 2389 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'braceExprBody));
# 8832 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2393 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m,r = _1 in (m, r false) 
                   )
# 2393 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'monadicExprBody));
# 8843 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2397 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m,r = _1 in (fun lhsm isArray -> SynExpr.ArrayOrListOfSeqExpr(isArray, r true m, lhsm)) 
                   )
# 2397 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'listExprElements));
# 8854 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2399 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrList(isArray,[ ], lhsm)) 
                   )
# 2399 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'listExprElements));
# 8864 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2403 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1.Range, (fun isArrayOrList lhsm -> SynExpr.CompExpr(isArrayOrList,ref(isArrayOrList),_1,lhsm)) 
                   )
# 2403 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'monadicExprInitial));
# 8875 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2405 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2405 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'monadicExprInitial));
# 8886 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2409 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let opm = (rhs parseState 2)
                            (unionRanges _1.Range _3.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the Position of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that Position here
                                                                     match (mkSynInfix opm _1 ".." _3) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 2409 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rangeSequenceExpr));
# 8904 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2417 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (unionRanges _1.Range _5.Range),(fun _isArray wholem -> mkSynTrifix wholem ".. .." _1 _3 _5) 
                   )
# 2417 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rangeSequenceExpr));
# 8917 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2420 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                            let opm = (rhs parseState 2)
                            let e = arbExpr("rangeSeqError1", (rhs parseState 3))
                            (unionRanges _1.Range e.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the Position of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that Position here
                                                                     match (mkSynInfix opm _1 ".." e) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 2420 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rangeSequenceExpr));
# 8937 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2436 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynExpr.YieldOrReturn((true,false), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2436 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'monadicSingleLineQualifiersThenArrowThenExprR));
# 8948 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2442 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (_1, _3, true) 
                   )
# 2442 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopBinder));
# 8960 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2444 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m,r = _3 in (_1, r false m, true) 
                   )
# 2444 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopBinder));
# 8972 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2446 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder",(rhs parseState 2)), false) 
                   )
# 2446 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopBinder));
# 8985 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2449 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2",(rhs parseState 1)), false) 
                   )
# 2449 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopBinder));
# 8998 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2454 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (_1, _3) 
                   )
# 2454 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromLoopBinder));
# 9010 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2456 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m,r = _3 in (_1, r false m) 
                   )
# 2456 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromLoopBinder));
# 9022 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2458 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder",(rhs parseState 2))) 
                   )
# 2458 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromLoopBinder));
# 9035 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2461 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2",(rhs parseState 1))) 
                   )
# 2461 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromLoopBinder));
# 9048 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromTupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2466 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let exprs = _1
                             let exprs = exprs
                             _3 :: exprs 
                   )
# 2466 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromTupleExpr));
# 9062 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2479 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_1] 
                   )
# 2479 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromTupleExpr));
# 9073 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fromLoopBinder)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2481 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_3 ; _1] 
                   )
# 2481 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'fromTupleExpr));
# 9085 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2485 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             idOfPat (rhs parseState 1) _1,_3,_4,_5 
                   )
# 2485 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopRange));
# 9099 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2488 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                        _2 :: _1 
                   )
# 2488 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_curriedArgExprs));
# 9111 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2489 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 2489 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_curriedArgExprs));
# 9121 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2492 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            None 
                   )
# 2492 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_atomicExprAfterType));
# 9131 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2493 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                Some(_1) 
                   )
# 2493 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_atomicExprAfterType));
# 9142 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2497 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs parseState) | Some e -> e 
                            let l = List.rev _5
                            let dummyField = mkRecdField (LongIdentWithDots([], [])) // dummy identifier, it will be discarded
                            let l = rebindRanges (dummyField, None) l _6 
                            let (_, _, inheritsSep) = List.head l
                            let bindings = List.tail l
                            (Some (_2,arg,rhs2 parseState 2 4, inheritsSep, rhs parseState 1), None, bindings) 
                   )
# 2497 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9163 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2506 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            match _1 with 
                            
                            | LongOrSingleIdent(false, (LongIdentWithDots(_,_) as f),None,m) ->  
                                 let f = mkRecdField f
                                 let l = List.rev _4
                                 let l = rebindRanges (f, Some _3) l _5
                                 (None, None, l)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
# 2506 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9184 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2520 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           reportParseErrorAt m (FSComp.SR.parsFieldBinding())
                           let f = mkUnderscoreRecdField m
                           (None, None, [ f, None, None  ]) 
                   )
# 2520 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9198 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2527 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())      
                           let f = mkUnderscoreRecdField m
                           reportParseErrorAt (rhs2 parseState 1 2) (FSComp.SR.parsFieldBinding())
                           
                           (None, None, [f, None, None]) 
                   )
# 2527 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9213 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2536 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnderscoreInvalidFieldName())
                           let f = mkUnderscoreRecdField (rhs parseState 1)
                           let l = List.rev _4
                           let l = rebindRanges (f, Some _3) l _5
                           (None, None, l) 
                   )
# 2536 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9230 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2546 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 2546 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9246 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2551 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             (None,Some (_1, (rhs parseState 2, None)), []) 
                   )
# 2551 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9259 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2555 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 2555 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExpr));
# 9276 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2561 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     Some _1 
                   )
# 2561 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_seps_recd));
# 9287 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2562 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           None 
                   )
# 2562 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_seps_recd));
# 9297 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2565 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     (rhs parseState 1), None 
                   )
# 2565 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps_recd));
# 9307 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2566 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      let m = (rhs parseState 1) in (m, Some m) 
                   )
# 2566 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps_recd));
# 9317 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2567 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 1) 
                   )
# 2567 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps_recd));
# 9327 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2568 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 2) 
                   )
# 2568 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps_recd));
# 9337 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2574 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                mkRecdField _1 
                   )
# 2574 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'pathOrUnderscore));
# 9348 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2576 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           mkUnderscoreRecdField m 
                   )
# 2576 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'pathOrUnderscore));
# 9360 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2582 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (_3, Some _2) :: _1 
                   )
# 2582 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExprBindings));
# 9373 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2583 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            [] 
                   )
# 2583 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdExprBindings));
# 9383 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2587 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             (_1, Some _3) 
                   )
# 2587 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdBinding));
# 9395 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2589 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2589 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdBinding));
# 9409 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2594 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2594 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdBinding));
# 9424 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2599 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2599 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdBinding));
# 9438 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2604 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None)
                           
                   )
# 2604 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'recdBinding));
# 9453 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2617 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  true 
                   )
# 2617 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopDirection));
# 9463 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2618 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  false 
                   )
# 2618 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'forLoopDirection));
# 9473 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2624 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                          _1 
                   )
# 2624 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeWithTypeConstraints));
# 9484 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2628 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2628 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topTypeWithTypeConstraints));
# 9495 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2632 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            None 
                   )
# 2632 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 9505 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2634 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let ty,arity = _2 
                            let arity = (match arity with SynValInfo([],rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty,arity),rhs parseState 2)) 
                   )
# 2634 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 9518 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2640 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let dty,dmdata= _1 
                            let rty,(SynValInfo(dmdatas,rmdata)) = _3 
                            SynType.Fun(dty,rty,lhs parseState), (SynValInfo(dmdata::dmdatas, rmdata)) 
                   )
# 2640 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topType));
# 9532 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2644 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let ty,rmdata = _1 in ty, (SynValInfo([],(match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
# 2644 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topType));
# 9543 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2648 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let ty,mdata = _1 in let tys,mdatas = List.unzip _3 in (SynType.Tuple(List.map (fun ty -> (false,ty)) (ty ::tys), lhs parseState)),(mdata :: mdatas) 
                   )
# 2648 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topTupleType));
# 9555 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2650 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let ty,mdata = _1 in ty,[mdata] 
                   )
# 2650 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topTupleType));
# 9566 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2653 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 2653 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topTupleTypeElements));
# 9578 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2654 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                      [_1] 
                   )
# 2654 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topTupleTypeElements));
# 9589 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2659 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _3,SynArgInfo(false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 2659 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9603 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2663 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _4,SynArgInfo(true,Some _2) 
                   )
# 2663 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9615 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2665 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (_1,SynArgInfo(false,None)) 
                   )
# 2665 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9626 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2667 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _3,SynArgInfo(false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 2667 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9640 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2671 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _4,SynArgInfo(true,Some _2) 
                   )
# 2671 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9652 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2673 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1,SynArgInfo(false,None) 
                   )
# 2673 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topAppType));
# 9663 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2678 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 SynType.Fun(_1,_3,lhs parseState) 
                   )
# 2678 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynType));
# 9675 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2679 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                           _1 
                   )
# 2679 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynType));
# 9686 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2683 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                SynType.Tuple((false,_1) :: _3,lhs parseState) 
                   )
# 2683 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleType));
# 9698 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2686 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple((true, SynType.StaticConstant (SynConst.Int32 1, lhs parseState)):: _2, lhs parseState) 
                   )
# 2686 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleType));
# 9711 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2690 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                             SynType.Tuple((true,_1) :: _3, lhs parseState) 
                   )
# 2690 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleType));
# 9725 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2692 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                            _1 
                   )
# 2692 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleType));
# 9736 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2695 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                             (false,_1) :: _3 
                   )
# 2695 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleOrQuotTypeElements));
# 9748 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2697 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                             (true,_1) :: _3 
                   )
# 2697 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleOrQuotTypeElements));
# 9762 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2699 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                [(false,_1)] 
                   )
# 2699 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleOrQuotTypeElements));
# 9773 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2702 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                       _1 :: _3 
                   )
# 2702 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleTypeElements));
# 9785 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2703 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                [_1] 
                   )
# 2703 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'tupleTypeElements));
# 9796 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2707 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynType.LongIdent(_1) 
                   )
# 2707 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeCon));
# 9807 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2711 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, -(fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState)  
                   )
# 2711 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeConPower));
# 9822 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2715 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           _1 
                   )
# 2715 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeConPower));
# 9833 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2719 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                             let Position = lhs parseState
                             SynType.App(SynType.LongIdent(LongIdentWithDots([Ident("list", Position)], [])),
                                         None, [_2], [], None, true, Position)
                           
                   )
# 2719 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9848 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2725 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 2725 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9860 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2727 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 2727 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9872 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2729 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynType.App(_2, None, [_1], [], None, true, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 2729 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9884 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2731 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2731 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9899 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2735 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2735 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appType));
# 9910 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2739 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             1 
                   )
# 2739 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayTypeSuffix));
# 9920 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2741 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             2 
                   )
# 2741 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayTypeSuffix));
# 9930 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2743 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             3 
                   )
# 2743 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayTypeSuffix));
# 9940 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2745 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             4 
                   )
# 2745 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'arrayTypeSuffix));
# 9950 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2749 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let typeArgs, commas = _4 in _1 :: _3 :: List.rev typeArgs, (rhs parseState 2)::(List.rev commas) 
                   )
# 2749 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypePrefixArguments));
# 9963 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2753 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let typeArgs, commas = _1
                             _3 :: typeArgs, (rhs parseState 2)::commas 
                   )
# 2753 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeArgListElements));
# 9976 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2756 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [], [] 
                   )
# 2756 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeArgListElements));
# 9986 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2760 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           _1 
                   )
# 2760 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerType));
# 9997 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2762 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState) 
                   )
# 2762 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerType));
# 10012 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2766 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            SynType.MeasurePower(_1, - (fst _4), lhs parseState) 
                   )
# 2766 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerType));
# 10026 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2772 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 2772 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 10039 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2775 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 2775 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 10052 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2778 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let mWhole = unionRanges (rhs parseState 1) _2.Range  // note: use "rhs parseState 1" to deal with parens in "(int) list"
                             deprecatedWithError (FSComp.SR.parsNonAtomicType()) mWhole;
                             SynType.App(_2, None, [_1], [], None, true, mWhole) 
                   )
# 2778 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 10066 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2782 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 2782 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 10081 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2786 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2786 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 10092 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2791 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           _1 
                   )
# 2791 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 10103 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2793 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState) 
                   )
# 2793 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 10119 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2798 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            SynType.MeasurePower(_1, - (fst _4), lhs parseState) 
                   )
# 2798 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 10134 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2807 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2807 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10145 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2809 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynType.Anon (lhs parseState) 
                   )
# 2809 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10155 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2811 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _2 
                   )
# 2811 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10167 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2813 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                            _2 
                   )
# 2813 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10180 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2816 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynType.StaticConstant(_1, rhs parseState 1) 
                   )
# 2816 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10191 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2818 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let m = rhs parseState 1
                            SynType.StaticConstant(SynConst.String (null, m), m) 
                   )
# 2818 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10202 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2821 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynType.StaticConstant(SynConst.Bool false,lhs parseState) 
                   )
# 2821 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10212 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2823 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             SynType.StaticConstant(SynConst.Bool true,lhs parseState) 
                   )
# 2823 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10222 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2825 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (* silent recovery *) SynType.Anon (lhs parseState) 
                   )
# 2825 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10233 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2827 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mLessThan,mGreaterThan,args,commas,mWhole = _2 in SynType.App(_1, Some(mLessThan), args, commas, mGreaterThan, false, unionRanges _1.Range mWhole) 
                   )
# 2827 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10245 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2829 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            _1 
                   )
# 2829 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'atomType));
# 10258 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * bool     * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2835 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mLessThan, mGreaterThan, parsedOk, args, commas, mAll = _1
                            if parsedOk then // if someone has "foo<bar" without a closing greater-than, then the lexfilter does not introduce a HPA, even though it is adjacent
                                warning(Error(FSComp.SR.parsNonAdjacentTyargs(),rhs parseState 1))
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 2835 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * SynType list * Position list * Position));
# 10272 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Position * Position option * bool     * SynType list * Position list * Position)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2840 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let mLessThan, mGreaterThan, _, args, commas, mAll = _2
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 2840 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * SynType list * Position list * Position));
# 10284 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2845 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let typeArgs, commas = _5
                            (rhs parseState 1), Some(rhs parseState 6), true, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), lhs parseState 
                   )
# 2845 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10300 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2848 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _6 then 
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingGreaterThan())
                            let typeArgs, commas = _5
                            let nextToken = rhs parseState 6
                            let zeroWidthAtStartOfNextToken = nextToken
                            (rhs parseState 1), None, false, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 2848 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10322 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2858 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 4
                            let zeroWidthAtStartOfNextToken = nextToken
                            (rhs parseState 1), None, false, [_2], [rhs parseState 3], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 2858 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10338 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2864 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (rhs parseState 1), Some(rhs parseState 3), true, [_2], [], lhs parseState 
                   )
# 2864 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10351 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2866 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then 
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsMissingGreaterThan())
                            (rhs parseState 1), None, false, [_2], [], (rhs2 parseState 1 2) 
                   )
# 2866 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10368 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2873 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (rhs parseState 1), Some(rhs parseState 2), true, [], [], lhs parseState 
                   )
# 2873 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10380 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2875 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _2 then  
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsExpectedTypeAfterToken())
                            else
                                reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 2
                            let zeroWidthAtStartOfNextToken = nextToken
                            (rhs parseState 1), None, false, [], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 2875 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Position * Position option * bool     * SynType list * Position list * Position));
# 10398 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2885 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2885 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeArgActual));
# 10409 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2889 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2889 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 10420 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2894 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 2894 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeArg));
# 10433 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2896 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynMeasure.Anon (lhs parseState) 
                   )
# 2896 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeArg));
# 10445 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2900 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            SynMeasure.Named(_1.Lid, _1.Range) 
                   )
# 2900 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeAtom));
# 10456 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2903 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _2 
                   )
# 2903 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeAtom));
# 10468 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2907 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _1 
                   )
# 2907 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypePower));
# 10479 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2910 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, - (fst _3), lhs parseState)
                            else SynMeasure.Power(_1, fst _3, lhs parseState) 
                   )
# 2910 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypePower));
# 10494 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2915 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Power(_1, - (fst _4), lhs parseState) 
                   )
# 2915 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypePower));
# 10508 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2919 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
# 2919 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypePower));
# 10520 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2924 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           [_1] 
                   )
# 2924 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeSeq));
# 10531 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2926 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           _1 :: _2 
                   )
# 2926 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeSeq));
# 10543 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2930 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           SynMeasure.Seq(_1, lhs parseState) 
                   )
# 2930 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeExpr));
# 10554 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2932 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           SynMeasure.Product(_1, _3, lhs parseState) 
                   )
# 2932 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeExpr));
# 10566 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2934 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs parseState)
                           else SynMeasure.Divide(_1, _3, lhs parseState) 
                   )
# 2934 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeExpr));
# 10581 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2938 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs parseState) 
                   )
# 2938 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'measureTypeExpr));
# 10594 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2943 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             let id = mkSynId (lhs parseState) (_2).idText
                             Typar(id ,NoStaticReq,false) 
                   )
# 2943 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynTypar));
# 10606 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2946 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 2946 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : SynTypar));
# 10617 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2950 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            Typar(_2,HeadTypeStaticReq,false) 
                   )
# 2950 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'staticallyKnownHeadTypar));
# 10630 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2957 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            ident(_1,rhs parseState 1) 
                   )
# 2957 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : Ident));
# 10641 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2961 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([ident(MangledGlobalName,rhs parseState 1)],[]) 
                   )
# 2961 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 10651 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2963 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([Ident("Create", rhs parseState 1)],[]) 
                   )
# 2963 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 10661 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2965 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([_1],[]) 
                   )
# 2965 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 10672 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2967 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid @ [_3], dotms @ [rhs parseState 2]) 
                   )
# 2967 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 10684 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2969 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid, dotms @ [rhs parseState 2])  
                   )
# 2969 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 10697 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2974 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             ident(CompileOpName _2,rhs parseState 2) 
                   )
# 2974 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opName));
# 10709 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2976 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             reportParseErrorAt (lhs parseState) (FSComp.SR.parsErrorParsingAsOperatorName()); ident(CompileOpName "****",rhs parseState 2) 
                   )
# 2976 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opName));
# 10720 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2978 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             ident(CompileOpName "*",rhs parseState 1) 
                   )
# 2978 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opName));
# 10730 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2982 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let text = ("|"^String.concat "|" (List.rev _2) ^ "|")
                            ident(text,rhs2 parseState 2 3) 
                   )
# 2982 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opName));
# 10743 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2986 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let text = ("|"^String.concat "|" (List.rev _2) ^ ".|" )
                            ident(text,rhs2 parseState 2 5) 
                   )
# 2986 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opName));
# 10756 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2991 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not (IsValidPrefixOperatorDefinitionName _1) then 
                                 reportParseErrorAt (lhs parseState) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                             _1 
                   )
# 2991 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10769 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2994 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               _1 
                   )
# 2994 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10780 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2995 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                            _1 
                   )
# 2995 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10791 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2996 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                            _1 
                   )
# 2996 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10802 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2997 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                         _1 
                   )
# 2997 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10813 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2998 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        _1 
                   )
# 2998 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10824 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2999 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          _1 
                   )
# 2999 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10835 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3000 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 _1 
                   )
# 3000 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10846 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3001 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  "$" 
                   )
# 3001 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10856 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3002 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              _1 
                   )
# 3002 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10867 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3003 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 "-" 
                   )
# 3003 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10877 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3004 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                "*" 
                   )
# 3004 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10887 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3005 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  "=" 
                   )
# 3005 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10897 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3006 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              "or" 
                   )
# 3006 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10907 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3007 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                "<" 
                   )
# 3007 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10918 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3008 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   ">" 
                   )
# 3008 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10929 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3009 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 "?" 
                   )
# 3009 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10939 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3010 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               "&" 
                   )
# 3010 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10949 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3011 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   "&&" 
                   )
# 3011 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10959 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3012 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   "||" 
                   )
# 3012 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10969 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3013 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        ":=" 
                   )
# 3013 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10979 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3015 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                  deprecatedOperator (lhs parseState); 
                             _1 
                   )
# 3015 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 10992 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3018 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      _1 
                   )
# 3018 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 11003 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3019 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   ".." 
                   )
# 3019 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 11013 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3020 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                           ".. .." 
                   )
# 3020 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 11023 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3022 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                             fst _1 
                   )
# 3022 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'operatorName));
# 11036 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3027 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             if not (isUpper _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                             _1 
                   )
# 3027 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'barName));
# 11048 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3032 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             [_2] 
                   )
# 3032 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'barNames));
# 11059 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'barName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3034 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             _3 :: _1 
                   )
# 3034 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'barNames));
# 11071 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3038 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 3038 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'identOrOp));
# 11082 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3040 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            _1 
                   )
# 3040 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'identOrOp));
# 11093 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3046 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([_1],[]) 
                   )
# 3046 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 11104 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3048 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([_1],[]) 
                   )
# 3048 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 11115 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3050 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             LongIdentWithDots([Ident("Create", rhs parseState 1)],[]) 
                   )
# 3050 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 11125 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3052 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _3 
                            LongIdentWithDots(_1 :: lid, rhs parseState 2 :: dotms) 
                   )
# 3052 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 11138 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3055 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            (* silent recovery *) LongIdentWithDots([_1],[rhs parseState 2]) 
                   )
# 3055 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : LongIdentWithDots));
# 11149 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3060 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      _1 
                   )
# 3060 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'nameop));
# 11160 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3063 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3063 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topSeparator));
# 11170 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3064 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               
                   )
# 3064 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topSeparator));
# 11180 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3065 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3065 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topSeparator));
# 11190 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3068 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                            
                   )
# 3068 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topSeparators));
# 11201 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3069 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                      
                   )
# 3069 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'topSeparators));
# 11213 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3072 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3072 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interactiveSeparator));
# 11223 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3073 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3073 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interactiveSeparator));
# 11233 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3076 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                    
                   )
# 3076 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interactiveSeparators));
# 11244 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3077 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                      
                   )
# 3077 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'interactiveSeparators));
# 11256 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3080 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                                          
                   )
# 3080 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_interactiveSeparators));
# 11268 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3081 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                  
                   )
# 3081 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_interactiveSeparators));
# 11278 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3084 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                          
                   )
# 3084 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_topSeparators));
# 11290 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3085 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                
                   )
# 3085 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_topSeparators));
# 11300 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3088 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3088 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps));
# 11310 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3089 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3089 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps));
# 11320 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3090 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               
                   )
# 3090 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps));
# 11330 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3091 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                               
                   )
# 3091 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'seps));
# 11340 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3096 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                   )
# 3096 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'declEnd));
# 11350 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3098 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3098 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'declEnd));
# 11360 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3100 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                   )
# 3100 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'declEnd));
# 11370 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3105 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                   )
# 3105 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_declEnd));
# 11380 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3107 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                             
                   )
# 3107 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_declEnd));
# 11390 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3109 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                   )
# 3109 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_declEnd));
# 11400 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3111 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                            
                   )
# 3111 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_declEnd));
# 11410 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3114 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    
                   )
# 3114 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_ODECLEND));
# 11420 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3115 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    
                   )
# 3115 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_ODECLEND));
# 11430 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3118 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs parseState); () 
                   )
# 3118 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'deprecated_opt_equals));
# 11440 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3119 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      
                   )
# 3119 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'deprecated_opt_equals));
# 11450 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3122 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3122 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_OBLOCKSEP));
# 11460 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3123 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    
                   )
# 3123 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_OBLOCKSEP));
# 11470 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3126 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                
                   )
# 3126 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_seps));
# 11481 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3127 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                
                   )
# 3127 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_seps));
# 11491 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3130 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               true 
                   )
# 3130 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_rec));
# 11501 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3131 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               false 
                   )
# 3131 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_rec));
# 11511 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3134 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3134 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_bar));
# 11521 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3135 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3135 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_bar));
# 11531 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3138 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  0 
                   )
# 3138 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_inline));
# 11541 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3139 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  1 
                   )
# 3139 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_inline));
# 11551 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3140 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 2 
                   )
# 3140 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_inline));
# 11561 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3141 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     3 
                   )
# 3141 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_inline));
# 11571 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3142 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                      4 
                   )
# 3142 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_inline));
# 11581 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3143 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  5 
                   )
# 3143 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_inline));
# 11591 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3146 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   true 
                   )
# 3146 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_mutable));
# 11601 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3147 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   false 
                   )
# 3147 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_mutable));
# 11611 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3150 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     true 
                   )
# 3150 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_ref));
# 11621 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3151 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     false 
                   )
# 3151 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_ref));
# 11631 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3154 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3154 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'doToken));
# 11641 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3155 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3155 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'doToken));
# 11651 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3158 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                
                   )
# 3158 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'doneDeclEnd));
# 11661 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3159 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                    
                   )
# 3159 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'doneDeclEnd));
# 11671 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3162 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs parseState); 
                   )
# 3162 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'structOrBegin));
# 11681 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3163 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 
                   )
# 3163 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'structOrBegin));
# 11691 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3166 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 3166 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'sigOrBegin));
# 11701 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3167 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 
                   )
# 3167 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'sigOrBegin));
# 11711 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3170 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                 mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 3170 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'colonOrEquals));
# 11721 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3171 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  
                   )
# 3171 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'colonOrEquals));
# 11731 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3174 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                               
                   )
# 3174 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HASH));
# 11741 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3177 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                     
                   )
# 3177 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 11751 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3178 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                     
                   )
# 3178 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 11761 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3179 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                   )
# 3179 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 11771 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3182 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 
                   )
# 3182 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 11781 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3183 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                              
                   )
# 3183 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 11791 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3186 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                         _2 
                   )
# 3186 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'type_keyword));
# 11802 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3187 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        false 
                   )
# 3187 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'type_keyword));
# 11812 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3188 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                false 
                   )
# 3188 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'type_keyword));
# 11822 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3189 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                        true 
                   )
# 3189 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'type_keyword));
# 11832 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3190 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  false 
                   )
# 3190 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'type_keyword));
# 11842 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3193 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                             
                   )
# 3193 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'module_keyword));
# 11853 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3194 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          
                   )
# 3194 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'module_keyword));
# 11863 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3195 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  
                   )
# 3195 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'module_keyword));
# 11873 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3198 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                     
                   )
# 3198 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rbrace));
# 11884 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3199 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          
                   )
# 3199 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rbrace));
# 11894 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3200 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  
                   )
# 3200 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rbrace));
# 11904 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3203 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                     
                   )
# 3203 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rparen));
# 11915 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3204 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                          
                   )
# 3204 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rparen));
# 11925 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3205 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                  
                   )
# 3205 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'rparen));
# 11935 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3208 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                           
                   )
# 3208 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'oblockend));
# 11946 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3209 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                             
                   )
# 3209 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'oblockend));
# 11956 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3210 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                     
                   )
# 3210 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'oblockend));
# 11966 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3213 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                            false 
                   )
# 3213 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11976 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3214 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              false 
                   )
# 3214 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11986 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3215 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              false 
                   )
# 3215 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 11996 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3216 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 false 
                   )
# 3216 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 12006 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3217 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   _1 
                   )
# 3217 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 12017 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3220 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                            false 
                   )
# 3220 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 12027 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3221 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              false 
                   )
# 3221 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 12037 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3222 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              false 
                   )
# 3222 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 12047 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3223 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                              false 
                   )
# 3223 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 12057 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3224 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                                 false 
                   )
# 3224 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
# 12067 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3225 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                                   _1 
                   )
# 3225 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fsy"
                 : 'ends_coming_soon_or_recover));
|]
# 12079 "C:\Users\Mohamed Abbadi\Documents\GitHub\casanova-mk2\Casanova 2 - Optimizing standalone compiler\LexYacc\Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 226;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf : Program =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
