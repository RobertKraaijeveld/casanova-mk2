module Game

open "UnityEngine.dll"
open UnityEngine
open Ball 

worldEntity World = {
  //Field names : Type 
  MainCamera : MainCamera // Moving/controllable camera
  Balls : [Ball] // Ball collection

 
  //rule that spawns a ball when space is pressed
  rule Balls =
    //wait space to get pressed
    wait Input.GetKeyDown(KeyCode.Space) 

    //we append a new ball to the current collection of balls
    //we give to the new ball as arguments: current position of the camera and the 
    //forward direction of the camera
    yield new Ball(MainCamera.Position, MainCamera.Forward) :: Balls 
    
  //rule that filters the balls that are destroyed
  rule Balls = 
    yield
     [for b in Balls do // for each ball in the collection "balls"
      where (b.UnityBall.Destroyed = false) // if the ball is not destroyed
      select b] // we select it

  //World Constructor
  Create() =
    {
      Balls = []
      MainCamera = new MainCamera()
    }
  }



  entity MainCamera =
    {
      inherit UnityCamera // Inherits everything from the UnityCamera
      HorizontalSpeed : float32
      VerticalSpeed : float32
      MaxVelocity : float32 // Max camera movement velocity 

      //rule for moving left with the camera.We keep moving to the left as long as key A is pressed.
      rule Position =
        wait Input.GetKey(KeyCode.A)
        yield Position + Left * dt * MaxVelocity

      //rule for moving right with the camera. We keep moving to the right as long as key D is pressed.
      rule Position =
        wait Input.GetKey(KeyCode.D)
        yield Position + Right * dt * MaxVelocity

      //rule for moving forward with the camera. We keep moving to the forward as long as key W is pressed.
      rule Position =
        wait Input.GetKey(KeyCode.W)
        yield Position + Forward * dt * MaxVelocity 

      //rule for moving backward with the camera. We keep moving to the backword as long as key S is pressed.
      rule Position =
        wait Input.GetKey(KeyCode.S)
        yield Position + Backward * dt * MaxVelocity

      //rule for moving up with the camera. We keep moving to the up as long as key E is pressed.
      rule Position =
        wait Input.GetKey(KeyCode.E)
        yield Position + Up * dt * MaxVelocity

      //rule for moving down with the camera. We keep moving to the down as long as key Q is pressed.
      rule Position =
        wait Input.GetKey(KeyCode.Q)
        yield Position + Down * dt * MaxVelocity


      //Rule of current angle of the player camera
      rule Rotation =
        //We compute the directions towards which the mouse is moving by computing the delta between: the starting position
        //of the mouse, and its current position. This function is provided by unity.
        Quaternion.Euler(0.0f,Input.GetAxis("Mouse X") * HorizontalSpeed, 0.0f) *
        UnityCamera.Rotation * Quaternion.Euler(Input.GetAxis("Mouse Y") * VerticalSpeed, 0.0f, 0.0f)

      //MainCamera Constructor
      Create() = 
        {
          UnityCamera = UnityCamera.Find()//Finds the maincamera in the unity scene
          HorizontalSpeed = 2.0f
          VerticalSpeed = -2.0f
          MaxVelocity = 2.0f
      }

}