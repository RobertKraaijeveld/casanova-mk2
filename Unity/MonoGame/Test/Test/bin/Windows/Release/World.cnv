module AsteroidShooter

open @"C:\Users\Francesco\Documents\GitHub\casanova-mk2\Unity\MonoGame\Test\Test\bin\Windows\Release\MonoGame.Framework.dll"
open Microsoft.Xna.Framework
open Microsoft.Xna.Framework.Input
open System
open Utilities

worldEntity World = {
  Ships                         : [Ship]
  Asteroids                     : [Asteroid]
  ref CollidingAsteroids        : [Asteroid]
  ref CollidingProjectiles      : [Projectile]
  ref ColliderShipAsteroid      : [(Ship * Asteroid)]
  State                         : KeyboardState

  

  rule State = Keyboard.GetState()

  rule Asteroids =
    let randomPos = new Vector2(Random.RandFloat(0.0f, 1500.0f), -50.0f)
    let randomWait = Random.RandFloat(0.5f, 3.0f)
    yield (new Asteroid(randomPos)) :: Asteroids
    wait randomWait

  rule Asteroids =
    [for a in Asteroids do
     where (a.Position.Y < 1500.0f)
     select (a)]

  rule Asteroids =
    wait CollidingAsteroids.Count > 0
    yield
      [for a in Asteroids do
       for ca in CollidingAsteroids do
       where (a <> ca)
       select (a)]

  rule CollidingAsteroids =
    [for a in Asteroids do
     for s in Ships do
     for p in s.Projectiles do
     where (Vector2.Distance(a.Position, p.Position) < 150.0f)
     select (a)]


  rule ColliderShipAsteroid =
    [for a in Asteroids do
     for s in Ships do
     where (Vector2.Distance(a.Position, s.Position) < 150.0f)
     select (s,a)]

  rule ColliderShipAsteroid, Asteroids =
    wait ColliderShipAsteroid.Count > 0
    let updatedAsteroids =
      [for a in Asteroids do
       let colliders =
          [for c in ColliderShipAsteroid do
           where (c.Item2 = a)
           select (c.Item2)]
       where (colliders.Count = 0)
       select (a)]
    //wait dt
    yield [], updatedAsteroids

  rule Ships =
    [for s in Ships do
     where (s.Health > 0)
     select (s)]

  rule CollidingProjectiles =
    [for a in Asteroids do
     for s in Ships do
     for p in s.Projectiles do
     where (Vector2.Distance(a.Position, p.Position) < 150.0f)
     select (p)]

  Create() =
    {
      Ships                 = [new Ship(Vector2(Random.RandFloat(250.0f, 1500.0f), 1000.0f))]
      Asteroids             = []
      CollidingAsteroids    = []
      CollidingProjectiles  = []
      ColliderShipAsteroid  = []
      State                 = Keyboard.GetState()
    }
}

entity Ship = {
  Position    : Vector2
  Color       : Color
  Health      : int
  Projectiles : [Projectile]
  Score       : int

  rule Position =
    let vy = new Vector2(-300.0f, 0.0f)
    wait world.State.IsKeyDown(Keys.A)
    yield Position + vy * dt

  rule Position =
    let vy = new Vector2(300.0f, 0.0f)
    wait world.State.IsKeyDown(Keys.D)
    yield Position + vy * dt

  rule Projectiles =
    [for p in Projectiles do
     where (p.Position.Y > -50.0f)
     select (p)]

  rule Projectiles =
    wait world.State.IsKeyDown(Keys.Space)
    yield (new Projectile(Position, this)) :: Projectiles
    wait (not world.State.IsKeyDown(Keys.Space))

  rule Health =
    wait world.ColliderShipAsteroid.Count > 0
    let colliders =
      [for c in world.ColliderShipAsteroid do
       where (c.Item1 = this)
       select (c)]
    if (colliders.Count > 0) then
      yield Health - (colliders.Head.Item2.Damage)
    else
      yield Health

  rule Projectiles, Score =
    wait world.CollidingProjectiles.Count > 0
    let hits =
      [for p in Projectiles do
       for cp in world.CollidingProjectiles do
       where (p = cp && p.Owner = this)
       select (p)]
    let updatedProjs =
      [for p in Projectiles do
       let hits =
        [for cp in world.CollidingProjectiles do
         where (p = cp && p.Owner = this)
         select (p)]
       where (hits.Count = 0)
       select (p)]
    yield updatedProjs, Score +  hits.Count
    

  Create(p : Vector2) =
    {
      Position    = p
      Color       = new Color(Random.RandInt(0, 256), Random.RandInt(0, 256), Random.RandInt(0, 256))
      Health      = 100
      Projectiles = []
      Score       = 0
    }
}

entity Projectile = {
  
  Position    : Vector2
  ref Owner   : Ship

  rule Position = Position + (new Vector2(0.0f, -500.0f)) * dt

  Create(p : Vector2, owner : Ship) =
    {
      Position = p
      Owner    = owner
    }
}

entity Asteroid = {

  Position      : Vector2
  Damage        : int

  rule Position = Position + (new Vector2(0.0f, 250.0f)) * dt

  Create(p : Vector2) =
    {
      Position      = p
      Damage        = Random.RandInt(10,31)
    }
  }
