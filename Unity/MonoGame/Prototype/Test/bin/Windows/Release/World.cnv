module Prototype

open @"C:\Users\Francesco\Documents\GitHub\casanova-mk2\Unity\MonoGame\Prototype\Test\bin\Windows\Release\MonoGame.Framework.dll"
open Microsoft.Xna.Framework
open Microsoft.Xna.Framework.Input

worldEntity World = {

  Input: KeyboardState
  Ships : [Ship]

  rule Input = Keyboard.GetState()
  
  rule master Ships =
    let! ships = receive_many()
    yield Ships @ ships

  rule connecting Ships, Connected =
    send_reliable Ships
    yield Ships, true

  rule connected Ships =
    send_reliable Ships
    yield Ships

  Create() =
  {
    Input = Keyboard.GetState()
    Ships = [new Ship(new Vector2(0.0f,0.0f))]
  }

}

entity Ship = {

  Position: Vector2
  Color : Color

  rule master Position =
    let vy = new Vector2(-300.0f, 0.0f)
    wait world.Input.IsKeyDown(Keys.A)
    let v = Position + vy * dt
    send v
    yield v

  rule master Position =
    let vy = new Vector2(300.0f, 0.0f)
    wait world.Input.IsKeyDown(Keys.D)
    let p = (Position + vy * dt)
    send p
    yield p

  rule slave Position = yield receive()

  Create(p : Vector2) =
  {
    Position = p
    Color = new Color(0,0,155)
  }
}